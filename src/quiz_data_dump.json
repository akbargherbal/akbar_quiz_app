[
{
  "model": "auth.user",
  "pk": 1,
  "fields": {
    "password": "pbkdf2_sha256$720000$km5O3IcF3kwYLVKJurZScu$Qa/rTX9453ScdjUHpkd7utjnDeutmLn4eWTwYXLs998=",
    "last_login": "2025-04-12T05:03:32.784Z",
    "is_superuser": true,
    "username": "admin",
    "first_name": "",
    "last_name": "",
    "email": "",
    "is_staff": true,
    "is_active": true,
    "date_joined": "2025-04-12T04:48:04.570Z",
    "groups": [],
    "user_permissions": []
  }
},
{
  "model": "sessions.session",
  "pk": "6rx8w8k4kxe3b49wzpomotpg97omeaxu",
  "fields": {
    "session_data": ".eJxVjEsOwiAUAO_C2hA-hYJL9z0DebwHUjWQlHZlvLsh6UK3M5N5swDHXsLR0xZWYlcm2eWXRcBnqkPQA-q9cWx139bIR8JP2_nSKL1uZ_s3KNDL2GqhhJbGTckoORtBRDHnTNHaaOMMBkEiCpHR-QQknddoVRLgJmvRs88X3k04Iw:1u3T1g:IRIl6N2yVhDZyczJP6cFWVPYmdZmbWLdHFZDY-97xK0",
    "expire_date": "2025-04-26T05:03:32.791Z"
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 23,
  "fields": {
    "name": "Password Reset Forms",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 24,
  "fields": {
    "name": "Project Pipeline Stages",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 25,
  "fields": {
    "name": "Production Dependencies",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 26,
  "fields": {
    "name": "GCP IAM / Service Accounts",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 27,
  "fields": {
    "name": "Django Queryset Basics",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 28,
  "fields": {
    "name": "Django Signals Decoupling",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 29,
  "fields": {
    "name": "Django View Unit Testing",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 30,
  "fields": {
    "name": "Django Testing Complex",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 31,
  "fields": {
    "name": "Django Form Unit Testing",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 32,
  "fields": {
    "name": "Django Custom Template Tags",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 33,
  "fields": {
    "name": "Django Auth Views",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 34,
  "fields": {
    "name": "HTMX First Request",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 35,
  "fields": {
    "name": "HTMX SSE",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 36,
  "fields": {
    "name": "Alpine x-show / x-if",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 37,
  "fields": {
    "name": "Alpine Magic Properties",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 38,
  "fields": {
    "name": "Project Notifications Tech Stack",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 39,
  "fields": {
    "name": "GCP Django Rationale",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 40,
  "fields": {
    "name": "Beyond MVT Pattern",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 41,
  "fields": {
    "name": "App Engine Scaling",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 42,
  "fields": {
    "name": "App Engine Configuration",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 43,
  "fields": {
    "name": "Cloud Run Cost Benefits",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 44,
  "fields": {
    "name": "Container Benefits",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.topic",
  "pk": 45,
  "fields": {
    "name": "Login Redirection",
    "description": ""
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 38,
  "fields": {
    "title": "01 Django Authentication: Password Reset Forms - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:17:57.829Z",
    "updated_at": "2025-04-12T11:17:57.829Z",
    "is_active": true,
    "topics": [
      23
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 39,
  "fields": {
    "title": "01 Django Authentication: Password Reset Forms - Quiz 2",
    "description": "",
    "created_at": "2025-04-12T11:17:57.850Z",
    "updated_at": "2025-04-12T11:17:57.850Z",
    "is_active": true,
    "topics": [
      23
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 40,
  "fields": {
    "title": "02 LLM LED WEB DEV: Project Pipeline Stages - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:17:57.874Z",
    "updated_at": "2025-04-12T11:17:57.874Z",
    "is_active": true,
    "topics": [
      24
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 41,
  "fields": {
    "title": "03 Deployment App Engine: Production Dependencies - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true,
    "topics": [
      25
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 42,
  "fields": {
    "title": "04 Deployment Cloud Run: GCP IAM / Service Accounts - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:17:57.924Z",
    "updated_at": "2025-04-12T11:17:57.924Z",
    "is_active": true,
    "topics": [
      26
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 43,
  "fields": {
    "title": "01 Django Models Basics: Django Queryset Basics - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:18:21.900Z",
    "updated_at": "2025-04-12T11:18:21.900Z",
    "is_active": true,
    "topics": [
      27
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 44,
  "fields": {
    "title": "01 Django Models Basics: Django Queryset Basics - Quiz 2",
    "description": "",
    "created_at": "2025-04-12T11:18:21.923Z",
    "updated_at": "2025-04-12T11:18:21.923Z",
    "is_active": true,
    "topics": [
      27
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 45,
  "fields": {
    "title": "02 Django Models Advanced: Django Signals Decoupling - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:18:21.944Z",
    "updated_at": "2025-04-12T11:18:21.944Z",
    "is_active": true,
    "topics": [
      28
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 46,
  "fields": {
    "title": "02 Django Models Advanced: Django Signals Decoupling - Quiz 2",
    "description": "",
    "created_at": "2025-04-12T11:18:21.965Z",
    "updated_at": "2025-04-12T11:18:21.965Z",
    "is_active": true,
    "topics": [
      28
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 47,
  "fields": {
    "title": "03 Django Views Basics: Django View Unit Testing - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:18:21.990Z",
    "updated_at": "2025-04-12T11:18:21.990Z",
    "is_active": true,
    "topics": [
      29
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 48,
  "fields": {
    "title": "03 Django Views Basics: Django View Unit Testing - Quiz 2",
    "description": "",
    "created_at": "2025-04-12T11:18:22.012Z",
    "updated_at": "2025-04-12T11:18:22.012Z",
    "is_active": true,
    "topics": [
      29
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 49,
  "fields": {
    "title": "04 Django Views Advanced: Django Testing Complex - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:18:22.045Z",
    "updated_at": "2025-04-12T11:18:22.045Z",
    "is_active": true,
    "topics": [
      30
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 50,
  "fields": {
    "title": "04 Django Views Advanced: Django Testing Complex - Quiz 2",
    "description": "",
    "created_at": "2025-04-12T11:18:22.068Z",
    "updated_at": "2025-04-12T11:18:22.068Z",
    "is_active": true,
    "topics": [
      30
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 51,
  "fields": {
    "title": "05 Django Forms: Django Form Unit Testing - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:18:22.093Z",
    "updated_at": "2025-04-12T11:18:22.093Z",
    "is_active": true,
    "topics": [
      31
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 52,
  "fields": {
    "title": "05 Django Forms: Django Form Unit Testing - Quiz 2",
    "description": "",
    "created_at": "2025-04-12T11:18:22.115Z",
    "updated_at": "2025-04-12T11:18:22.115Z",
    "is_active": true,
    "topics": [
      31
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 53,
  "fields": {
    "title": "06 Django Templates: Django Custom Template Tags - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:18:22.136Z",
    "updated_at": "2025-04-12T11:18:22.136Z",
    "is_active": true,
    "topics": [
      32
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 54,
  "fields": {
    "title": "06 Django Templates: Django Custom Template Tags - Quiz 2",
    "description": "",
    "created_at": "2025-04-12T11:18:22.158Z",
    "updated_at": "2025-04-12T11:18:22.158Z",
    "is_active": true,
    "topics": [
      32
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 55,
  "fields": {
    "title": "07 Django Auth and Security: Django Auth Views - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:18:22.187Z",
    "updated_at": "2025-04-12T11:18:22.187Z",
    "is_active": true,
    "topics": [
      33
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 56,
  "fields": {
    "title": "07 Django Auth and Security: Django Auth Views - Quiz 2",
    "description": "",
    "created_at": "2025-04-12T11:18:22.210Z",
    "updated_at": "2025-04-12T11:18:22.210Z",
    "is_active": true,
    "topics": [
      33
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 57,
  "fields": {
    "title": "08 HTMX Integration Basics: HTMX First Request - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:18:22.233Z",
    "updated_at": "2025-04-12T11:18:22.233Z",
    "is_active": true,
    "topics": [
      34
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 58,
  "fields": {
    "title": "08 HTMX Integration Basics: HTMX First Request - Quiz 2",
    "description": "",
    "created_at": "2025-04-12T11:18:22.256Z",
    "updated_at": "2025-04-12T11:18:22.256Z",
    "is_active": true,
    "topics": [
      34
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 59,
  "fields": {
    "title": "09 HTMX Advanced Patterns: HTMX SSE - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:18:22.280Z",
    "updated_at": "2025-04-12T11:18:22.280Z",
    "is_active": true,
    "topics": [
      35
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 60,
  "fields": {
    "title": "09 HTMX Advanced Patterns: HTMX SSE - Quiz 2",
    "description": "",
    "created_at": "2025-04-12T11:18:22.303Z",
    "updated_at": "2025-04-12T11:18:22.303Z",
    "is_active": true,
    "topics": [
      35
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 61,
  "fields": {
    "title": "10 AlpineJS Basics: Alpine x-show / x-if - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:18:22.327Z",
    "updated_at": "2025-04-12T11:18:22.327Z",
    "is_active": true,
    "topics": [
      36
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 62,
  "fields": {
    "title": "10 AlpineJS Basics: Alpine x-show / x-if - Quiz 2",
    "description": "",
    "created_at": "2025-04-12T11:18:22.349Z",
    "updated_at": "2025-04-12T11:18:22.349Z",
    "is_active": true,
    "topics": [
      36
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 63,
  "fields": {
    "title": "11 AlpineJS Advanced with Django and HTMX: Alpine Magic Properties - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:18:22.372Z",
    "updated_at": "2025-04-12T11:18:22.372Z",
    "is_active": true,
    "topics": [
      37
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 64,
  "fields": {
    "title": "11 AlpineJS Advanced with Django and HTMX: Alpine Magic Properties - Quiz 2",
    "description": "",
    "created_at": "2025-04-12T11:18:22.394Z",
    "updated_at": "2025-04-12T11:18:22.394Z",
    "is_active": true,
    "topics": [
      37
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 65,
  "fields": {
    "title": "12 Full Stack Django HTMX AlpineJS: Project Notifications Tech Stack - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:18:22.416Z",
    "updated_at": "2025-04-12T11:18:22.416Z",
    "is_active": true,
    "topics": [
      38
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 66,
  "fields": {
    "title": "13 Django on GCP: GCP Django Rationale - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:18:22.441Z",
    "updated_at": "2025-04-12T11:18:22.441Z",
    "is_active": true,
    "topics": [
      39
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 67,
  "fields": {
    "title": "13 Django on GCP: GCP Django Rationale - Quiz 2",
    "description": "",
    "created_at": "2025-04-12T11:18:22.463Z",
    "updated_at": "2025-04-12T11:18:22.463Z",
    "is_active": true,
    "topics": [
      39
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 68,
  "fields": {
    "title": "14 Django Infrastructure and Config: Beyond MVT Pattern - Quiz 1",
    "description": "",
    "created_at": "2025-04-12T11:18:22.488Z",
    "updated_at": "2025-04-12T11:18:22.488Z",
    "is_active": true,
    "topics": [
      40
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 69,
  "fields": {
    "title": "14 Django Infrastructure and Config: Beyond MVT Pattern - Quiz 2",
    "description": "",
    "created_at": "2025-04-12T11:18:22.511Z",
    "updated_at": "2025-04-12T11:18:22.511Z",
    "is_active": true,
    "topics": [
      40
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 70,
  "fields": {
    "title": "01 Advanced App Engine: App Engine Scaling - Quiz 1",
    "description": "",
    "created_at": "2025-04-13T16:05:48.747Z",
    "updated_at": "2025-04-13T16:05:48.747Z",
    "is_active": true,
    "topics": [
      41
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 71,
  "fields": {
    "title": "02 Basic App Engine: App Engine Configuration - Quiz 1",
    "description": "",
    "created_at": "2025-04-13T16:05:48.773Z",
    "updated_at": "2025-04-13T16:05:48.773Z",
    "is_active": true,
    "topics": [
      42
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 72,
  "fields": {
    "title": "03 Cloud Run 01: Cloud Run Cost Benefits - Quiz 1",
    "description": "",
    "created_at": "2025-04-13T16:05:48.798Z",
    "updated_at": "2025-04-13T16:05:48.798Z",
    "is_active": true,
    "topics": [
      43
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 73,
  "fields": {
    "title": "04 Cloud Run 02: Container Benefits - Quiz 1",
    "description": "",
    "created_at": "2025-04-13T16:05:48.823Z",
    "updated_at": "2025-04-13T16:05:48.823Z",
    "is_active": true,
    "topics": [
      44
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 74,
  "fields": {
    "title": "05 Essential Django Authentication and Authorization: Login Redirection - Quiz 1",
    "description": "",
    "created_at": "2025-04-13T16:05:48.851Z",
    "updated_at": "2025-04-13T16:05:48.851Z",
    "is_active": true,
    "topics": [
      45
    ]
  }
},
{
  "model": "multi_choice_quiz.quiz",
  "pk": 75,
  "fields": {
    "title": "05 Essential Django Authentication and Authorization: Login Redirection - Quiz 2",
    "description": "",
    "created_at": "2025-04-13T16:05:48.873Z",
    "updated_at": "2025-04-13T16:05:48.873Z",
    "is_active": true,
    "topics": [
      45
    ]
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 721,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "What is the purpose of setting `SESSION_COOKIE_HTTPONLY = True` in Django settings?",
    "chapter_no": "1",
    "tag": "",
    "position": 1,
    "created_at": "2025-04-12T11:17:57.829Z",
    "updated_at": "2025-04-12T11:17:57.829Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 722,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "What two middleware components listed in `settings.py` are essential for Django's authentication system to function correctly?",
    "chapter_no": "1",
    "tag": "",
    "position": 2,
    "created_at": "2025-04-12T11:17:57.829Z",
    "updated_at": "2025-04-12T11:17:57.829Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 723,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "What is a common method for implementing Two-Factor Authentication (2FA) in Django, often involving a mobile authenticator app?",
    "chapter_no": "1",
    "tag": "",
    "position": 3,
    "created_at": "2025-04-12T11:17:57.829Z",
    "updated_at": "2025-04-12T11:17:57.829Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 724,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "What is the recommended approach when you need to check complex, object-level permissions within a template (e.g., \"can this user edit this specific article\")?",
    "chapter_no": "1",
    "tag": "",
    "position": 4,
    "created_at": "2025-04-12T11:17:57.829Z",
    "updated_at": "2025-04-12T11:17:57.829Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 725,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "What is session fixation, and how does Django help prevent it by default during login?",
    "chapter_no": "1",
    "tag": "",
    "position": 5,
    "created_at": "2025-04-12T11:17:57.829Z",
    "updated_at": "2025-04-12T11:17:57.829Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 726,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "Which Django method should always be used to create new standard users programmatically to ensure passwords are properly hashed?",
    "chapter_no": "1",
    "tag": "",
    "position": 6,
    "created_at": "2025-04-12T11:17:57.829Z",
    "updated_at": "2025-04-12T11:17:57.829Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 727,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "What is the primary purpose of the `AUTH_PASSWORD_VALIDATORS` setting in Django?",
    "chapter_no": "1",
    "tag": "",
    "position": 7,
    "created_at": "2025-04-12T11:17:57.829Z",
    "updated_at": "2025-04-12T11:17:57.829Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 728,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "What is a primary advantage of using middleware for authentication checks compared to using decorators or mixins on individual views?",
    "chapter_no": "1",
    "tag": "",
    "position": 8,
    "created_at": "2025-04-12T11:17:57.829Z",
    "updated_at": "2025-04-12T11:17:57.829Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 729,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "When using a custom user model specified by `AUTH_USER_MODEL`, how should you refer to the User model in ForeignKey definitions within your `models.py` files?",
    "chapter_no": "1",
    "tag": "",
    "position": 9,
    "created_at": "2025-04-12T11:17:57.829Z",
    "updated_at": "2025-04-12T11:17:57.829Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 730,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "What is the primary benefit of using `django-axes` or a similar package for handling failed login attempts compared to a simple cache-based rate limiter?",
    "chapter_no": "1",
    "tag": "",
    "position": 10,
    "created_at": "2025-04-12T11:17:57.829Z",
    "updated_at": "2025-04-12T11:17:57.829Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 731,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "Why is it important to log authentication events like successful logins, failed attempts, and password changes?",
    "chapter_no": "1",
    "tag": "",
    "position": 11,
    "created_at": "2025-04-12T11:17:57.829Z",
    "updated_at": "2025-04-12T11:17:57.829Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 732,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "What Django form class is specifically designed for handling user registration, including password validation and hashing?",
    "chapter_no": "1",
    "tag": "",
    "position": 12,
    "created_at": "2025-04-12T11:17:57.829Z",
    "updated_at": "2025-04-12T11:17:57.829Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 733,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "Which decorator should you use if you need to restrict access to a view based on a custom condition beyond simply being logged in (e.g., checking if `user.is_staff` is True)?",
    "chapter_no": "1",
    "tag": "",
    "position": 13,
    "created_at": "2025-04-12T11:17:57.840Z",
    "updated_at": "2025-04-12T11:17:57.840Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 734,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "What is a key security consideration when using token-based authentication where tokens are stored in the client's browser (e.g., localStorage)?",
    "chapter_no": "1",
    "tag": "",
    "position": 14,
    "created_at": "2025-04-12T11:17:57.840Z",
    "updated_at": "2025-04-12T11:17:57.840Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 735,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "What protocol is commonly used for implementing enterprise Single Sign-On (SSO) where a central Identity Provider (IdP) authenticates users for multiple Service Providers (SPs), often involving XML-based assertions?",
    "chapter_no": "1",
    "tag": "",
    "position": 15,
    "created_at": "2025-04-12T11:17:57.840Z",
    "updated_at": "2025-04-12T11:17:57.840Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 736,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "What is the primary purpose of the `{% csrf_token %}` template tag in Django forms?",
    "chapter_no": "1",
    "tag": "",
    "position": 16,
    "created_at": "2025-04-12T11:17:57.840Z",
    "updated_at": "2025-04-12T11:17:57.840Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 737,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "When subclassing `AbstractBaseUser` for a custom user model, which attribute must you define to specify the field used as the unique identifier for authentication?",
    "chapter_no": "1",
    "tag": "",
    "position": 17,
    "created_at": "2025-04-12T11:17:57.842Z",
    "updated_at": "2025-04-12T11:17:57.842Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 738,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "What is a common pattern for adding extra, non-authentication-related user information without modifying the core User model, especially in existing projects?",
    "chapter_no": "1",
    "tag": "",
    "position": 18,
    "created_at": "2025-04-12T11:17:57.842Z",
    "updated_at": "2025-04-12T11:17:57.842Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 739,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "What is the purpose of rate limiting login attempts in an authentication system?",
    "chapter_no": "1",
    "tag": "",
    "position": 19,
    "created_at": "2025-04-12T11:17:57.842Z",
    "updated_at": "2025-04-12T11:17:57.842Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 740,
  "fields": {
    "quiz": 38,
    "topic": 23,
    "text": "Which Django form class should be used to allow users to initiate the password reset process by entering their email address?",
    "chapter_no": "1",
    "tag": "",
    "position": 20,
    "created_at": "2025-04-12T11:17:57.844Z",
    "updated_at": "2025-04-12T11:17:57.844Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 741,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "What is the main purpose of Django's password validation framework (configured via `AUTH_PASSWORD_VALIDATORS`)?",
    "chapter_no": "1",
    "tag": "",
    "position": 1,
    "created_at": "2025-04-12T11:17:57.856Z",
    "updated_at": "2025-04-12T11:17:57.856Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 742,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "What is the typical flow for social authentication (e.g., \"Login with Google\") using a library like `social-auth-app-django`?",
    "chapter_no": "1",
    "tag": "",
    "position": 2,
    "created_at": "2025-04-12T11:17:57.856Z",
    "updated_at": "2025-04-12T11:17:57.856Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 743,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "What is the default session engine used by Django (`SESSION_ENGINE = 'django.contrib.sessions.backends.db'`) primarily responsible for?",
    "chapter_no": "1",
    "tag": "",
    "position": 3,
    "created_at": "2025-04-12T11:17:57.856Z",
    "updated_at": "2025-04-12T11:17:57.856Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 744,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "What is the purpose of the `AUTHENTICATION_BACKENDS` setting in Django's `settings.py`?",
    "chapter_no": "1",
    "tag": "",
    "position": 4,
    "created_at": "2025-04-12T11:17:57.858Z",
    "updated_at": "2025-04-12T11:17:57.858Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 745,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "Which two core functions from `django.contrib.auth` are demonstrated in the basic login view example for verifying credentials and establishing a user session?",
    "chapter_no": "1",
    "tag": "",
    "position": 5,
    "created_at": "2025-04-12T11:17:57.858Z",
    "updated_at": "2025-04-12T11:17:57.858Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 746,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "How should CSRF tokens be handled when making AJAX POST requests from JavaScript in a Django application?",
    "chapter_no": "1",
    "tag": "",
    "position": 6,
    "created_at": "2025-04-12T11:17:57.858Z",
    "updated_at": "2025-04-12T11:17:57.858Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 747,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "In a multi-tenant Django application using a shared database, what is the common mechanism used to isolate data belonging to different tenants?",
    "chapter_no": "1",
    "tag": "",
    "position": 7,
    "created_at": "2025-04-12T11:17:57.858Z",
    "updated_at": "2025-04-12T11:17:57.858Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 748,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "Which base class should you inherit from when creating a custom user model if you want to keep most of the default User model's fields and behavior but add your own custom fields?",
    "chapter_no": "1",
    "tag": "",
    "position": 8,
    "created_at": "2025-04-12T11:17:57.858Z",
    "updated_at": "2025-04-12T11:17:57.858Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 749,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "In Django testing, what is the purpose of `self.client.force_login(user)`?",
    "chapter_no": "1",
    "tag": "",
    "position": 9,
    "created_at": "2025-04-12T11:17:57.858Z",
    "updated_at": "2025-04-12T11:17:57.858Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 750,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "When testing authentication flows involving email (like password reset or email verification), what utility from `django.core` is commonly used to check if emails were sent and inspect their content?",
    "chapter_no": "1",
    "tag": "",
    "position": 10,
    "created_at": "2025-04-12T11:17:57.858Z",
    "updated_at": "2025-04-12T11:17:57.858Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 751,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "Which built-in Django class-based view is commonly used to handle user login?",
    "chapter_no": "1",
    "tag": "",
    "position": 11,
    "created_at": "2025-04-12T11:17:57.858Z",
    "updated_at": "2025-04-12T11:17:57.858Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 752,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "What is the primary benefit of using Django's `Group` model for managing permissions?",
    "chapter_no": "1",
    "tag": "",
    "position": 12,
    "created_at": "2025-04-12T11:17:57.858Z",
    "updated_at": "2025-04-12T11:17:57.858Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 753,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "What is the primary role of the `authenticate()` function in Django's authentication flow?",
    "chapter_no": "1",
    "tag": "",
    "position": 13,
    "created_at": "2025-04-12T11:17:57.858Z",
    "updated_at": "2025-04-12T11:17:57.858Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 754,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "How can you check if a user has a specific permission within a Django template?",
    "chapter_no": "1",
    "tag": "",
    "position": 14,
    "created_at": "2025-04-12T11:17:57.858Z",
    "updated_at": "2025-04-12T11:17:57.858Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 755,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "By default, Django automatically creates four permissions for each model defined in your application. What are these four permissions?",
    "chapter_no": "1",
    "tag": "",
    "position": 15,
    "created_at": "2025-04-12T11:17:57.858Z",
    "updated_at": "2025-04-12T11:17:57.858Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 756,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "When implementing password history validation (preventing reuse of old passwords), why is it necessary to store the *hashed* versions of previous passwords, rather than plaintext?",
    "chapter_no": "1",
    "tag": "",
    "position": 16,
    "created_at": "2025-04-12T11:17:57.858Z",
    "updated_at": "2025-04-12T11:17:57.858Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 757,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "What is the equivalent of the `@login_required` decorator for protecting class-based views in Django?",
    "chapter_no": "1",
    "tag": "",
    "position": 17,
    "created_at": "2025-04-12T11:17:57.866Z",
    "updated_at": "2025-04-12T11:17:57.866Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 758,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "What is the primary difference between authentication and authorization in the context of web applications like Django?",
    "chapter_no": "1",
    "tag": "",
    "position": 18,
    "created_at": "2025-04-12T11:17:57.866Z",
    "updated_at": "2025-04-12T11:17:57.866Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 759,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "Which decorator is the simplest way to protect a function-based view so that only authenticated users can access it?",
    "chapter_no": "1",
    "tag": "",
    "position": 19,
    "created_at": "2025-04-12T11:17:57.866Z",
    "updated_at": "2025-04-12T11:17:57.866Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 760,
  "fields": {
    "quiz": 39,
    "topic": 23,
    "text": "What is the purpose of the `LOGIN_REDIRECT_URL` setting in Django?",
    "chapter_no": "1",
    "tag": "",
    "position": 20,
    "created_at": "2025-04-12T11:17:57.866Z",
    "updated_at": "2025-04-12T11:17:57.866Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 761,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "In the Project Template, what is the key deliverable or outcome expected at the end of Stage 5.1 (Implementing HTMX Interactions)?",
    "chapter_no": "2",
    "tag": "",
    "position": 1,
    "created_at": "2025-04-12T11:17:57.874Z",
    "updated_at": "2025-04-12T11:17:57.874Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 762,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "What is the primary goal of Stage 2.1 (Static Mockup) in the Project Template pipeline?",
    "chapter_no": "2",
    "tag": "",
    "position": 2,
    "created_at": "2025-04-12T11:17:57.874Z",
    "updated_at": "2025-04-12T11:17:57.874Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 763,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "What is the main purpose of ARIA attributes in web development, as explained in the appendix and illustrated in APPENDIX_B.html?",
    "chapter_no": "2",
    "tag": "",
    "position": 3,
    "created_at": "2025-04-12T11:17:57.874Z",
    "updated_at": "2025-04-12T11:17:57.874Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 764,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "The concept of \"Semantic HTML,\" illustrated in APPENDIX_B.html, involves using HTML elements like <code>nav</code>, <code>article</code>, or <code>button</code>. What is a primary benefit of this practice?",
    "chapter_no": "2",
    "tag": "",
    "position": 4,
    "created_at": "2025-04-12T11:17:57.883Z",
    "updated_at": "2025-04-12T11:17:57.883Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 765,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "What is the primary function of a \"Linter\" like Ruff, ESLint, or Stylelint, as defined in the appendix?",
    "chapter_no": "2",
    "tag": "",
    "position": 5,
    "created_at": "2025-04-12T11:17:57.883Z",
    "updated_at": "2025-04-12T11:17:57.883Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 766,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "According to the appendix, what is the benefit of using Django's ORM (Object-Relational Mapper)?",
    "chapter_no": "2",
    "tag": "",
    "position": 6,
    "created_at": "2025-04-12T11:17:57.883Z",
    "updated_at": "2025-04-12T11:17:57.883Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 767,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "What does the term \"Responsive Design\" mean in the context of web development?",
    "chapter_no": "2",
    "tag": "",
    "position": 7,
    "created_at": "2025-04-12T11:17:57.883Z",
    "updated_at": "2025-04-12T11:17:57.883Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 768,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "Which phase in the Project Template focuses specifically on adding client-side interactivity using Alpine.js, initially with hardcoded data?",
    "chapter_no": "2",
    "tag": "",
    "position": 8,
    "created_at": "2025-04-12T11:17:57.883Z",
    "updated_at": "2025-04-12T11:17:57.883Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 769,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "Why is \"Automated Verification\" a core principle of the LLM-Led Project Template?",
    "chapter_no": "2",
    "tag": "",
    "position": 9,
    "created_at": "2025-04-12T11:17:57.883Z",
    "updated_at": "2025-04-12T11:17:57.883Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 770,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "In the Project Template's Phase 4 (Backend Integration), what is the objective of Stage 4.1 (Django Template Integration)?",
    "chapter_no": "2",
    "tag": "",
    "position": 10,
    "created_at": "2025-04-12T11:17:57.883Z",
    "updated_at": "2025-04-12T11:17:57.883Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 771,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "According to the appendix, what is the DOM (Document Object Model)?",
    "chapter_no": "2",
    "tag": "",
    "position": 11,
    "created_at": "2025-04-12T11:17:57.883Z",
    "updated_at": "2025-04-12T11:17:57.883Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 772,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "What is the primary goal of the LLM Development Pipeline described in the README.md?",
    "chapter_no": "2",
    "tag": "",
    "position": 12,
    "created_at": "2025-04-12T11:17:57.883Z",
    "updated_at": "2025-04-12T11:17:57.883Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 773,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "What is the purpose of checking \"Color Contrast\" as demonstrated in APPENDIX_B.html?",
    "chapter_no": "2",
    "tag": "",
    "position": 13,
    "created_at": "2025-04-12T11:17:57.888Z",
    "updated_at": "2025-04-12T11:17:57.888Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 774,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "The APPENDIX_B.html file shows an example of a \"Disclosure Widget\" (Show/Hide Panel). Why is using a proper <code>&lt;button&gt;</code> element with <code>aria-expanded</code> and <code>aria-controls</code> better than using a styled <code>&lt;div&gt;</code> with a click handler?",
    "chapter_no": "2",
    "tag": "",
    "position": 14,
    "created_at": "2025-04-12T11:17:57.888Z",
    "updated_at": "2025-04-12T11:17:57.888Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 775,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "Which tool is primarily used in the template for End-to-End (E2E) testing, simulating real user actions in a browser?",
    "chapter_no": "2",
    "tag": "",
    "position": 15,
    "created_at": "2025-04-12T11:17:57.888Z",
    "updated_at": "2025-04-12T11:17:57.888Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 776,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "According to the \"Guiding Principles\" in the Project Template, what is \"Incremental Development\"?",
    "chapter_no": "2",
    "tag": "",
    "position": 16,
    "created_at": "2025-04-12T11:17:57.888Z",
    "updated_at": "2025-04-12T11:17:57.888Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 777,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "What role does Alpine.js typically play in the Django/HTMX stack described in the appendix?",
    "chapter_no": "2",
    "tag": "",
    "position": 17,
    "created_at": "2025-04-12T11:17:57.888Z",
    "updated_at": "2025-04-12T11:17:57.888Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 778,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "In the context of the Project Template, what is the primary purpose of HTMX?",
    "chapter_no": "2",
    "tag": "",
    "position": 18,
    "created_at": "2025-04-12T11:17:57.888Z",
    "updated_at": "2025-04-12T11:17:57.888Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 779,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "What does the Django management command <code>python manage.py check</code> do?",
    "chapter_no": "2",
    "tag": "",
    "position": 19,
    "created_at": "2025-04-12T11:17:57.888Z",
    "updated_at": "2025-04-12T11:17:57.888Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 780,
  "fields": {
    "quiz": 40,
    "topic": 24,
    "text": "What type of testing involves checking the interaction *between* different parts of the system, such as a Django view fetching data from a model and passing it to a template?",
    "chapter_no": "2",
    "tag": "",
    "position": 20,
    "created_at": "2025-04-12T11:17:57.888Z",
    "updated_at": "2025-04-12T11:17:57.888Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 781,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "What is the purpose of setting the <code>ENVIRONMENT</code> environment variable to <code>'production'</code> in <code>app.yaml</code>?",
    "chapter_no": "3",
    "tag": "",
    "position": 1,
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 782,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "What is a major limitation mentioned for using SQLite stored in GCS and fetched to <code>/tmp</code> on App Engine?",
    "chapter_no": "3",
    "tag": "",
    "position": 2,
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 783,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "What command is used to gather all Django static files into the directory specified by <code>STATIC_ROOT</code> before uploading them?",
    "chapter_no": "3",
    "tag": "",
    "position": 3,
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 784,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "What identity does your App Engine application use by default when accessing other GCP services like Cloud Storage or Secret Manager?",
    "chapter_no": "3",
    "tag": "",
    "position": 4,
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 785,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "What file should you create in your project root to prevent uploading unnecessary files (like virtual environments or local databases) during deployment?",
    "chapter_no": "3",
    "tag": "",
    "position": 5,
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 786,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "What is the purpose of the <code>appengine_startup.py</code> script in the described deployment strategy?",
    "chapter_no": "3",
    "tag": "",
    "position": 6,
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 787,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "Which client library, listed in <code>requirements.txt</code>, allows your Django application to fetch the <code>SECRET_KEY</code> from GCP Secret Manager?",
    "chapter_no": "3",
    "tag": "",
    "position": 7,
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 788,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "According to the guide, why is the Django development server (<code>python manage.py runserver</code>) not suitable for production deployment?",
    "chapter_no": "3",
    "tag": "",
    "position": 8,
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 789,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "How are database updates (schema changes via migrations or data additions) handled with the SQLite-on-GCS strategy described in the guide?",
    "chapter_no": "3",
    "tag": "",
    "position": 9,
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 790,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "Why is it crucial to bind Gunicorn to <code>:$PORT</code> in the <code>app.yaml</code> entrypoint command (e.g., <code>gunicorn -b :$PORT ...</code>)?",
    "chapter_no": "3",
    "tag": "",
    "position": 10,
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 791,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "In the <code>app.yaml</code> file, what does the <code>entrypoint</code> directive typically define?",
    "chapter_no": "3",
    "tag": "",
    "position": 11,
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 792,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "What minimal IAM role does the App Engine service account need on the private GCS bucket holding the SQLite database to allow the <code>appengine_startup.py</code> script to download it?",
    "chapter_no": "3",
    "tag": "",
    "position": 12,
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 793,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "What is the recommended approach in the guide for serving static files (CSS, JS, images) in production on App Engine?",
    "chapter_no": "3",
    "tag": "",
    "position": 13,
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 794,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "Setting <code>min_instances: 0</code> in the <code>automatic_scaling</code> section of <code>app.yaml</code> is cost-effective for low-traffic apps, but what is the potential downside?",
    "chapter_no": "3",
    "tag": "",
    "position": 14,
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 795,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "Which <code>gcloud</code> command is used to deploy your Django application updates to App Engine after preparing the code and configuration?",
    "chapter_no": "3",
    "tag": "",
    "position": 15,
    "created_at": "2025-04-12T11:17:57.903Z",
    "updated_at": "2025-04-12T11:17:57.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 796,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "How does the guide recommend handling sensitive information like the Django <code>SECRET_KEY</code> in production App Engine settings?",
    "chapter_no": "3",
    "tag": "",
    "position": 16,
    "created_at": "2025-04-12T11:17:57.914Z",
    "updated_at": "2025-04-12T11:17:57.914Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 797,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "If your deployed App Engine app is serving pages correctly but static files (CSS, JS) are resulting in 404 errors, what is a likely cause according to the troubleshooting section?",
    "chapter_no": "3",
    "tag": "",
    "position": 17,
    "created_at": "2025-04-12T11:17:57.914Z",
    "updated_at": "2025-04-12T11:17:57.914Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 798,
  "fields": {
    "quiz": 41,
    "topic": 25,
    "text": "Which Python package is essential in <code>requirements.txt</code> for running a Django application in production on App Engine, serving as the WSGI server?",
    "chapter_no": "3",
    "tag": "",
    "position": 18,
    "created_at": "2025-04-12T11:17:57.914Z",
    "updated_at": "2025-04-12T11:17:57.914Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 799,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "In Django settings, what is the primary purpose of the <code>ALLOWED_HOSTS</code> list?",
    "chapter_no": "4",
    "tag": "",
    "position": 1,
    "created_at": "2025-04-12T11:17:57.924Z",
    "updated_at": "2025-04-12T11:17:57.924Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 800,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "According to the guide, what is a key difference in cost implications between setting <code>--min-instances=0</code> versus <code>--min-instances=1</code> in Cloud Run?",
    "chapter_no": "4",
    "tag": "",
    "position": 2,
    "created_at": "2025-04-12T11:17:57.924Z",
    "updated_at": "2025-04-12T11:17:57.924Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 801,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "What is the purpose of running the <code>python manage.py collectstatic</code> command before deploying?",
    "chapter_no": "4",
    "tag": "",
    "position": 3,
    "created_at": "2025-04-12T11:17:57.924Z",
    "updated_at": "2025-04-12T11:17:57.924Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 802,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "What is GCP Artifact Registry primarily used for in this deployment workflow?",
    "chapter_no": "4",
    "tag": "",
    "position": 4,
    "created_at": "2025-04-12T11:17:57.924Z",
    "updated_at": "2025-04-12T11:17:57.924Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 803,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "When updating your Django application code that includes database model changes (migrations), what extra step is crucial when using the SQLite-on-GCS method described?",
    "chapter_no": "4",
    "tag": "",
    "position": 5,
    "created_at": "2025-04-12T11:17:57.924Z",
    "updated_at": "2025-04-12T11:17:57.924Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 804,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "In the <code>gcloud run deploy</code> command, what does the <code>--allow-unauthenticated</code> flag do?",
    "chapter_no": "4",
    "tag": "",
    "position": 6,
    "created_at": "2025-04-12T11:17:57.924Z",
    "updated_at": "2025-04-12T11:17:57.924Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 805,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "Consider this Dockerfile excerpt:\n<pre><code class=\"language-dockerfile\">\n# Stage 1\nFROM python:3.9-slim as builder\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\n\n# Stage 2\nFROM python:3.9-slim\nWORKDIR /app\nCOPY --from=builder /app /app\nCOPY . .\nCMD [\"gunicorn\", ...]\n</code></pre>\nWhat is the main advantage of this multi-stage build approach?",
    "chapter_no": "4",
    "tag": "",
    "position": 7,
    "created_at": "2025-04-12T11:17:57.932Z",
    "updated_at": "2025-04-12T11:17:57.932Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 806,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "What IAM permission is typically required on a GCS bucket used for storing static files to make them publicly accessible via the internet?",
    "chapter_no": "4",
    "tag": "",
    "position": 8,
    "created_at": "2025-04-12T11:17:57.932Z",
    "updated_at": "2025-04-12T11:17:57.932Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 807,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "When using GCS for the SQLite database via a mounted volume in Cloud Run, which path should typically be configured in Django's <code>settings.py</code> for the database <code>NAME</code>?",
    "chapter_no": "4",
    "tag": "",
    "position": 9,
    "created_at": "2025-04-12T11:17:57.932Z",
    "updated_at": "2025-04-12T11:17:57.932Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 808,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "Which pair of flags in <code>gcloud run deploy</code> is used to mount a GCS bucket containing the SQLite database into the container?",
    "chapter_no": "4",
    "tag": "",
    "position": 10,
    "created_at": "2025-04-12T11:17:57.934Z",
    "updated_at": "2025-04-12T11:17:57.934Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 809,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "Why is serving static files directly from Google Cloud Storage (GCS) generally preferred over serving them from the Django/Gunicorn container in production?",
    "chapter_no": "4",
    "tag": "",
    "position": 11,
    "created_at": "2025-04-12T11:17:57.934Z",
    "updated_at": "2025-04-12T11:17:57.934Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 810,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "What does the command <code>CMD exec gunicorn --bind :$PORT ...</code> achieve in the Dockerfile?",
    "chapter_no": "4",
    "tag": "",
    "position": 12,
    "created_at": "2025-04-12T11:17:57.934Z",
    "updated_at": "2025-04-12T11:17:57.934Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 811,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "What is a primary reason the Django development server (<code>runserver</code>) is unsuitable for production environments?",
    "chapter_no": "4",
    "tag": "",
    "position": 13,
    "created_at": "2025-04-12T11:17:57.936Z",
    "updated_at": "2025-04-12T11:17:57.936Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 812,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "What is the recommended way to handle sensitive configuration like the Django <code>SECRET_KEY</code> when deploying to Cloud Run, according to the guide?",
    "chapter_no": "4",
    "tag": "",
    "position": 14,
    "created_at": "2025-04-12T11:17:57.936Z",
    "updated_at": "2025-04-12T11:17:57.936Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 813,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "How does the guide propose persisting the SQLite database (<code>db.sqlite3</code>) when deploying to Cloud Run?",
    "chapter_no": "4",
    "tag": "",
    "position": 15,
    "created_at": "2025-04-12T11:17:57.936Z",
    "updated_at": "2025-04-12T11:17:57.936Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 814,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "What is the role of a GCP Service Account in the context of deploying a Cloud Run application?",
    "chapter_no": "4",
    "tag": "",
    "position": 16,
    "created_at": "2025-04-12T11:17:57.936Z",
    "updated_at": "2025-04-12T11:17:57.936Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 815,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "What is the role of <code>gunicorn</code> in the production deployment described in the guide?",
    "chapter_no": "4",
    "tag": "",
    "position": 17,
    "created_at": "2025-04-12T11:17:57.938Z",
    "updated_at": "2025-04-12T11:17:57.938Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 816,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "If your deployed Cloud Run application returns a \"CSRF verification failed\" error for POST requests, what is the most likely misconfiguration?",
    "chapter_no": "4",
    "tag": "",
    "position": 18,
    "created_at": "2025-04-12T11:17:57.938Z",
    "updated_at": "2025-04-12T11:17:57.938Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 817,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "Which IAM role is typically required for a Cloud Run service account to read AND write objects (like an SQLite file) in a specific GCS bucket?",
    "chapter_no": "4",
    "tag": "",
    "position": 19,
    "created_at": "2025-04-12T11:17:57.938Z",
    "updated_at": "2025-04-12T11:17:57.938Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 818,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "Why is storing a changeable SQLite database file directly inside a Cloud Run container's filesystem problematic for production?",
    "chapter_no": "4",
    "tag": "",
    "position": 20,
    "created_at": "2025-04-12T11:17:57.938Z",
    "updated_at": "2025-04-12T11:17:57.938Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 819,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "How does using environment variables (like with <code>django-environ</code>) improve Django application configuration for deployment?",
    "chapter_no": "4",
    "tag": "",
    "position": 21,
    "created_at": "2025-04-12T11:17:57.940Z",
    "updated_at": "2025-04-12T11:17:57.940Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 820,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "In a Dockerfile, what is the purpose of the <code>WORKDIR /app</code> command?",
    "chapter_no": "4",
    "tag": "",
    "position": 22,
    "created_at": "2025-04-12T11:17:57.940Z",
    "updated_at": "2025-04-12T11:17:57.940Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 821,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "What is the primary purpose of setting <code>SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')</code> in Django's production settings when running behind a proxy like Cloud Run's frontend?",
    "chapter_no": "4",
    "tag": "",
    "position": 23,
    "created_at": "2025-04-12T11:17:57.940Z",
    "updated_at": "2025-04-12T11:17:57.940Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 822,
  "fields": {
    "quiz": 42,
    "topic": 26,
    "text": "What is the primary benefit of using Docker for deploying a Django application?",
    "chapter_no": "4",
    "tag": "",
    "position": 24,
    "created_at": "2025-04-12T11:17:57.942Z",
    "updated_at": "2025-04-12T11:17:57.942Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 823,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "Which ORM method is commonly used for performing database aggregations like counting or summing?",
    "chapter_no": "1",
    "tag": "django-queryset-aggregation",
    "position": 1,
    "created_at": "2025-04-12T11:18:21.901Z",
    "updated_at": "2025-04-12T11:18:21.901Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 824,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "Which field type is used to represent a many-to-many relationship (e.g., a blog post can have many tags, and a tag can be applied to many posts)?",
    "chapter_no": "1",
    "tag": "django-m2m-relationships",
    "position": 2,
    "created_at": "2025-04-12T11:18:21.902Z",
    "updated_at": "2025-04-12T11:18:21.902Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 825,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "Which field type is used to define a many-to-one relationship in Django (e.g., many comments belong to one post)?",
    "chapter_no": "1",
    "tag": "django-foreignkey",
    "position": 3,
    "created_at": "2025-04-12T11:18:21.903Z",
    "updated_at": "2025-04-12T11:18:21.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 826,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "Which <code>Meta</code> class option is used to specify the default ordering for QuerySets retrieved for a model?",
    "chapter_no": "1",
    "tag": "model-constraints-indexes",
    "position": 4,
    "created_at": "2025-04-12T11:18:21.903Z",
    "updated_at": "2025-04-12T11:18:21.903Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 827,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "What does the <code>@property</code> decorator allow you to do within a Django model class?",
    "chapter_no": "1",
    "tag": "django-model-properties",
    "position": 5,
    "created_at": "2025-04-12T11:18:21.904Z",
    "updated_at": "2025-04-12T11:18:21.904Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 828,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "What is the purpose of the <code>related_name</code> argument in relationship fields like <code>ForeignKey</code> or <code>ManyToManyField</code>?",
    "chapter_no": "1",
    "tag": "model-relationships-practices",
    "position": 6,
    "created_at": "2025-04-12T11:18:21.904Z",
    "updated_at": "2025-04-12T11:18:21.904Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 829,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "Which Django management command is used to create new database migration files based on changes detected in your models?",
    "chapter_no": "1",
    "tag": "django-migrations",
    "position": 7,
    "created_at": "2025-04-12T11:18:21.905Z",
    "updated_at": "2025-04-12T11:18:21.905Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 830,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "What is the purpose of the <code>max_length</code> argument required by <code>models.CharField</code>?",
    "chapter_no": "1",
    "tag": "django-model-field-options",
    "position": 8,
    "created_at": "2025-04-12T11:18:21.906Z",
    "updated_at": "2025-04-12T11:18:21.906Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 831,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "Which field type would be most appropriate for storing a large block of text, like the content of a blog post?",
    "chapter_no": "1",
    "tag": "django-model-field-types",
    "position": 9,
    "created_at": "2025-04-12T11:18:21.906Z",
    "updated_at": "2025-04-12T11:18:21.906Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 832,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "Which Django ORM method is used to retrieve all objects of a specific model?",
    "chapter_no": "1",
    "tag": "django-queryset-basics",
    "position": 10,
    "created_at": "2025-04-12T11:18:21.907Z",
    "updated_at": "2025-04-12T11:18:21.907Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 833,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "What is the difference between setting <code>null=True</code> and <code>blank=True</code> on a model field?",
    "chapter_no": "1",
    "tag": "django-model-field-options",
    "position": 11,
    "created_at": "2025-04-12T11:18:21.907Z",
    "updated_at": "2025-04-12T11:18:21.907Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 834,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "What does ORM stand for in Django, and what does it do?",
    "chapter_no": "1",
    "tag": "django-orm-role",
    "position": 12,
    "created_at": "2025-04-12T11:18:21.908Z",
    "updated_at": "2025-04-12T11:18:21.908Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 835,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "What is the primary purpose of overriding the <code>__str__(self)</code> method in a Django model?",
    "chapter_no": "1",
    "tag": "django-model-str-method",
    "position": 13,
    "created_at": "2025-04-12T11:18:21.908Z",
    "updated_at": "2025-04-12T11:18:21.908Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 836,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "What is a potential benefit of using the Django ORM compared to writing raw SQL queries?",
    "chapter_no": "1",
    "tag": "django-orm-role",
    "position": 14,
    "created_at": "2025-04-12T11:18:21.909Z",
    "updated_at": "2025-04-12T11:18:21.909Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 837,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "Which Django management command provides an interactive Python shell with your project's environment loaded, useful for debugging models and queries?",
    "chapter_no": "1",
    "tag": "django-model-testing",
    "position": 15,
    "created_at": "2025-04-12T11:18:21.909Z",
    "updated_at": "2025-04-12T11:18:21.909Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 838,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "What is the key difference between <code>MyModel.objects.get(pk=1)</code> and <code>MyModel.objects.filter(pk=1)</code>?",
    "chapter_no": "1",
    "tag": "django-queryset-basics",
    "position": 16,
    "created_at": "2025-04-12T11:18:21.909Z",
    "updated_at": "2025-04-12T11:18:21.909Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 839,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "Which command is used to create a new Django application within a project?",
    "chapter_no": "1",
    "tag": "django-project-setup",
    "position": 17,
    "created_at": "2025-04-12T11:18:21.911Z",
    "updated_at": "2025-04-12T11:18:21.911Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 840,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "What does the <code>on_delete=models.CASCADE</code> argument signify in a <code>ForeignKey</code> field?",
    "chapter_no": "1",
    "tag": "django-foreignkey",
    "position": 18,
    "created_at": "2025-04-12T11:18:21.911Z",
    "updated_at": "2025-04-12T11:18:21.911Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 841,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "How can you specify a custom database table name for a Django model?",
    "chapter_no": "1",
    "tag": "django-db-table-names",
    "position": 19,
    "created_at": "2025-04-12T11:18:21.912Z",
    "updated_at": "2025-04-12T11:18:21.912Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 842,
  "fields": {
    "quiz": 43,
    "topic": 27,
    "text": "When should you typically run the <code>makemigrations</code> command?",
    "chapter_no": "1",
    "tag": "database-schema-evolution",
    "position": 20,
    "created_at": "2025-04-12T11:18:21.913Z",
    "updated_at": "2025-04-12T11:18:21.913Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 843,
  "fields": {
    "quiz": 44,
    "topic": 27,
    "text": "If a query using <code>MyModel.objects.get(name='unique_name')</code> fails because no object with that name exists, what exception is raised?",
    "chapter_no": "1",
    "tag": "django-queryset-basics",
    "position": 1,
    "created_at": "2025-04-12T11:18:21.924Z",
    "updated_at": "2025-04-12T11:18:21.924Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 844,
  "fields": {
    "quiz": 44,
    "topic": 27,
    "text": "What base class must all Django models inherit from?",
    "chapter_no": "1",
    "tag": "django-models-model-class",
    "position": 2,
    "created_at": "2025-04-12T11:18:21.925Z",
    "updated_at": "2025-04-12T11:18:21.925Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 845,
  "fields": {
    "quiz": 44,
    "topic": 27,
    "text": "How would you retrieve the first 5 <code>Product</code> objects ordered by <code>name</code> using the Django ORM?",
    "chapter_no": "1",
    "tag": "django-queryset-aggregation",
    "position": 3,
    "created_at": "2025-04-12T11:18:21.926Z",
    "updated_at": "2025-04-12T11:18:21.926Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 846,
  "fields": {
    "quiz": 44,
    "topic": 27,
    "text": "How can you enforce that a combination of fields must be unique together within a model (e.g., a user can only vote once per poll)?",
    "chapter_no": "1",
    "tag": "model-constraints-indexes",
    "position": 4,
    "created_at": "2025-04-12T11:18:21.926Z",
    "updated_at": "2025-04-12T11:18:21.926Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 847,
  "fields": {
    "quiz": 44,
    "topic": 27,
    "text": "Which relationship field creates a strict one-to-one link between two models, often used for profile extensions?",
    "chapter_no": "1",
    "tag": "django-onetoone-relationship",
    "position": 5,
    "created_at": "2025-04-12T11:18:21.926Z",
    "updated_at": "2025-04-12T11:18:21.926Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 848,
  "fields": {
    "quiz": 44,
    "topic": 27,
    "text": "What is the purpose of the <code>verbose_name</code> option in a model's <code>Meta</code> class or field definition?",
    "chapter_no": "1",
    "tag": "django-model-verbose-help-text",
    "position": 6,
    "created_at": "2025-04-12T11:18:21.927Z",
    "updated_at": "2025-04-12T11:18:21.927Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 849,
  "fields": {
    "quiz": 44,
    "topic": 27,
    "text": "Which Django model field type is typically used for storing short strings, like a title or name?",
    "chapter_no": "1",
    "tag": "django-model-field-types",
    "position": 7,
    "created_at": "2025-04-12T11:18:21.927Z",
    "updated_at": "2025-04-12T11:18:21.927Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 850,
  "fields": {
    "quiz": 44,
    "topic": 27,
    "text": "After creating migration files with <code>makemigrations</code>, which command applies these changes to the database schema?",
    "chapter_no": "1",
    "tag": "django-migrations",
    "position": 8,
    "created_at": "2025-04-12T11:18:21.928Z",
    "updated_at": "2025-04-12T11:18:21.928Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 851,
  "fields": {
    "quiz": 44,
    "topic": 27,
    "text": "How can you add a custom method to a Django model, for example, to calculate an age based on a <code>birth_date</code> field?",
    "chapter_no": "1",
    "tag": "model-methods",
    "position": 9,
    "created_at": "2025-04-12T11:18:21.929Z",
    "updated_at": "2025-04-12T11:18:21.929Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 852,
  "fields": {
    "quiz": 44,
    "topic": 27,
    "text": "In the context of Django, what is the primary role of a Model?",
    "chapter_no": "1",
    "tag": "django-models-intro",
    "position": 10,
    "created_at": "2025-04-12T11:18:21.929Z",
    "updated_at": "2025-04-12T11:18:21.929Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 853,
  "fields": {
    "quiz": 44,
    "topic": 27,
    "text": "To define a field that must be unique across the entire table (e.g., a username), which field option should be set to <code>True</code>?",
    "chapter_no": "1",
    "tag": "django-model-field-options",
    "position": 11,
    "created_at": "2025-04-12T11:18:21.930Z",
    "updated_at": "2025-04-12T11:18:21.930Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 854,
  "fields": {
    "quiz": 44,
    "topic": 27,
    "text": "What is a common approach for testing Django models?",
    "chapter_no": "1",
    "tag": "django-model-unit-testing",
    "position": 12,
    "created_at": "2025-04-12T11:18:21.930Z",
    "updated_at": "2025-04-12T11:18:21.930Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 855,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "Where should validation logic that depends on the values of *multiple* fields within the same model instance typically be placed?",
    "chapter_no": "2",
    "tag": "complex-data-validation",
    "position": 1,
    "created_at": "2025-04-12T11:18:21.944Z",
    "updated_at": "2025-04-12T11:18:21.944Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 856,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "To make custom QuerySet methods chainable, what should they generally return?",
    "chapter_no": "2",
    "tag": "django-queryset-chaining",
    "position": 2,
    "created_at": "2025-04-12T11:18:21.945Z",
    "updated_at": "2025-04-12T11:18:21.945Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 857,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "Which popular Django book is often cited as a key resource for best practices, including model design?",
    "chapter_no": "2",
    "tag": "recommended-resources",
    "position": 3,
    "created_at": "2025-04-12T11:18:21.945Z",
    "updated_at": "2025-04-12T11:18:21.945Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 858,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "What is the primary role of a custom QuerySet in Django?",
    "chapter_no": "2",
    "tag": "django-custom-queryset",
    "position": 4,
    "created_at": "2025-04-12T11:18:21.946Z",
    "updated_at": "2025-04-12T11:18:21.946Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 859,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "What is the fundamental concept behind Django Signals?",
    "chapter_no": "2",
    "tag": "django-signals-overview",
    "position": 5,
    "created_at": "2025-04-12T11:18:21.946Z",
    "updated_at": "2025-04-12T11:18:21.947Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 860,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "Using <code>models.CheckConstraint</code> within the <code>Meta.constraints</code> list allows you to:",
    "chapter_no": "2",
    "tag": "database-optimization",
    "position": 6,
    "created_at": "2025-04-12T11:18:21.947Z",
    "updated_at": "2025-04-12T11:18:21.947Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 861,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "When is <code>prefetch_related()</code> generally more appropriate than <code>select_related()</code>?",
    "chapter_no": "2",
    "tag": "django-select-prefetch-related",
    "position": 7,
    "created_at": "2025-04-12T11:18:21.948Z",
    "updated_at": "2025-04-12T11:18:21.948Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 862,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "Where is the recommended place to connect signal receivers defined within an application to ensure they are registered when Django starts?",
    "chapter_no": "2",
    "tag": "django-signals-decoupling",
    "position": 8,
    "created_at": "2025-04-12T11:18:21.948Z",
    "updated_at": "2025-04-12T11:18:21.948Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 863,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "According to \"Fat Models, Thin Views\", where would you ideally place a method that calculates the total price of an order based on its items?",
    "chapter_no": "2",
    "tag": "django-model-business-logic",
    "position": 9,
    "created_at": "2025-04-12T11:18:21.949Z",
    "updated_at": "2025-04-12T11:18:21.949Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 864,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "Where is the best place to encapsulate reusable filtering logic, like retrieving all 'active' users?",
    "chapter_no": "2",
    "tag": "django-queryset-business-logic",
    "position": 10,
    "created_at": "2025-04-12T11:18:21.949Z",
    "updated_at": "2025-04-12T11:18:21.949Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 865,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "In a custom Manager, which method typically needs to be overridden to return an instance of your custom QuerySet?",
    "chapter_no": "2",
    "tag": "django-custom-queryset",
    "position": 11,
    "created_at": "2025-04-12T11:18:21.950Z",
    "updated_at": "2025-04-12T11:18:21.950Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 866,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "What <code>Meta</code> option is used to ensure that combinations of values across multiple fields are unique in the database table?",
    "chapter_no": "2",
    "tag": "model-complex-constraints",
    "position": 12,
    "created_at": "2025-04-12T11:18:21.950Z",
    "updated_at": "2025-04-12T11:18:21.950Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 867,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "How do you specify a default ordering for querysets returned for a model using the <code>Meta</code> class (e.g., order by <code>name</code> ascending)?",
    "chapter_no": "2",
    "tag": "model-complex-constraints",
    "position": 13,
    "created_at": "2025-04-12T11:18:21.951Z",
    "updated_at": "2025-04-12T11:18:21.951Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 868,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "How do you define a Proxy Model in Django?",
    "chapter_no": "2",
    "tag": "django-proxy-models-use-cases",
    "position": 14,
    "created_at": "2025-04-12T11:18:21.952Z",
    "updated_at": "2025-04-12T11:18:21.952Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 869,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "Which QuerySet methods allow you to retrieve only specific columns from the database, potentially improving performance by reducing data transfer?",
    "chapter_no": "2",
    "tag": "django-query-optimization",
    "position": 15,
    "created_at": "2025-04-12T11:18:21.952Z",
    "updated_at": "2025-04-12T11:18:21.952Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 870,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "What is the purpose of the <code>django-debug-toolbar</code> in the context of query optimization?",
    "chapter_no": "2",
    "tag": "django-n-plus-1-problem",
    "position": 16,
    "created_at": "2025-04-12T11:18:21.953Z",
    "updated_at": "2025-04-12T11:18:21.953Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 871,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "Creating a custom Django model field typically involves subclassing which base class?",
    "chapter_no": "2",
    "tag": "django-custom-model-field",
    "position": 17,
    "created_at": "2025-04-12T11:18:21.953Z",
    "updated_at": "2025-04-12T11:18:21.953Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 872,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "What is the core principle behind the \"Fat Models, Thin Views\" pattern in Django?",
    "chapter_no": "2",
    "tag": "fat-models-thin-views",
    "position": 18,
    "created_at": "2025-04-12T11:18:21.954Z",
    "updated_at": "2025-04-12T11:18:21.954Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 873,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "Which built-in Django model method is commonly overridden to provide custom validation logic that might involve checking multiple fields on the model instance?",
    "chapter_no": "2",
    "tag": "django-model-lifecycle-methods",
    "position": 19,
    "created_at": "2025-04-12T11:18:21.954Z",
    "updated_at": "2025-04-12T11:18:21.954Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 874,
  "fields": {
    "quiz": 45,
    "topic": 28,
    "text": "What is a key benefit of placing business logic in model methods?",
    "chapter_no": "2",
    "tag": "code-organization",
    "position": 20,
    "created_at": "2025-04-12T11:18:21.955Z",
    "updated_at": "2025-04-12T11:18:21.955Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 875,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "How can you define a model property that looks like a field but whose value is computed dynamically each time it's accessed?",
    "chapter_no": "2",
    "tag": "computed-properties",
    "position": 1,
    "created_at": "2025-04-12T11:18:21.966Z",
    "updated_at": "2025-04-12T11:18:21.966Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 876,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "What is the primary purpose of using Proxy Models in Django?",
    "chapter_no": "2",
    "tag": "django-proxy-models",
    "position": 2,
    "created_at": "2025-04-12T11:18:21.966Z",
    "updated_at": "2025-04-12T11:18:21.966Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 877,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "Why might you choose to use a custom Model Manager in Django?",
    "chapter_no": "2",
    "tag": "django-custom-managers",
    "position": 3,
    "created_at": "2025-04-12T11:18:21.967Z",
    "updated_at": "2025-04-12T11:18:21.967Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 878,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "What is the purpose of the <code>choices</code> argument on a Django model field?",
    "chapter_no": "2",
    "tag": "django-model-choices-enums",
    "position": 4,
    "created_at": "2025-04-12T11:18:21.967Z",
    "updated_at": "2025-04-12T11:18:21.967Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 879,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "What is the purpose of the <code>verbose_name</code> attribute in the <code>Meta</code> class?",
    "chapter_no": "2",
    "tag": "django-model-meta-class",
    "position": 5,
    "created_at": "2025-04-12T11:18:21.968Z",
    "updated_at": "2025-04-12T11:18:21.968Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 880,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "What is a common pitfall associated with the overuse or complex implementation of Django Signals?",
    "chapter_no": "2",
    "tag": "django-signals-alternatives",
    "position": 6,
    "created_at": "2025-04-12T11:18:21.969Z",
    "updated_at": "2025-04-12T11:18:21.969Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 881,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "How do you define a function (<code>my_receiver</code>) to listen for the <code>post_save</code> signal from a specific model (<code>MyModel</code>)?",
    "chapter_no": "2",
    "tag": "django-signals-decoupling",
    "position": 7,
    "created_at": "2025-04-12T11:18:21.969Z",
    "updated_at": "2025-04-12T11:18:21.969Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 882,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "What is a primary benefit of using signals for implementing features like cache invalidation or sending notifications?",
    "chapter_no": "2",
    "tag": "django-signals-decoupling",
    "position": 8,
    "created_at": "2025-04-12T11:18:21.970Z",
    "updated_at": "2025-04-12T11:18:21.970Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 883,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "How do you associate a custom Manager with a Django model?",
    "chapter_no": "2",
    "tag": "django-custom-managers",
    "position": 9,
    "created_at": "2025-04-12T11:18:21.970Z",
    "updated_at": "2025-04-12T11:18:21.970Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 884,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "How do you define an Abstract Base Class in Django models?",
    "chapter_no": "2",
    "tag": "abstract-base-class-example",
    "position": 10,
    "created_at": "2025-04-12T11:18:21.971Z",
    "updated_at": "2025-04-12T11:18:21.971Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 885,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "What does the <code>select_related()</code> QuerySet method do in Django?",
    "chapter_no": "2",
    "tag": "django-select-prefetch-related",
    "position": 11,
    "created_at": "2025-04-12T11:18:21.971Z",
    "updated_at": "2025-04-12T11:18:21.971Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 886,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "Which inheritance strategy is best suited if you want different default managers or custom methods for the same underlying database table?",
    "chapter_no": "2",
    "tag": "django-model-inheritance",
    "position": 12,
    "created_at": "2025-04-12T11:18:21.973Z",
    "updated_at": "2025-04-12T11:18:21.973Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 887,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "What is a key takeaway from studying complex Django model examples?",
    "chapter_no": "2",
    "tag": "django-complex-models-examples",
    "position": 13,
    "created_at": "2025-04-12T11:18:21.973Z",
    "updated_at": "2025-04-12T11:18:21.973Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 888,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "What is a safe multi-step process for renaming a model field (<code>old_name</code> to <code>new_name</code>) in Django while preserving data?",
    "chapter_no": "2",
    "tag": "django-migration-refactoring",
    "position": 14,
    "created_at": "2025-04-12T11:18:21.974Z",
    "updated_at": "2025-04-12T11:18:21.974Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 889,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "What is a common pitfall mentioned in Django best practices regarding model design?",
    "chapter_no": "2",
    "tag": "fat-models-thin-views",
    "position": 15,
    "created_at": "2025-04-12T11:18:21.974Z",
    "updated_at": "2025-04-12T11:18:21.974Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 890,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "When planning for long-term schema changes in a large project, what is a crucial consideration?",
    "chapter_no": "2",
    "tag": "database-schema-planning",
    "position": 16,
    "created_at": "2025-04-12T11:18:21.975Z",
    "updated_at": "2025-04-12T11:18:21.975Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 891,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "Which is generally preferred for filtering data: a custom manager/queryset method or a model method?",
    "chapter_no": "2",
    "tag": "code-organization",
    "position": 17,
    "created_at": "2025-04-12T11:18:21.975Z",
    "updated_at": "2025-04-12T11:18:21.975Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 892,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "What is a common use case for defining a helper method on a model, like <code>get_full_name()</code> on a <code>User</code> model?",
    "chapter_no": "2",
    "tag": "helper-utility-methods",
    "position": 18,
    "created_at": "2025-04-12T11:18:21.976Z",
    "updated_at": "2025-04-12T11:18:21.976Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 893,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "Which Django migration operation allows you to execute arbitrary Python code, often used for complex data transformations during a migration?",
    "chapter_no": "2",
    "tag": "django-migrations-data-integrity",
    "position": 19,
    "created_at": "2025-04-12T11:18:21.976Z",
    "updated_at": "2025-04-12T11:18:21.976Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 894,
  "fields": {
    "quiz": 46,
    "topic": 28,
    "text": "Why is writing tests for custom model methods and managers considered a best practice?",
    "chapter_no": "2",
    "tag": "django-model-testing",
    "position": 20,
    "created_at": "2025-04-12T11:18:21.977Z",
    "updated_at": "2025-04-12T11:18:21.977Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 895,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "In a <code>ListView</code>, which attribute typically specifies the Django model whose objects should be listed?",
    "chapter_no": "3",
    "tag": "django-cbv-override-methods",
    "position": 1,
    "created_at": "2025-04-12T11:18:21.990Z",
    "updated_at": "2025-04-12T11:18:21.990Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 896,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "What is the primary purpose of the <code>render()</code> shortcut function in Django views?",
    "chapter_no": "3",
    "tag": "django-template-rendering-context",
    "position": 2,
    "created_at": "2025-04-12T11:18:21.991Z",
    "updated_at": "2025-04-12T11:18:21.991Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 897,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "If your view passes the following context: `{'user_name': 'Alice', 'score': 95}`, how would you display the user's name in the template?",
    "chapter_no": "3",
    "tag": "django-view-to-template-data",
    "position": 3,
    "created_at": "2025-04-12T11:18:21.992Z",
    "updated_at": "2025-04-12T11:18:21.992Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 898,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "How do you access data submitted via a GET request in a Django FBV?",
    "chapter_no": "3",
    "tag": "http-request-response",
    "position": 4,
    "created_at": "2025-04-12T11:18:21.992Z",
    "updated_at": "2025-04-12T11:18:21.992Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 899,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "Which file in a Django project or application is primarily responsible for mapping URL patterns to views?",
    "chapter_no": "3",
    "tag": "django-url-patterns",
    "position": 5,
    "created_at": "2025-04-12T11:18:21.993Z",
    "updated_at": "2025-04-12T11:18:21.993Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 900,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "What is a potential consequence of leaving <code>DEBUG = True</code> enabled in a production environment?",
    "chapter_no": "3",
    "tag": "django-view-development-tools",
    "position": 6,
    "created_at": "2025-04-12T11:18:21.994Z",
    "updated_at": "2025-04-12T11:18:21.994Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 901,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "What type of object must a Django view always return?",
    "chapter_no": "3",
    "tag": "http-request-response",
    "position": 7,
    "created_at": "2025-04-12T11:18:21.994Z",
    "updated_at": "2025-04-12T11:18:21.994Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 902,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "What does the <code>get_object_or_404()</code> shortcut function typically do?",
    "chapter_no": "3",
    "tag": "django-fbv-error-handling",
    "position": 8,
    "created_at": "2025-04-12T11:18:21.994Z",
    "updated_at": "2025-04-12T11:18:21.994Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 903,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "Which decorator limits a view to only accept specific HTTP methods, like POST?",
    "chapter_no": "3",
    "tag": "django-decorators",
    "position": 9,
    "created_at": "2025-04-12T11:18:21.996Z",
    "updated_at": "2025-04-12T11:18:21.996Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 904,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "What class provided by <code>django.test</code> is essential for simulating requests to your views during unit testing?",
    "chapter_no": "3",
    "tag": "django-view-unit-testing",
    "position": 10,
    "created_at": "2025-04-12T11:18:21.997Z",
    "updated_at": "2025-04-12T11:18:21.997Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 905,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "In a Django test case inheriting from <code>django.test.TestCase</code>, how is the database typically handled for each test method?",
    "chapter_no": "3",
    "tag": "django-view-unit-testing",
    "position": 11,
    "created_at": "2025-04-12T11:18:21.997Z",
    "updated_at": "2025-04-12T11:18:21.997Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 906,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "What is the purpose of the `{% csrf_token %}` template tag within an HTML form in Django?",
    "chapter_no": "3",
    "tag": "http-request-response",
    "position": 12,
    "created_at": "2025-04-12T11:18:21.998Z",
    "updated_at": "2025-04-12T11:18:21.998Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 907,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "What is a primary motivation for using Class-Based Views (CBVs) in Django?",
    "chapter_no": "3",
    "tag": "django-cbv-concept",
    "position": 13,
    "created_at": "2025-04-12T11:18:21.999Z",
    "updated_at": "2025-04-12T11:18:21.999Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 908,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "What does MVT stand for in the context of Django?",
    "chapter_no": "3",
    "tag": "django-views-role-mvt",
    "position": 14,
    "created_at": "2025-04-12T11:18:21.999Z",
    "updated_at": "2025-04-12T11:18:21.999Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 909,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "In a <code>DetailView</code>, what is the default name of the context variable holding the retrieved object?",
    "chapter_no": "3",
    "tag": "django-generic-cbv-list",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.000Z",
    "updated_at": "2025-04-12T11:18:22.000Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 910,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "How do you typically access data submitted via a POST request in a Django FBV?",
    "chapter_no": "3",
    "tag": "http-request-response",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.000Z",
    "updated_at": "2025-04-12T11:18:22.000Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 911,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "In Django's MVT (Model-View-Template) architecture, what is the primary responsibility of the View?",
    "chapter_no": "3",
    "tag": "django-views-role-mvt",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.001Z",
    "updated_at": "2025-04-12T11:18:22.001Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 912,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "In Django template language, how do you iterate over a list called <code>item_list</code> passed in the context?",
    "chapter_no": "3",
    "tag": "django-view-to-template-data",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.001Z",
    "updated_at": "2025-04-12T11:18:22.001Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 913,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "How does a request from a user's browser typically reach a specific Django view function or class?",
    "chapter_no": "3",
    "tag": "django-mvt-integration",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.002Z",
    "updated_at": "2025-04-12T11:18:22.002Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 914,
  "fields": {
    "quiz": 47,
    "topic": 29,
    "text": "Which generic CBV pair is typically used for presenting a form pre-filled with an existing object's data and processing its submission for modification?",
    "chapter_no": "3",
    "tag": "django-generic-cbv-list",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.002Z",
    "updated_at": "2025-04-12T11:18:22.002Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 915,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "What is a common cause of a <code>TemplateDoesNotExist</code> error when running a Django application?",
    "chapter_no": "3",
    "tag": "django-view-debugging",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.013Z",
    "updated_at": "2025-04-12T11:18:22.013Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 916,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "Which popular third-party Django app provides a browser toolbar for inspecting request details, settings, SQL queries, cache usage, etc., during development?",
    "chapter_no": "3",
    "tag": "django-view-development-tools",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.014Z",
    "updated_at": "2025-04-12T11:18:22.014Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 917,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "Which generic CBV typically presents a confirmation page before removing an object from the database?",
    "chapter_no": "3",
    "tag": "django-generic-cbv-list",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.014Z",
    "updated_at": "2025-04-12T11:18:22.014Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 918,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "What debugging technique involves inserting <code>import pdb; pdb.set_trace()</code> into your view code?",
    "chapter_no": "3",
    "tag": "django-view-debugging",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.015Z",
    "updated_at": "2025-04-12T11:18:22.015Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 919,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "If your view uses <code>request.user</code> to access the logged-in user, how can you simulate a logged-in user in your tests using the test client?",
    "chapter_no": "3",
    "tag": "django-view-unit-testing",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.016Z",
    "updated_at": "2025-04-12T11:18:22.016Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 920,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "What is the standard first argument passed to any Django Function-Based View (FBV)?",
    "chapter_no": "3",
    "tag": "django-fbv-basic",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.016Z",
    "updated_at": "2025-04-12T11:18:22.016Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 921,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "Which generic CBV is most appropriate for displaying a page showing all records from a specific model?",
    "chapter_no": "3",
    "tag": "django-generic-cbv-list",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.017Z",
    "updated_at": "2025-04-12T11:18:22.017Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 922,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "In a Django view test using the test client, how do you simulate sending a GET request to the URL <code>/items/</code>?",
    "chapter_no": "3",
    "tag": "django-view-unit-testing",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.017Z",
    "updated_at": "2025-04-12T11:18:22.017Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 923,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "What benefit does namespacing template directories (e.g., <code>app_name/templates/app_name/</code>) provide?",
    "chapter_no": "3",
    "tag": "django-template-organization",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.018Z",
    "updated_at": "2025-04-12T11:18:22.018Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 924,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "Which function should be used instead of <code>path()</code> if you need to use complex regular expressions for URL matching?",
    "chapter_no": "3",
    "tag": "django-url-regex",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.019Z",
    "updated_at": "2025-04-12T11:18:22.019Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 925,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "Which generic CBV is used to present and process a form for creating a new object instance?",
    "chapter_no": "3",
    "tag": "django-generic-cbv-list",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.019Z",
    "updated_at": "2025-04-12T11:18:22.019Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 926,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "How do you capture an integer value from a URL path, like an article ID, in <code>urls.py</code> using <code>path()</code>?",
    "chapter_no": "3",
    "tag": "django-url-regex",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.020Z",
    "updated_at": "2025-04-12T11:18:22.020Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 927,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "What is the purpose of URL namespacing in Django (e.g., using <code>app_name = &#x27;polls&#x27;</code> in <code>polls/urls.py</code>)?",
    "chapter_no": "3",
    "tag": "django-url-namespacing-reverse",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.020Z",
    "updated_at": "2025-04-12T11:18:22.020Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 928,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "Which generic CBV is designed to display the details of a single specific object, typically retrieved by its primary key?",
    "chapter_no": "3",
    "tag": "django-generic-cbv-list",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.021Z",
    "updated_at": "2025-04-12T11:18:22.021Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 929,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "What is a \"mixin\" in the context of Django's Class-Based Views?",
    "chapter_no": "3",
    "tag": "django-cbv-concept",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.021Z",
    "updated_at": "2025-04-12T11:18:22.021Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 930,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "Which Django template tag or function is used to generate a URL based on its registered name and any required parameters?",
    "chapter_no": "3",
    "tag": "django-url-namespacing-reverse",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.022Z",
    "updated_at": "2025-04-12T11:18:22.022Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 931,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "What is the main benefit of using Django's built-in generic Class-Based Views (like <code>ListView</code>, <code>DetailView</code>)?",
    "chapter_no": "3",
    "tag": "django-generic-cbv-overview",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.023Z",
    "updated_at": "2025-04-12T11:18:22.023Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 932,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "What is the purpose of the <code>context</code> dictionary when rendering a template?",
    "chapter_no": "3",
    "tag": "django-view-to-template-data",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.023Z",
    "updated_at": "2025-04-12T11:18:22.023Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 933,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "Which function is commonly used within <code>urls.py</code> to define a route that maps a URL path to a view?",
    "chapter_no": "3",
    "tag": "django-url-patterns",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.024Z",
    "updated_at": "2025-04-12T11:18:22.024Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 934,
  "fields": {
    "quiz": 48,
    "topic": 29,
    "text": "What is a key difference between Function-Based Views (FBVs) and Class-Based Views (CBVs) in Django?",
    "chapter_no": "3",
    "tag": "fbv-vs-cbv-overview",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.024Z",
    "updated_at": "2025-04-12T11:18:22.024Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 935,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "What is a recommended way to handle expected exceptions (e.g., <code>ObjectDoesNotExist</code>) in a Django view?",
    "chapter_no": "4",
    "tag": "django-view-exception-handling",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.046Z",
    "updated_at": "2025-04-12T11:18:22.046Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 936,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "How do you define an asynchronous view function in Django?",
    "chapter_no": "4",
    "tag": "django-async-views",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.047Z",
    "updated_at": "2025-04-12T11:18:22.047Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 937,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "What is the primary function of Django Middleware?",
    "chapter_no": "4",
    "tag": "django-middleware-integration",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.047Z",
    "updated_at": "2025-04-12T11:18:22.047Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 938,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "What security vulnerability involves injecting malicious scripts into content that is then displayed to other users?",
    "chapter_no": "4",
    "tag": "django-view-security",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.048Z",
    "updated_at": "2025-04-12T11:18:22.048Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 939,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "If you override the <code>dispatch</code> method in a CBV, what must it generally return?",
    "chapter_no": "4",
    "tag": "django-cbv-override-dispatch",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.049Z",
    "updated_at": "2025-04-12T11:18:22.049Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 940,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "What tool within Django's test framework allows you to simulate HTTP requests (GET, POST, etc.) to your views without needing a running web server?",
    "chapter_no": "4",
    "tag": "django-testing-complex",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.049Z",
    "updated_at": "2025-04-12T11:18:22.049Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 941,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "If you need to customize the list of objects displayed by a <code>ListView</code>, which method is the most appropriate one to override?",
    "chapter_no": "4",
    "tag": "django-queryset-filtering",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.050Z",
    "updated_at": "2025-04-12T11:18:22.050Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 942,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "In Django REST Framework, what is the primary advantage of using Routers (like <code>SimpleRouter</code> or <code>DefaultRouter</code>)?",
    "chapter_no": "4",
    "tag": "drf-routers",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.050Z",
    "updated_at": "2025-04-12T11:18:22.050Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 943,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "Which function from <code>asgiref.sync</code> is needed to call an async function from a synchronous context and wait for its result?",
    "chapter_no": "4",
    "tag": "django-async-views",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.051Z",
    "updated_at": "2025-04-12T11:18:22.051Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 944,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "Which built-in Django CBV mixin provides the <code>object</code> attribute frequently used in detail views (like <code>DetailView</code>)?",
    "chapter_no": "4",
    "tag": "django-view-mixins",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.051Z",
    "updated_at": "2025-04-12T11:18:22.051Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 945,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "What is a key principle to follow when refactoring complex Django views for better maintainability?",
    "chapter_no": "4",
    "tag": "django-view-refactoring",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.052Z",
    "updated_at": "2025-04-12T11:18:22.052Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 946,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "How can you create nested URLs in Django, for example, <code>/authors/&lt;int:author_id&gt;/books/&lt;int:book_id&gt;/</code>?",
    "chapter_no": "4",
    "tag": "django-nested-urls",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.052Z",
    "updated_at": "2025-04-12T11:18:22.052Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 947,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "What is a common use case for Django view decorators like <code>@login_required</code>?",
    "chapter_no": "4",
    "tag": "decorators-cross-cutting",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.053Z",
    "updated_at": "2025-04-12T11:18:22.053Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 948,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "Using <code>RequestFactory</code> in Django tests is useful when you need to:",
    "chapter_no": "4",
    "tag": "django-testing-complex",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.053Z",
    "updated_at": "2025-04-12T11:18:22.053Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 949,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "What type of testing focuses on verifying the behavior of individual functions or classes in isolation, often using mocks or stubs for dependencies?",
    "chapter_no": "4",
    "tag": "django-advanced-view-testing",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.054Z",
    "updated_at": "2025-04-12T11:18:22.054Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 950,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "How can you configure Django to log information about view execution, errors, or other events?",
    "chapter_no": "4",
    "tag": "logging-monitoring-integration",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.054Z",
    "updated_at": "2025-04-12T11:18:22.054Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 951,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "How can you define a URL pattern in Django's <code>urls.py</code> that captures an integer value from the URL path?",
    "chapter_no": "4",
    "tag": "django-nested-urls",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.055Z",
    "updated_at": "2025-04-12T11:18:22.055Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 952,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "What is the core purpose of Django REST Framework (DRF)?",
    "chapter_no": "4",
    "tag": "drf-views",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.055Z",
    "updated_at": "2025-04-12T11:18:22.055Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 953,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "In a complex e-commerce application view showing product details, user reviews, and related products, what technique helps manage the data fetching efficiently?",
    "chapter_no": "4",
    "tag": "django-complex-views-walkthrough",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.056Z",
    "updated_at": "2025-04-12T11:18:22.056Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 954,
  "fields": {
    "quiz": 49,
    "topic": 30,
    "text": "Which Django utility is used to call synchronous code (like the ORM) from within an asynchronous view?",
    "chapter_no": "4",
    "tag": "django-async-views",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.057Z",
    "updated_at": "2025-04-12T11:18:22.057Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 955,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "Which is NOT a common strategy for optimizing Django view performance?",
    "chapter_no": "4",
    "tag": "django-view-performance-scalability",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.069Z",
    "updated_at": "2025-04-12T11:18:22.069Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 956,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "What is the purpose of the <code>reverse()</code> function in Django?",
    "chapter_no": "4",
    "tag": "django-url-reverse-dynamic",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.069Z",
    "updated_at": "2025-04-12T11:18:22.069Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 957,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "Which Django CBV Mixin is commonly used to handle form processing logic for views like <code>CreateView</code> and <code>UpdateView</code>?",
    "chapter_no": "4",
    "tag": "django-view-mixins",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.070Z",
    "updated_at": "2025-04-12T11:18:22.070Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 958,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "Besides catching specific exceptions, what generic HTTP exception can you raise from <code>django.http</code> to easily return a 404 Not Found response from a view?",
    "chapter_no": "4",
    "tag": "django-view-exception-handling",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.070Z",
    "updated_at": "2025-04-12T11:18:22.070Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 959,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "What method needs to be implemented in a CBV subclass to handle HTTP GET requests?",
    "chapter_no": "4",
    "tag": "django-cbv-override-dispatch",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.071Z",
    "updated_at": "2025-04-12T11:18:22.071Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 960,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "A key lesson from production applications regarding view performance is that:",
    "chapter_no": "4",
    "tag": "production-lessons-learned",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.072Z",
    "updated_at": "2025-04-12T11:18:22.072Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 961,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "When writing tests for a view that requires a user to be logged in, how can you simulate a logged-in user using the Django test <code>Client</code>?",
    "chapter_no": "4",
    "tag": "django-testing-complex",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.072Z",
    "updated_at": "2025-04-12T11:18:22.072Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 962,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "Which special method should a Django middleware class implement to process incoming requests before the view is called?",
    "chapter_no": "4",
    "tag": "django-middleware-integration",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.073Z",
    "updated_at": "2025-04-12T11:18:22.073Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 963,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "A common lesson learned from maintaining complex Django views in production is the importance of:",
    "chapter_no": "4",
    "tag": "production-lessons-learned",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.073Z",
    "updated_at": "2025-04-12T11:18:22.073Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 964,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "Which DRF class-based view is the most fundamental building block for creating API endpoints?",
    "chapter_no": "4",
    "tag": "django-api-endpoints",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.074Z",
    "updated_at": "2025-04-12T11:18:22.074Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 965,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "Which scenario is LEAST likely to benefit significantly from using async views in Django?",
    "chapter_no": "4",
    "tag": "concurrency-patterns",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.075Z",
    "updated_at": "2025-04-12T11:18:22.075Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 966,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "Using Python's standard <code>logging</code> module, configured via Django's <code>LOGGING</code> setting, allows you to:",
    "chapter_no": "4",
    "tag": "logging-monitoring-integration",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.075Z",
    "updated_at": "2025-04-12T11:18:22.075Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 967,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "A strategy for improving perceived performance in views that load large amounts of data is:",
    "chapter_no": "4",
    "tag": "django-view-performance-scalability",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.076Z",
    "updated_at": "2025-04-12T11:18:22.076Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 968,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "Which Django built-in security feature helps prevent Cross-Site Request Forgery (CSRF) attacks?",
    "chapter_no": "4",
    "tag": "django-view-security",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.076Z",
    "updated_at": "2025-04-12T11:18:22.076Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 969,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "Which DRF permission class allows access only to authenticated users?",
    "chapter_no": "4",
    "tag": "drf-serialization-auth-permissions",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.077Z",
    "updated_at": "2025-04-12T11:18:22.077Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 970,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "What is the role of the <code>as_view()</code> class method when defining URLs for CBVs?",
    "chapter_no": "4",
    "tag": "django-cbv-inheritance",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.078Z",
    "updated_at": "2025-04-12T11:18:22.078Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 971,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "Which method should you override in a Django generic CBV (like <code>DetailView</code> or <code>ListView</code>) to add extra variables to the template context?",
    "chapter_no": "4",
    "tag": "django-cbv-context-templates",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.078Z",
    "updated_at": "2025-04-12T11:18:22.078Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 972,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "When testing a Django view that should render a specific template, which assertion method is most appropriate?",
    "chapter_no": "4",
    "tag": "django-testing-complex",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.079Z",
    "updated_at": "2025-04-12T11:18:22.079Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 973,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "In DRF, what is the role of a Serializer?",
    "chapter_no": "4",
    "tag": "drf-serialization-auth-permissions",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.079Z",
    "updated_at": "2025-04-12T11:18:22.079Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 974,
  "fields": {
    "quiz": 50,
    "topic": 30,
    "text": "Which class from <code>django.test</code> is commonly used as a base for writing Django unit and integration tests that involve database interactions?",
    "chapter_no": "4",
    "tag": "django-advanced-view-testing",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.080Z",
    "updated_at": "2025-04-12T11:18:22.080Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 975,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "What is the main difference between a standard Django <code>Form</code> and a <code>ModelForm</code>?",
    "chapter_no": "5",
    "tag": "django-forms-vs-modelforms",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.093Z",
    "updated_at": "2025-04-12T11:18:22.093Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 976,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "In a Django view handling a form submission with file uploads, where would you access the uploaded file(s)?",
    "chapter_no": "5",
    "tag": "file-uploads-complex-data",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.094Z",
    "updated_at": "2025-04-12T11:18:22.094Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 977,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "Which Django testing class or tool is commonly used for writing unit tests for forms?",
    "chapter_no": "5",
    "tag": "django-form-unit-testing",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.095Z",
    "updated_at": "2025-04-12T11:18:22.095Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 978,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "When creating an HTML form that includes file uploads, what <code>enctype</code> attribute must be set on the <code>&lt;form&gt;</code> tag?",
    "chapter_no": "5",
    "tag": "file-uploads-complex-data",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.095Z",
    "updated_at": "2025-04-12T11:18:22.095Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 979,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "Inside the <code>Meta</code> class of a <code>ModelForm</code>, how can you specify exactly which fields from the model should be included in the form?",
    "chapter_no": "5",
    "tag": "django-modelform-customization",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.096Z",
    "updated_at": "2025-04-12T11:18:22.096Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 980,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "What is the primary role of forms in a Django web application?",
    "chapter_no": "5",
    "tag": "django-forms-role",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.096Z",
    "updated_at": "2025-04-12T11:18:22.096Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 981,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "What is the primary purpose of the <code>clean()</code> method in a Django form class?",
    "chapter_no": "5",
    "tag": "data-cleaning-normalization",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.097Z",
    "updated_at": "2025-04-12T11:18:22.097Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 982,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "How do you add custom validation logic specifically for a single field named <code>my_field</code> within a Django form class?",
    "chapter_no": "5",
    "tag": "django-writing-custom-validators",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.097Z",
    "updated_at": "2025-04-12T11:18:22.097Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 983,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "Which of the following is a key advantage of using Django's form handling system?",
    "chapter_no": "5",
    "tag": "django-forms",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.098Z",
    "updated_at": "2025-04-12T11:18:22.098Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 984,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "Which Django form field is specifically designed to validate email addresses?",
    "chapter_no": "5",
    "tag": "django-form-fields",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.098Z",
    "updated_at": "2025-04-12T11:18:22.098Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 985,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "In a Django view, how do you typically check if a submitted form contains valid data?",
    "chapter_no": "5",
    "tag": "django-form-submission",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.099Z",
    "updated_at": "2025-04-12T11:18:22.099Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 986,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "Which template tag is commonly used to render a form's fields as paragraphs?",
    "chapter_no": "5",
    "tag": "django-form-rendering-template",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.100Z",
    "updated_at": "2025-04-12T11:18:22.100Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 987,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "Which method renders form fields wrapped in <code>&lt;li&gt;</code> tags, suitable for use inside <code>&lt;ul&gt;</code>?",
    "chapter_no": "5",
    "tag": "django-form-rendering",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.100Z",
    "updated_at": "2025-04-12T11:18:22.100Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 988,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "How do you specify which model a <code>ModelForm</code> should be based on?",
    "chapter_no": "5",
    "tag": "django-modelform-auto",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.101Z",
    "updated_at": "2025-04-12T11:18:22.101Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 989,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "Which method on a Django form field handles its basic validation (e.g., checking <code>max_length</code> for a <code>CharField</code>)?",
    "chapter_no": "5",
    "tag": "django-form-validation",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.101Z",
    "updated_at": "2025-04-12T11:18:22.101Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 990,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "How can you render a single form field, including its label and input element, manually in a Django template?",
    "chapter_no": "5",
    "tag": "django-template-form-layout",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.102Z",
    "updated_at": "2025-04-12T11:18:22.102Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 991,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "Which popular third-party Django app is often used to easily render forms with CSS frameworks like Bootstrap or Tailwind CSS?",
    "chapter_no": "5",
    "tag": "django-form-styling-libraries",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.102Z",
    "updated_at": "2025-04-12T11:18:22.102Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 992,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "Why is providing clear and specific error messages crucial for form usability?",
    "chapter_no": "5",
    "tag": "ux-error-messaging",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.103Z",
    "updated_at": "2025-04-12T11:18:22.103Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 993,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "How do you define a basic form class in Django?",
    "chapter_no": "5",
    "tag": "django-form-definition",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.104Z",
    "updated_at": "2025-04-12T11:18:22.104Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 994,
  "fields": {
    "quiz": 51,
    "topic": 31,
    "text": "How would you write a basic unit test to check if a form is valid when provided with correct data?",
    "chapter_no": "5",
    "tag": "django-form-unit-testing",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.104Z",
    "updated_at": "2025-04-12T11:18:22.104Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 995,
  "fields": {
    "quiz": 52,
    "topic": 31,
    "text": "If you need to populate a <code>ChoiceField</code>'s options based on the currently logged-in user, where would you typically implement this dynamic logic?",
    "chapter_no": "5",
    "tag": "django-dynamic-forms",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.116Z",
    "updated_at": "2025-04-12T11:18:22.116Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 996,
  "fields": {
    "quiz": 52,
    "topic": 31,
    "text": "What is the purpose of the `{% csrf_token %}` template tag within an HTML <code>&lt;form&gt;</code> in Django?</form>",
    "chapter_no": "5",
    "tag": "http-request-response",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.116Z",
    "updated_at": "2025-04-12T11:18:22.116Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 997,
  "fields": {
    "quiz": 52,
    "topic": 31,
    "text": "How can JavaScript be used to improve the user experience of Django forms?",
    "chapter_no": "5",
    "tag": "javascript-interactivity",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.117Z",
    "updated_at": "2025-04-12T11:18:22.117Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 998,
  "fields": {
    "quiz": 52,
    "topic": 31,
    "text": "What is the primary use case for Django <code>Formsets</code>?",
    "chapter_no": "5",
    "tag": "django-formsets",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.117Z",
    "updated_at": "2025-04-12T11:18:22.117Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 999,
  "fields": {
    "quiz": 52,
    "topic": 31,
    "text": "What is the role of a 'Widget' in the context of Django Forms?",
    "chapter_no": "5",
    "tag": "django-default-widgets",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.118Z",
    "updated_at": "2025-04-12T11:18:22.118Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1000,
  "fields": {
    "quiz": 52,
    "topic": 31,
    "text": "How can you change the default HTML widget used for a Django form field? For example, using a <code>Textarea</code> for a <code>CharField</code>.",
    "chapter_no": "5",
    "tag": "django-form-widgets",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.119Z",
    "updated_at": "2025-04-12T11:18:22.119Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1001,
  "fields": {
    "quiz": 52,
    "topic": 31,
    "text": "How can you access validation errors for a specific field, say <code>subject</code>, within a Django template?",
    "chapter_no": "5",
    "tag": "form-validation-errors-styling",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.119Z",
    "updated_at": "2025-04-12T11:18:22.119Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1002,
  "fields": {
    "quiz": 52,
    "topic": 31,
    "text": "Which tool is invaluable for inspecting form data submitted in the browser and diagnosing issues with POST requests during development?",
    "chapter_no": "5",
    "tag": "django-form-debugging",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.120Z",
    "updated_at": "2025-04-12T11:18:22.120Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1003,
  "fields": {
    "quiz": 52,
    "topic": 31,
    "text": "In a typical Django project structure, where is the conventional place to define form classes related to an app?",
    "chapter_no": "5",
    "tag": "django-large-forms-organization",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.121Z",
    "updated_at": "2025-04-12T11:18:22.121Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1004,
  "fields": {
    "quiz": 52,
    "topic": 31,
    "text": "What is the key benefit of using <code>ModelForm</code> over a standard <code>Form</code> when dealing with Django models?",
    "chapter_no": "5",
    "tag": "django-modelforms",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.121Z",
    "updated_at": "2025-04-12T11:18:22.121Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1005,
  "fields": {
    "quiz": 52,
    "topic": 31,
    "text": "What does calling <code>form.save(commit=False)</code> on a valid <code>ModelForm</code> instance typically do?",
    "chapter_no": "5",
    "tag": "django-model-override-save",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.122Z",
    "updated_at": "2025-04-12T11:18:22.122Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1006,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "How can you explicitly disable autoescaping for a specific block of template code?",
    "chapter_no": "6",
    "tag": "django-template-escaping",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.136Z",
    "updated_at": "2025-04-12T11:18:22.136Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1007,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "Which filter should be used to explicitly mark a string as safe for rendering without further escaping?",
    "chapter_no": "6",
    "tag": "django-template-escaping",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.137Z",
    "updated_at": "2025-04-12T11:18:22.137Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1008,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "If a child template defines a <code>{% block content %}</code>, what happens to the content inside the corresponding block in the parent template?",
    "chapter_no": "6",
    "tag": "django-template-inheritance-tags",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.138Z",
    "updated_at": "2025-04-12T11:18:22.138Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1009,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "What is a Django context processor?",
    "chapter_no": "6",
    "tag": "django-context-processors",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.138Z",
    "updated_at": "2025-04-12T11:18:22.138Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1010,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "Which built-in filter formats a date object according to a specified format string?",
    "chapter_no": "6",
    "tag": "django-template-builtins",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.139Z",
    "updated_at": "2025-04-12T11:18:22.139Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1011,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "In which directory should you typically place the Python modules containing custom template tags and filters within a Django app?",
    "chapter_no": "6",
    "tag": "django-custom-template-tags",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.140Z",
    "updated_at": "2025-04-12T11:18:22.140Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1012,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "What is the default template engine used by Django?",
    "chapter_no": "6",
    "tag": "django-template-engine",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.140Z",
    "updated_at": "2025-04-12T11:18:22.140Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1013,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "Which built-in Django template tag is used to generate URLs based on view names and parameters defined in <code>urls.py</code>?",
    "chapter_no": "6",
    "tag": "django-template-builtins",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.141Z",
    "updated_at": "2025-04-12T11:18:22.141Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1014,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "Which template tag is used for looping over a list or iterable in Django templates?",
    "chapter_no": "6",
    "tag": "django-template-control-structures",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.141Z",
    "updated_at": "2025-04-12T11:18:22.141Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1015,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "How do you apply a filter named <code>lower</code> to a variable <code>my_var</code> in a Django template?",
    "chapter_no": "6",
    "tag": "django-template-syntax",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.142Z",
    "updated_at": "2025-04-12T11:18:22.142Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1016,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "How are variables typically accessed within a Django template?",
    "chapter_no": "6",
    "tag": "django-template-syntax",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.142Z",
    "updated_at": "2025-04-12T11:18:22.142Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1017,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "What syntax is used to denote template tags in Django?",
    "chapter_no": "6",
    "tag": "django-template-syntax",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.143Z",
    "updated_at": "2025-04-12T11:18:22.143Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1018,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "In Django's MVT (Model-View-Template) architecture, what is the primary role of the Template layer?",
    "chapter_no": "6",
    "tag": "django-templates-role-mvt",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.143Z",
    "updated_at": "2025-04-12T11:18:22.143Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1019,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "What is a common best practice for designing Django templates to improve maintainability?",
    "chapter_no": "6",
    "tag": "django-template-design",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.144Z",
    "updated_at": "2025-04-12T11:18:22.144Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1020,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "What is the purpose of the Django Debug Toolbar?",
    "chapter_no": "6",
    "tag": "django-template-testing",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.144Z",
    "updated_at": "2025-04-12T11:18:22.144Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1021,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "What is the primary difference between <code>{% extends %}</code> and <code>{% include %}</code>?",
    "chapter_no": "6",
    "tag": "django-template-include",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.145Z",
    "updated_at": "2025-04-12T11:18:22.145Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1022,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "Which template tag is used to include the content of another template file within the current template?",
    "chapter_no": "6",
    "tag": "django-template-include",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.145Z",
    "updated_at": "2025-04-12T11:18:22.145Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1023,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "Why are context processors useful in Django?",
    "chapter_no": "6",
    "tag": "django-context-processors",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.146Z",
    "updated_at": "2025-04-12T11:18:22.146Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1024,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "How do you make custom template tags and filters available within a template?",
    "chapter_no": "6",
    "tag": "django-custom-template-tags",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.146Z",
    "updated_at": "2025-04-12T11:18:22.146Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1025,
  "fields": {
    "quiz": 53,
    "topic": 32,
    "text": "Which decorator is commonly used to register a simple template tag function?",
    "chapter_no": "6",
    "tag": "django-custom-template-tags",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.147Z",
    "updated_at": "2025-04-12T11:18:22.147Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1026,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "Which strategy can significantly improve template rendering performance for frequently accessed, relatively static content?",
    "chapter_no": "6",
    "tag": "performance-caching",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.159Z",
    "updated_at": "2025-04-12T11:18:22.159Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1027,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "Which is a best practice for organizing template context data passed from a view?",
    "chapter_no": "6",
    "tag": "django-context-organization",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.160Z",
    "updated_at": "2025-04-12T11:18:22.160Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1028,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "What is the correct syntax for an if-else condition in a Django template?",
    "chapter_no": "6",
    "tag": "django-template-control-structures",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.161Z",
    "updated_at": "2025-04-12T11:18:22.161Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1029,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "How should template errors ideally be handled in a production environment (<code>DEBUG=False</code>)?",
    "chapter_no": "6",
    "tag": "django-template-error-handling",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.161Z",
    "updated_at": "2025-04-12T11:18:22.161Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1030,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "What is the purpose of the <code>{% cache %}</code> template tag in Django?",
    "chapter_no": "6",
    "tag": "performance-caching",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.162Z",
    "updated_at": "2025-04-12T11:18:22.162Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1031,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "What must be present in the <code>templatetags/__init__.py</code> file?",
    "chapter_no": "6",
    "tag": "django-custom-template-tags",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.162Z",
    "updated_at": "2025-04-12T11:18:22.162Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1032,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "Which Django setting controls whether detailed error pages are shown during development?",
    "chapter_no": "6",
    "tag": "django-template-testing",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.163Z",
    "updated_at": "2025-04-12T11:18:22.163Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1033,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "When integrating third-party libraries like Bootstrap or jQuery, where is the best place to include their CSS and JS files within your base template structure?",
    "chapter_no": "6",
    "tag": "django-template-libraries",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.164Z",
    "updated_at": "2025-04-12T11:18:22.164Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1034,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "Which template tag is used in a child template to specify the parent template it extends?",
    "chapter_no": "6",
    "tag": "django-template-inheritance-tags",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.164Z",
    "updated_at": "2025-04-12T11:18:22.164Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1035,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "How is data typically passed from a Django view function to a template?",
    "chapter_no": "6",
    "tag": "django-template-context",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.166Z",
    "updated_at": "2025-04-12T11:18:22.166Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1036,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "What is the purpose of template filters in Django?",
    "chapter_no": "6",
    "tag": "django-template-syntax",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.166Z",
    "updated_at": "2025-04-12T11:18:22.166Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1037,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "What is the primary goal of template inheritance in Django?",
    "chapter_no": "6",
    "tag": "django-template-inheritance-concept",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.167Z",
    "updated_at": "2025-04-12T11:18:22.167Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1038,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "Which template tag is used to generate the URL for static files (like CSS, JavaScript, images) configured via the <code>STATIC_URL</code> setting?",
    "chapter_no": "6",
    "tag": "django-template-css-js",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.168Z",
    "updated_at": "2025-04-12T11:18:22.168Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1039,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "What is a key principle of responsive web design that should be considered when structuring Django templates and integrating CSS?",
    "chapter_no": "6",
    "tag": "responsive-design",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.169Z",
    "updated_at": "2025-04-12T11:18:22.169Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1040,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "What is the purpose of creating custom template tags and filters in Django?",
    "chapter_no": "6",
    "tag": "django-custom-template-tags-filters",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.170Z",
    "updated_at": "2025-04-12T11:18:22.170Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1041,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "When maintaining a large template codebase, why is using consistent naming conventions for blocks (`{% block name %}`) important?",
    "chapter_no": "6",
    "tag": "django-large-templates-maintenance",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.171Z",
    "updated_at": "2025-04-12T11:18:22.171Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1042,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "What is the purpose of autoescaping in Django templates?",
    "chapter_no": "6",
    "tag": "django-template-escaping",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.172Z",
    "updated_at": "2025-04-12T11:18:22.172Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1043,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "What is a common cause of a <code>TemplateDoesNotExist</code> error in Django?",
    "chapter_no": "6",
    "tag": "django-template-debugging",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.172Z",
    "updated_at": "2025-04-12T11:18:22.172Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1044,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "What step is necessary before you can use the `{% static %}` template tag?",
    "chapter_no": "6",
    "tag": "django-template-css-js",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.173Z",
    "updated_at": "2025-04-12T11:18:22.173Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1045,
  "fields": {
    "quiz": 54,
    "topic": 32,
    "text": "How can you include the content of the parent block within an overridden block in a child template?",
    "chapter_no": "6",
    "tag": "django-template-inheritance-tags",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.174Z",
    "updated_at": "2025-04-12T11:18:22.174Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1046,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "What does \"Object-Level Permissions\" refer to in Django?",
    "chapter_no": "7",
    "tag": "django-object-level-permissions",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.188Z",
    "updated_at": "2025-04-12T11:18:22.188Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1047,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "Which popular third-party Django package provides a convenient way to implement object-level permissions?",
    "chapter_no": "7",
    "tag": "django-permissions-third-party",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.188Z",
    "updated_at": "2025-04-12T11:18:22.188Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1048,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "If users report being unable to log in despite entering the correct password, what is a potential area to investigate in your Django setup?",
    "chapter_no": "7",
    "tag": "django-auth-debugging",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.189Z",
    "updated_at": "2025-04-12T11:18:22.189Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1049,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "Which built-in Django view class handles user login?",
    "chapter_no": "7",
    "tag": "django-auth-views",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.189Z",
    "updated_at": "2025-04-12T11:18:22.189Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1050,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "Which Django function verifies if provided credentials (like username and password) are valid, returning a user object if successful?",
    "chapter_no": "7",
    "tag": "django-auth-views",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.190Z",
    "updated_at": "2025-04-12T11:18:22.190Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1051,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "How can you efficiently assign the same set of permissions to multiple users in Django?",
    "chapter_no": "7",
    "tag": "django-permissions-groups",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.191Z",
    "updated_at": "2025-04-12T11:18:22.191Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1052,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "By default, what three standard permissions are automatically created for each Django model when <code>django.contrib.auth</code> is installed?",
    "chapter_no": "7",
    "tag": "django-permissions-overview",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.191Z",
    "updated_at": "2025-04-12T11:18:22.191Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1053,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "Which two methods must a custom authentication backend typically implement?",
    "chapter_no": "7",
    "tag": "django-custom-auth-backend-impl",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.192Z",
    "updated_at": "2025-04-12T11:18:22.192Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1054,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "If you need complete control over the User model, including defining the identifying field and required fields yourself, which base class is more appropriate?",
    "chapter_no": "7",
    "tag": "django-custom-user-model",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.192Z",
    "updated_at": "2025-04-12T11:18:22.192Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1055,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "When writing tests for views that require authentication, what is a common setup step?",
    "chapter_no": "7",
    "tag": "django-auth-testing",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.193Z",
    "updated_at": "2025-04-12T11:18:22.193Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1056,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "What is the recommended practice regarding setting <code>AUTH_USER_MODEL</code> in a Django project?",
    "chapter_no": "7",
    "tag": "django-custom-user-model-migration",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.193Z",
    "updated_at": "2025-04-12T11:18:22.193Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1057,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "What is the primary purpose of Django's built-in permission system?",
    "chapter_no": "7",
    "tag": "django-permissions-overview",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.194Z",
    "updated_at": "2025-04-12T11:18:22.194Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1058,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "What popular Django package simplifies the integration of social authentication (e.g., login with Google, Facebook, GitHub)?",
    "chapter_no": "7",
    "tag": "django-allauth",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.194Z",
    "updated_at": "2025-04-12T11:18:22.194Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1059,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "What is the primary difference between Authentication and Authorization in the context of web security?",
    "chapter_no": "7",
    "tag": "auth-concepts",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.195Z",
    "updated_at": "2025-04-12T11:18:22.195Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1060,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "What is a crucial ongoing task for maintaining the security of your Django application's authentication system?",
    "chapter_no": "7",
    "tag": "security-audits-updates",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.195Z",
    "updated_at": "2025-04-12T11:18:22.195Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1061,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "What is the purpose of \"salting\" in password hashing?",
    "chapter_no": "7",
    "tag": "password-security",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.196Z",
    "updated_at": "2025-04-12T11:18:22.196Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1062,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "Which type of application is commonly used as a second factor for MFA, generating time-based one-time passwords (TOTP)?",
    "chapter_no": "7",
    "tag": "mfa-implementation",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.196Z",
    "updated_at": "2025-04-12T11:18:22.196Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1063,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "What is a common reason to customize the Django User model?",
    "chapter_no": "7",
    "tag": "django-custom-user-model-reasons",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.197Z",
    "updated_at": "2025-04-12T11:18:22.197Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1064,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "What is a fundamental security practice regarding user-submitted data displayed in HTML templates to prevent Cross-Site Scripting (XSS)?",
    "chapter_no": "7",
    "tag": "web-security-vulnerabilities",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.198Z",
    "updated_at": "2025-04-12T11:18:22.198Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1065,
  "fields": {
    "quiz": 55,
    "topic": 33,
    "text": "How do you configure Django to use one or more authentication backends?",
    "chapter_no": "7",
    "tag": "django-custom-auth-backend-config",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.198Z",
    "updated_at": "2025-04-12T11:18:22.198Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1066,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "Which method is used to check if a user has a specific permission in Django?",
    "chapter_no": "7",
    "tag": "django-permissions-groups",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.211Z",
    "updated_at": "2025-04-12T11:18:22.211Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1067,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "If you subclass <code>AbstractBaseUser</code> for a custom User model, what fields/methods are you typically required to define yourself?",
    "chapter_no": "7",
    "tag": "django-custom-user-model",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.211Z",
    "updated_at": "2025-04-12T11:18:22.211Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1068,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "What is the role of Authentication Backends in Django?",
    "chapter_no": "7",
    "tag": "django-auth-backends",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.212Z",
    "updated_at": "2025-04-12T11:18:22.212Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1069,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "Which Django middleware is essential for protecting against Cross-Site Request Forgery (CSRF) attacks?",
    "chapter_no": "7",
    "tag": "django-csrf-protection",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.213Z",
    "updated_at": "2025-04-12T11:18:22.213Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1070,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "What potential security vulnerability does Django's ORM help mitigate by parameterizing database queries?",
    "chapter_no": "7",
    "tag": "web-security-vulnerabilities",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.213Z",
    "updated_at": "2025-04-12T11:18:22.213Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1071,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "Which decorator can be used in function-based views to require a user to have a specific permission?",
    "chapter_no": "7",
    "tag": "django-permissions-groups",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.214Z",
    "updated_at": "2025-04-12T11:18:22.214Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1072,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "How do you include the necessary token in a Django template form to enable CSRF protection?",
    "chapter_no": "7",
    "tag": "django-csrf-protection",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.215Z",
    "updated_at": "2025-04-12T11:18:22.215Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1073,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "Where must you configure Django to use your custom User model?",
    "chapter_no": "7",
    "tag": "django-custom-user-model-migration",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.215Z",
    "updated_at": "2025-04-12T11:18:22.215Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1074,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "How does Django store user passwords by default to enhance security?",
    "chapter_no": "7",
    "tag": "password-security",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.216Z",
    "updated_at": "2025-04-12T11:18:22.216Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1075,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "Which function is used within a Django view to establish a user's session after successful authentication?",
    "chapter_no": "7",
    "tag": "django-auth-views",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.216Z",
    "updated_at": "2025-04-12T11:18:22.216Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1076,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "Besides hashing, what other technique does Django employ by default to make password cracking significantly harder?",
    "chapter_no": "7",
    "tag": "password-security",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.217Z",
    "updated_at": "2025-04-12T11:18:22.217Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1077,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "What does Multi-Factor Authentication (MFA) add to the login process?",
    "chapter_no": "7",
    "tag": "mfa-implementation",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.217Z",
    "updated_at": "2025-04-12T11:18:22.217Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1078,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "Using HTTPS for your entire Django site is crucial for:",
    "chapter_no": "7",
    "tag": "django-auth-security",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.218Z",
    "updated_at": "2025-04-12T11:18:22.218Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1079,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "What does the <code>login_required</code> decorator do when applied to a Django view?",
    "chapter_no": "7",
    "tag": "django-auth-views",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.218Z",
    "updated_at": "2025-04-12T11:18:22.218Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1080,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "In Django testing, how can you simulate a user being logged in when making requests with the test client?",
    "chapter_no": "7",
    "tag": "django-auth-testing",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.219Z",
    "updated_at": "2025-04-12T11:18:22.219Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1081,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "What is the purpose of the <code>PermissionsMixin</code> class often used with custom User models?",
    "chapter_no": "7",
    "tag": "django-custom-user-model",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.220Z",
    "updated_at": "2025-04-12T11:18:22.220Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1082,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "Which field is typically used as the unique identifier for the default Django User model?",
    "chapter_no": "7",
    "tag": "django-default-user-model",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.220Z",
    "updated_at": "2025-04-12T11:18:22.220Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1083,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "How do you include Django's default authentication URL patterns (login, logout, password reset, etc.) in your project's main <code>urls.py</code>?",
    "chapter_no": "7",
    "tag": "django-auth-urls",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.221Z",
    "updated_at": "2025-04-12T11:18:22.221Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1084,
  "fields": {
    "quiz": 56,
    "topic": 33,
    "text": "Which Django application provides the core authentication framework, including the User model and basic views?",
    "chapter_no": "7",
    "tag": "django-auth-overview",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.221Z",
    "updated_at": "2025-04-12T11:18:22.221Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1085,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "How can the <code>htmx-request</code> class be used to provide visual feedback?",
    "chapter_no": "8",
    "tag": "htmx-triggers-indicators",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.234Z",
    "updated_at": "2025-04-12T11:18:22.234Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1086,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "If you want to append the response content inside the target element, which <code>hx-swap</code> value should you use?",
    "chapter_no": "8",
    "tag": "htmx-first-request",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.235Z",
    "updated_at": "2025-04-12T11:18:22.235Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1087,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "If not using <code>django-htmx</code>, how can you manually detect an HTMX request in a Django view?",
    "chapter_no": "8",
    "tag": "django-htmx-views",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.235Z",
    "updated_at": "2025-04-12T11:18:22.235Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1088,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "What is the primary goal of HTMX?",
    "chapter_no": "8",
    "tag": "htmx-hypermedia",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.236Z",
    "updated_at": "2025-04-12T11:18:22.236Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1089,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "Which <code>hx-swap</code> strategy replaces the entire target element with the response content?",
    "chapter_no": "8",
    "tag": "htmx-first-request",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.236Z",
    "updated_at": "2025-04-12T11:18:22.236Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1090,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "How would you target the element triggering the HTMX request itself for replacement?",
    "chapter_no": "8",
    "tag": "htmx-first-request",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.236Z",
    "updated_at": "2025-04-12T11:18:22.236Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1091,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "How does HTMX primarily achieve AJAX interactions without requiring custom JavaScript?",
    "chapter_no": "8",
    "tag": "htmx-hypermedia",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.238Z",
    "updated_at": "2025-04-12T11:18:22.238Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1092,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "What is the default swap strategy if <code>hx-swap</code> is not specified?",
    "chapter_no": "8",
    "tag": "htmx-first-request",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.238Z",
    "updated_at": "2025-04-12T11:18:22.238Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1093,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "How should HTMX be configured to work with Django's CSRF protection mechanism by default?",
    "chapter_no": "8",
    "tag": "htmx-django-setup",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.239Z",
    "updated_at": "2025-04-12T11:18:22.239Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1094,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "For a search input field that filters a list of results below it without page refresh, which attributes are essential on the input field?",
    "chapter_no": "8",
    "tag": "search-autocomplete",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.239Z",
    "updated_at": "2025-04-12T11:18:22.239Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1095,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "What Django template tag is essential for defining reusable sections that can be targeted by both full page renders and partial HTMX updates?",
    "chapter_no": "8",
    "tag": "django-partial-rendering",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.240Z",
    "updated_at": "2025-04-12T11:18:22.240Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1096,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "What CSS class does HTMX automatically add to the element triggering the request *while* the request is in progress?",
    "chapter_no": "8",
    "tag": "htmx-triggers-indicators",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.240Z",
    "updated_at": "2025-04-12T11:18:22.240Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1097,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "Which browser developer tool tab is most useful for inspecting the details of HTMX AJAX requests and responses?",
    "chapter_no": "8",
    "tag": "htmx-debugging-testing",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.241Z",
    "updated_at": "2025-04-12T11:18:22.241Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1098,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "How can you use Django's testing framework (<code>manage.py test</code>) to test views that return partial HTML for HTMX requests?",
    "chapter_no": "8",
    "tag": "htmx-debugging-testing",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.242Z",
    "updated_at": "2025-04-12T11:18:22.242Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1099,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "After adding HTMX via CDN or static files, how can you quickly verify it's loaded and working?",
    "chapter_no": "8",
    "tag": "htmx-django-setup",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.242Z",
    "updated_at": "2025-04-12T11:18:22.242Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1100,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "What does the <code>hx-trigger</code> attribute control?",
    "chapter_no": "8",
    "tag": "htmx-triggers-indicators",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.243Z",
    "updated_at": "2025-04-12T11:18:22.243Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1101,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "To load the content of a modal dialog dynamically when a button is clicked, which combination of HTMX attributes would be most appropriate on the button?",
    "chapter_no": "8",
    "tag": "alpine-htmx-modals",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.243Z",
    "updated_at": "2025-04-12T11:18:22.243Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1102,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "Using the <code>django-htmx</code> library, how can a Django view detect if the incoming request is an HTMX request?",
    "chapter_no": "8",
    "tag": "django-htmx-views",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.244Z",
    "updated_at": "2025-04-12T11:18:22.244Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1103,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "How does HTMX complement Django's Model-View-Template (MVT) pattern?",
    "chapter_no": "8",
    "tag": "htmx-hypermedia",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.244Z",
    "updated_at": "2025-04-12T11:18:22.244Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1104,
  "fields": {
    "quiz": 57,
    "topic": 34,
    "text": "For a standard HTMX request that updates a portion of the page, what should the Django view typically return?",
    "chapter_no": "8",
    "tag": "django-htmx-views",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.245Z",
    "updated_at": "2025-04-12T11:18:22.245Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1105,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "How can you trigger an HTMX request when the value of an input field changes?",
    "chapter_no": "8",
    "tag": "htmx-triggers-indicators",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.257Z",
    "updated_at": "2025-04-12T11:18:22.257Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1106,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "How can you implement asynchronous pagination where clicking \"Next Page\" loads the next set of items into a list container?",
    "chapter_no": "8",
    "tag": "htmx-data-tables",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.257Z",
    "updated_at": "2025-04-12T11:18:22.257Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1107,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "How is context data passed to a partial template rendered in response to an HTMX request?",
    "chapter_no": "8",
    "tag": "django-partial-rendering",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.257Z",
    "updated_at": "2025-04-12T11:18:22.257Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1108,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "Which <code>hx-trigger</code> value would make a request fire immediately when the element loads into the DOM?",
    "chapter_no": "8",
    "tag": "htmx-triggers-indicators",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.258Z",
    "updated_at": "2025-04-12T11:18:22.258Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1109,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "What is the purpose of <code>HttpResponseClientRedirect</code> from <code>django-htmx</code>?",
    "chapter_no": "8",
    "tag": "django-htmx-views",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.258Z",
    "updated_at": "2025-04-12T11:18:22.258Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1110,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "How would you configure an input field to trigger an HTMX GET request 500ms after the user stops typing?",
    "chapter_no": "8",
    "tag": "htmx-triggers-indicators",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.259Z",
    "updated_at": "2025-04-12T11:18:22.259Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1111,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "What does the <code>hx-target</code> attribute define?",
    "chapter_no": "8",
    "tag": "htmx-first-request",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.261Z",
    "updated_at": "2025-04-12T11:18:22.261Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1112,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "What Django test client assertion method is useful for checking if specific HTML content exists within a partial response?",
    "chapter_no": "8",
    "tag": "htmx-debugging-testing",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.261Z",
    "updated_at": "2025-04-12T11:18:22.261Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1113,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "Which statement best describes the \"Hypermedia Approach\" promoted by HTMX?",
    "chapter_no": "8",
    "tag": "htmx-hypermedia",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.262Z",
    "updated_at": "2025-04-12T11:18:22.262Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1114,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "What is the simplest way to include HTMX in a Django project for development or small projects?",
    "chapter_no": "8",
    "tag": "htmx-django-setup",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.262Z",
    "updated_at": "2025-04-12T11:18:22.262Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1115,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "What <code>hx-swap</code> strategy is often useful when re-rendering a form with validation errors, replacing the old form entirely?",
    "chapter_no": "8",
    "tag": "htmx-form-handling",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.262Z",
    "updated_at": "2025-04-12T11:18:22.262Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1116,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "When returning an HTML fragment for an HTMX request, should the partial template typically use `{% extends 'base.html' %}`?",
    "chapter_no": "8",
    "tag": "django-partial-rendering",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.264Z",
    "updated_at": "2025-04-12T11:18:22.264Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1117,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "If a Django view handles an HTMX form submission and finds validation errors, what is typically included in the context when re-rendering the form partial?",
    "chapter_no": "8",
    "tag": "htmx-form-handling",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.264Z",
    "updated_at": "2025-04-12T11:18:22.264Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1118,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "What is the purpose of the <code>hx-indicator</code> attribute?",
    "chapter_no": "8",
    "tag": "htmx-triggers-indicators",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.264Z",
    "updated_at": "2025-04-12T11:18:22.264Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1119,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "What is a common pattern for the Django view upon successful HTMX form submission?",
    "chapter_no": "8",
    "tag": "htmx-form-handling",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.264Z",
    "updated_at": "2025-04-12T11:18:22.264Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1120,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "What is a key benefit of using HTMX for Django developers?",
    "chapter_no": "8",
    "tag": "htmx-hypermedia",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.265Z",
    "updated_at": "2025-04-12T11:18:22.265Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1121,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "In a Django Class-Based View (CBV), where would you typically add the logic to check for an HTMX request and return a partial response?",
    "chapter_no": "8",
    "tag": "django-htmx-views",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.265Z",
    "updated_at": "2025-04-12T11:18:22.265Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1122,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "How can Django form validation errors be displayed using HTMX without a full page reload?",
    "chapter_no": "8",
    "tag": "htmx-form-handling",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.266Z",
    "updated_at": "2025-04-12T11:18:22.266Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1123,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "How can you use the `{% include %}` tag effectively for HTMX partials?",
    "chapter_no": "8",
    "tag": "django-partial-rendering",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.266Z",
    "updated_at": "2025-04-12T11:18:22.266Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1124,
  "fields": {
    "quiz": 58,
    "topic": 34,
    "text": "Which HTMX attribute is used to specify the URL to send an asynchronous GET request to?",
    "chapter_no": "8",
    "tag": "htmx-first-request",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.267Z",
    "updated_at": "2025-04-12T11:18:22.267Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1125,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "From an architectural perspective, how does HTMX fundamentally differ from Single Page Application (SPA) frameworks like React or Vue in handling UI updates?",
    "chapter_no": "9",
    "tag": "htmx-vs-spa",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.281Z",
    "updated_at": "2025-04-12T11:18:22.281Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1126,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "What does the <code>sse-swap</code> attribute do in the <code>hx-sse</code> extension?",
    "chapter_no": "9",
    "tag": "htmx-sse",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.282Z",
    "updated_at": "2025-04-12T11:18:22.282Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1127,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "Why can handling file uploads be complex with standard HTMX form submissions aiming for partial page updates?",
    "chapter_no": "9",
    "tag": "async-file-uploads",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.282Z",
    "updated_at": "2025-04-12T11:18:22.282Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1128,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "Which common pattern uses HTMX to load the content of a modal dialog dynamically when a button is clicked?",
    "chapter_no": "9",
    "tag": "alpine-htmx-modals",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.283Z",
    "updated_at": "2025-04-12T11:18:22.283Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1129,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "Can Django's caching framework (e.g., <code>@cache_page</code> decorator or low-level cache API) be used effectively with views that serve HTMX partial responses?",
    "chapter_no": "9",
    "tag": "django-caching-htmx",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.283Z",
    "updated_at": "2025-04-12T11:18:22.283Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1130,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "What is the key difference in communication direction between Server-Sent Events (SSE) and WebSockets?",
    "chapter_no": "9",
    "tag": "htmx-sse",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.284Z",
    "updated_at": "2025-04-12T11:18:22.284Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1131,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "Which HTMX extension is used specifically for establishing and managing WebSocket connections?",
    "chapter_no": "9",
    "tag": "htmx-websockets",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.284Z",
    "updated_at": "2025-04-12T11:18:22.285Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1132,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "When writing tests using Django's test client, how can you check the content of an out-of-band swap returned in the response?",
    "chapter_no": "9",
    "tag": "htmx-complex-testing",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.285Z",
    "updated_at": "2025-04-12T11:18:22.285Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1133,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "When processing data submitted via an HTMX request (e.g., from a form), what security practice remains essential in the Django view?",
    "chapter_no": "9",
    "tag": "input-validation-sanitization",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.286Z",
    "updated_at": "2025-04-12T11:18:22.286Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1134,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "Which HTMX event is triggered *after* the new content has been swapped into the DOM?",
    "chapter_no": "9",
    "tag": "htmx-events-js-hooks",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.286Z",
    "updated_at": "2025-04-12T11:18:22.286Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1135,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "What benefit does using Out-of-Band swaps (<code>hx-swap-oob</code>) provide compared to just returning a larger HTML fragment containing all updated sections?",
    "chapter_no": "9",
    "tag": "htmx-hx-swap-oob",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.287Z",
    "updated_at": "2025-04-12T11:18:22.287Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1136,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "What is a key benefit of componentizing Django templates into smaller, reusable partials when working with HTMX?",
    "chapter_no": "9",
    "tag": "django-template-inheritance-partials",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.287Z",
    "updated_at": "2025-04-12T11:18:22.287Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1137,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "Consider the trigger <code>hx-trigger=&quot;keyup changed delay:500ms&quot;</code>. When will the HTMX request be triggered?",
    "chapter_no": "9",
    "tag": "htmx-advanced-triggers",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.288Z",
    "updated_at": "2025-04-12T11:18:22.288Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1138,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "When might a traditional SPA framework (like React or Vue) be a more suitable choice than HTMX for a Django backend?",
    "chapter_no": "9",
    "tag": "htmx-use-cases-limits",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.288Z",
    "updated_at": "2025-04-12T11:18:22.288Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1139,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "What is the purpose of the <code>hx-on</code> attribute in HTMX?",
    "chapter_no": "9",
    "tag": "htmx-advanced-triggers",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.289Z",
    "updated_at": "2025-04-12T11:18:22.289Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1140,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "What is the effect of setting <code>hx-push-url=&quot;true&quot;</code> on an element that triggers an HTMX request?",
    "chapter_no": "9",
    "tag": "htmx-hx-push-url",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.290Z",
    "updated_at": "2025-04-12T11:18:22.290Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1141,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "Consider the trigger <code>hx-trigger=&quot;every 5s&quot;</code>. How often will this trigger an HTMX request?",
    "chapter_no": "9",
    "tag": "htmx-advanced-triggers",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.291Z",
    "updated_at": "2025-04-12T11:18:22.291Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1142,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "What is the primary goal when creating a custom HTMX extension using JavaScript?",
    "chapter_no": "9",
    "tag": "htmx-custom-extensions",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.292Z",
    "updated_at": "2025-04-12T11:18:22.292Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1143,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "When managing state between HTMX requests, which approach keeps the state primarily on the server side?",
    "chapter_no": "9",
    "tag": "htmx-state-management",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.292Z",
    "updated_at": "2025-04-12T11:18:22.292Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1144,
  "fields": {
    "quiz": 59,
    "topic": 35,
    "text": "Implementing complex drag-and-drop interfaces often involves HTMX combined with what other technology?",
    "chapter_no": "9",
    "tag": "drag-and-drop-ui",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.293Z",
    "updated_at": "2025-04-12T11:18:22.293Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1145,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "Which HTMX attribute allows you to update multiple elements on the page simultaneously, where some updates target elements outside the main <code>hx-target</code>?",
    "chapter_no": "9",
    "tag": "htmx-hx-swap-oob",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.304Z",
    "updated_at": "2025-04-12T11:18:22.304Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1146,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "When implementing \"remove row\" functionality for a dynamic formset with HTMX, what is a common approach?",
    "chapter_no": "9",
    "tag": "htmx-dynamic-formsets",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.304Z",
    "updated_at": "2025-04-12T11:18:22.304Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1147,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "How can HTMX be used to implement adding a new row to a Django formset dynamically?",
    "chapter_no": "9",
    "tag": "htmx-dynamic-formsets",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.305Z",
    "updated_at": "2025-04-12T11:18:22.305Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1148,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "What is the primary purpose of the HTMX <code>hx-sync</code> attribute?",
    "chapter_no": "9",
    "tag": "htmx-request-control",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.305Z",
    "updated_at": "2025-04-12T11:18:22.305Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1149,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "If a Django view serves both a full page and an HTMX partial, and authorization fails, what should the view ideally return for an HTMX request?",
    "chapter_no": "9",
    "tag": "htmx-security-authorization",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.306Z",
    "updated_at": "2025-04-12T11:18:22.306Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1150,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "What is the role of Django Channels in implementing SSE or WebSocket functionality with Django and HTMX?",
    "chapter_no": "9",
    "tag": "django-channels-setup",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.306Z",
    "updated_at": "2025-04-12T11:18:22.307Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1151,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "What is a key challenge when testing complex HTMX interactions that involve multiple sequential requests (e.g., inline edit -> save -> update display)?",
    "chapter_no": "9",
    "tag": "htmx-complex-testing",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.307Z",
    "updated_at": "2025-04-12T11:18:22.307Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1152,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "If a Django view returns a response with the <code>HX-Push</code> response header set to a URL, what effect does this have on the browser?",
    "chapter_no": "9",
    "tag": "htmx-hx-push-url",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.308Z",
    "updated_at": "2025-04-12T11:18:22.308Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1153,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "When using Django's caching framework with HTMX partials, what is a potential pitfall if the cache key is not specific enough?",
    "chapter_no": "9",
    "tag": "django-caching-htmx",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.308Z",
    "updated_at": "2025-04-12T11:18:22.308Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1154,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "What is a potential security risk related to information disclosure when crafting partial HTML responses for HTMX?",
    "chapter_no": "9",
    "tag": "htmx-security-info-disclosure",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.309Z",
    "updated_at": "2025-04-12T11:18:22.309Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1155,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "Which HTMX event allows you to potentially cancel an HTMX request *before* it is sent, based on some JavaScript logic?",
    "chapter_no": "9",
    "tag": "htmx-events-js-hooks",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.309Z",
    "updated_at": "2025-04-12T11:18:22.309Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1156,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "What HTMX extension simplifies connecting to and handling Server-Sent Events (SSE)?",
    "chapter_no": "9",
    "tag": "htmx-sse",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.310Z",
    "updated_at": "2025-04-12T11:18:22.310Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1157,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "What does the <code>hx-select</code> attribute allow you to do with the HTML response received from the server?",
    "chapter_no": "9",
    "tag": "htmx-request-control",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.310Z",
    "updated_at": "2025-04-12T11:18:22.310Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1158,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "How do libraries like Alpine.js typically complement HTMX?",
    "chapter_no": "9",
    "tag": "lightweight-js-integration",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.311Z",
    "updated_at": "2025-04-12T11:18:22.311Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1159,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "In a multi-step wizard form driven by HTMX, where is the state (data from previous steps) typically stored between steps?",
    "chapter_no": "9",
    "tag": "htmx-multi-step-forms",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.311Z",
    "updated_at": "2025-04-12T11:18:22.311Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1160,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "What is a key strategy for minimizing payload size when returning responses to HTMX requests?",
    "chapter_no": "9",
    "tag": "htmx-payload-size",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.312Z",
    "updated_at": "2025-04-12T11:18:22.312Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1161,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "In which scenario is HTMX often considered a particularly strong choice within a Django project?",
    "chapter_no": "9",
    "tag": "htmx-use-cases-limits",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.312Z",
    "updated_at": "2025-04-12T11:18:22.312Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1162,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "What is the core principle of \"Progressive Enhancement\" in the context of a Django+HTMX application?",
    "chapter_no": "9",
    "tag": "progressive-enhancement-no-js",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.313Z",
    "updated_at": "2025-04-12T11:18:22.313Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1163,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "Which HTMX feature can help reduce server load by preventing rapid-fire requests from user interactions like typing in a search box?",
    "chapter_no": "9",
    "tag": "htmx-server-load-reduction",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.314Z",
    "updated_at": "2025-04-12T11:18:22.314Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1164,
  "fields": {
    "quiz": 60,
    "topic": 35,
    "text": "When testing Django views designed to respond to HTMX requests using Django's test client, what HTTP header should typically be set to mimic an HTMX request?",
    "chapter_no": "9",
    "tag": "django-test-client-htmx",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.314Z",
    "updated_at": "2025-04-12T11:18:22.314Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1165,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "What are the two common ways to include Alpine.js in a Django project mentioned in the chapter?",
    "chapter_no": "10",
    "tag": "alpine-setup",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.328Z",
    "updated_at": "2025-04-12T11:18:22.328Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1166,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "Could Alpine.js be used for basic input masking (e.g., formatting a phone number as the user types) without server interaction?",
    "chapter_no": "10",
    "tag": "alpine-input-masking",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.328Z",
    "updated_at": "2025-04-12T11:18:22.328Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1167,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "Which directive is used to bind an HTML attribute's value to a piece of Alpine component state?",
    "chapter_no": "10",
    "tag": "alpine-x-bind",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.329Z",
    "updated_at": "2025-04-12T11:18:22.329Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1168,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "How would Alpine.js typically be used to enhance a mobile navigation menu?",
    "chapter_no": "10",
    "tag": "use-case-interactive-menus",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.330Z",
    "updated_at": "2025-04-12T11:18:22.330Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1169,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "What is a simple way to verify that Alpine.js has been set up correctly in your HTML?",
    "chapter_no": "10",
    "tag": "alpine-verify-setup",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.330Z",
    "updated_at": "2025-04-12T11:18:22.330Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1170,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "What kind of instant client-side feedback could Alpine.js provide in a form *before* submitting it via HTMX?",
    "chapter_no": "10",
    "tag": "alpine-client-side-feedback",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.331Z",
    "updated_at": "2025-04-12T11:18:22.331Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1171,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "What is the primary tool for inspecting the current state of an Alpine.js component during development?",
    "chapter_no": "10",
    "tag": "alpine-debugging-browser",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.331Z",
    "updated_at": "2025-04-12T11:18:22.331Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1172,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "How might you use Alpine's <code>x-show</code> in conjunction with HTMX request events (like <code>htmx:beforeRequest</code> or <code>htmx:afterRequest</code>)?",
    "chapter_no": "10",
    "tag": "alpine-htmx-loading-indicators",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.332Z",
    "updated_at": "2025-04-12T11:18:22.332Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1173,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "Which directive updates the <code>textContent</code> of an element with data from the Alpine component state?",
    "chapter_no": "10",
    "tag": "alpine-x-text",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.332Z",
    "updated_at": "2025-04-12T11:18:22.332Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1174,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "Which Alpine.js directive is used to declare a new component scope and define its reactive data (state)?",
    "chapter_no": "10",
    "tag": "alpine-x-data",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.333Z",
    "updated_at": "2025-04-12T11:18:22.333Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1175,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "What is the difference between <code>x-show</code> and <code>x-if</code> for conditional rendering in Alpine.js?",
    "chapter_no": "10",
    "tag": "alpine-x-show-x-if",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.333Z",
    "updated_at": "2025-04-12T11:18:22.333Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1176,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "What is the primary characteristic of Alpine.js?",
    "chapter_no": "10",
    "tag": "alpine-introduction",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.334Z",
    "updated_at": "2025-04-12T11:18:22.334Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1177,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "What is the shorthand syntax for <code>x-on:click</code>?",
    "chapter_no": "10",
    "tag": "alpine-x-on-shorthand",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.334Z",
    "updated_at": "2025-04-12T11:18:22.334Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1178,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "Why is Alpine.js often considered a good choice alongside Django and HTMX?",
    "chapter_no": "10",
    "tag": "alpine-django-htmx-rationale",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.335Z",
    "updated_at": "2025-04-12T11:18:22.335Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1179,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "Which HTML tag must be used with <code>x-if</code> to conditionally render blocks of content in Alpine.js?",
    "chapter_no": "10",
    "tag": "alpine-x-show-x-if",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.336Z",
    "updated_at": "2025-04-12T11:18:22.336Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1180,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "Can Alpine.js be used to add simple interactions like tooltips or popovers to static content generated by Django?",
    "chapter_no": "10",
    "tag": "use-case-static-content",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.336Z",
    "updated_at": "2025-04-12T11:18:22.336Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1181,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "A common pitfall when starting with Alpine.js might involve incorrect nesting or scope of <code>x-data</code> directives. What issue could this cause?",
    "chapter_no": "10",
    "tag": "alpine-debugging-pitfalls",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.337Z",
    "updated_at": "2025-04-12T11:18:22.337Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1182,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "What is the purpose of the <code>x-init</code> directive in Alpine.js?",
    "chapter_no": "10",
    "tag": "alpine-x-init",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.337Z",
    "updated_at": "2025-04-12T11:18:22.337Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1183,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "According to its key philosophy, where does Alpine.js encourage developers to keep JavaScript logic?",
    "chapter_no": "10",
    "tag": "alpine-philosophy",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.338Z",
    "updated_at": "2025-04-12T11:18:22.338Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1184,
  "fields": {
    "quiz": 61,
    "topic": 36,
    "text": "Which combination of Alpine directives is commonly used to create a simple toggle mechanism (e.g., showing/hiding details)?",
    "chapter_no": "10",
    "tag": "alpine-toggles",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.339Z",
    "updated_at": "2025-04-12T11:18:22.339Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1185,
  "fields": {
    "quiz": 62,
    "topic": 36,
    "text": "How can you conditionally apply a CSS class 'active' to an element when the Alpine state variable <code>isOpen</code> is true?",
    "chapter_no": "10",
    "tag": "alpine-x-bind-class",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.350Z",
    "updated_at": "2025-04-12T11:18:22.350Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1186,
  "fields": {
    "quiz": 62,
    "topic": 36,
    "text": "What role does Alpine.js typically play when used alongside HTMX for server interactions?",
    "chapter_no": "10",
    "tag": "alpine-htmx-integration",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.351Z",
    "updated_at": "2025-04-12T11:18:22.351Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1187,
  "fields": {
    "quiz": 62,
    "topic": 36,
    "text": "Why is structuring templates for readability important when mixing Django tags and Alpine directives?",
    "chapter_no": "10",
    "tag": "alpine-django-template-structure",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.352Z",
    "updated_at": "2025-04-12T11:18:22.352Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1188,
  "fields": {
    "quiz": 62,
    "topic": 36,
    "text": "How does Alpine.js generally compare to larger frameworks like Vue or React in the context of enhancing server-rendered HTML (like from Django)?",
    "chapter_no": "10",
    "tag": "alpine-vs-js-frameworks",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.352Z",
    "updated_at": "2025-04-12T11:18:22.352Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1189,
  "fields": {
    "quiz": 62,
    "topic": 36,
    "text": "When should you use <code>x-html</code> instead of <code>x-text</code>?",
    "chapter_no": "10",
    "tag": "alpine-x-html",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.353Z",
    "updated_at": "2025-04-12T11:18:22.353Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1190,
  "fields": {
    "quiz": 62,
    "topic": 36,
    "text": "To visually highlight an active tab based on Alpine state (e.g., <code>activeTab === &#x27;profile&#x27;</code>), which directive would you primarily use?",
    "chapter_no": "10",
    "tag": "alpine-dynamic-styling",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.354Z",
    "updated_at": "2025-04-12T11:18:22.354Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1191,
  "fields": {
    "quiz": 62,
    "topic": 36,
    "text": "How can you integrate Alpine.js directives into HTML generated by Django templates?",
    "chapter_no": "10",
    "tag": "alpine-django-directives",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.354Z",
    "updated_at": "2025-04-12T11:18:22.354Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1192,
  "fields": {
    "quiz": 62,
    "topic": 36,
    "text": "What is a benefit of using the dedicated Alpine.js DevTools Browser Extension?",
    "chapter_no": "10",
    "tag": "alpine-debugging-devtools",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.355Z",
    "updated_at": "2025-04-12T11:18:22.355Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1193,
  "fields": {
    "quiz": 62,
    "topic": 36,
    "text": "How can you pass initial state from your Django view context to an Alpine.js <code>x-data</code> directive?",
    "chapter_no": "10",
    "tag": "alpine-django-initial-state",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.355Z",
    "updated_at": "2025-04-12T11:18:22.355Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1194,
  "fields": {
    "quiz": 62,
    "topic": 36,
    "text": "How can you use Alpine.js to create a simple dropdown menu that opens on click?",
    "chapter_no": "10",
    "tag": "alpine-dropdowns",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.356Z",
    "updated_at": "2025-04-12T11:18:22.356Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1195,
  "fields": {
    "quiz": 62,
    "topic": 36,
    "text": "Which of the following UI elements is a suitable use case for basic Alpine.js interactivity?",
    "chapter_no": "10",
    "tag": "use-case-static-content",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.356Z",
    "updated_at": "2025-04-12T11:18:22.356Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1196,
  "fields": {
    "quiz": 62,
    "topic": 36,
    "text": "Which Alpine.js directive is used to listen for browser events like clicks or input changes?",
    "chapter_no": "10",
    "tag": "alpine-x-on",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.357Z",
    "updated_at": "2025-04-12T11:18:22.357Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1197,
  "fields": {
    "quiz": 62,
    "topic": 36,
    "text": "Consider an HTMX-powered form. How could Alpine.js enhance it by disabling the submit button during the request?",
    "chapter_no": "10",
    "tag": "alpine-disable-submit",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.357Z",
    "updated_at": "2025-04-12T11:18:22.357Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1198,
  "fields": {
    "quiz": 62,
    "topic": 36,
    "text": "If HTMX is used to fetch list items from the server, what could Alpine.js manage for each item?",
    "chapter_no": "10",
    "tag": "alpine-htmx-local-state",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.358Z",
    "updated_at": "2025-04-12T11:18:22.358Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1199,
  "fields": {
    "quiz": 62,
    "topic": 36,
    "text": "What is the shorthand syntax for <code>x-bind:attribute</code>?",
    "chapter_no": "10",
    "tag": "alpine-x-bind-shorthand",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.358Z",
    "updated_at": "2025-04-12T11:18:22.358Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1200,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "If you need to perform client-side validation using Alpine.js before allowing an HTMX POST request to proceed, where would you typically implement this logic?",
    "chapter_no": "11",
    "tag": "alpine-htmx-pre-post-validation",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.372Z",
    "updated_at": "2025-04-12T11:18:22.372Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1201,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "What is a potential challenge when combining Django templates, HTMX attributes, and Alpine.js directives within the same HTML file?",
    "chapter_no": "11",
    "tag": "code-clarity-stack",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.373Z",
    "updated_at": "2025-04-12T11:18:22.373Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1202,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "What is a key strength of the Django + HTMX + Alpine.js stack?",
    "chapter_no": "11",
    "tag": "django-htmx-alpine-stack",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.374Z",
    "updated_at": "2025-04-12T11:18:22.374Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1203,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "Which Alpine.js directive is used for rendering lists or repeating elements based on an array?",
    "chapter_no": "11",
    "tag": "alpine-x-for",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.374Z",
    "updated_at": "2025-04-12T11:18:22.374Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1204,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "Which combination of Alpine.js features is powerful for implementing complex client-side form validation logic?",
    "chapter_no": "11",
    "tag": "alpine-client-validation",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.375Z",
    "updated_at": "2025-04-12T11:18:22.375Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1205,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "Which Alpine directive is essential for dynamically adding or removing CSS classes, often used for integrating with CSS frameworks like TailwindCSS or Bootstrap?",
    "chapter_no": "11",
    "tag": "alpine-css-frameworks",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.375Z",
    "updated_at": "2025-04-12T11:18:22.375Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1206,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "When HTMX swaps new HTML content into the DOM, how are Alpine.js components within that new HTML typically initialized?",
    "chapter_no": "11",
    "tag": "alpine-htmx-initialization",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.376Z",
    "updated_at": "2025-04-12T11:18:22.376Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1207,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "Which HTMX event is commonly used to trigger Alpine.js logic *after* an HTMX request has completed and the DOM has been updated?",
    "chapter_no": "11",
    "tag": "htmx-events-trigger-alpine",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.376Z",
    "updated_at": "2025-04-12T11:18:22.376Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1208,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "When deciding between implementing complex UI logic in Alpine.js versus handling it via more server round-trips with Django/HTMX, what is a key factor to consider?",
    "chapter_no": "11",
    "tag": "alpine-vs-django-htmx",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.376Z",
    "updated_at": "2025-04-12T11:18:22.376Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1209,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "How can you programmatically trigger an HTMX request on an element from within Alpine.js logic, assuming the element has standard <code>hx-</code> attributes?",
    "chapter_no": "11",
    "tag": "alpine-trigger-htmx",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.378Z",
    "updated_at": "2025-04-12T11:18:22.378Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1210,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "Which practice contributes most to maintainability when using Django, HTMX, and Alpine together?",
    "chapter_no": "11",
    "tag": "maintainable-apps",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.379Z",
    "updated_at": "2025-04-12T11:18:22.379Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1211,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "How might you establish communication between an Alpine component and a separate, non-Alpine JavaScript module on the same page?",
    "chapter_no": "11",
    "tag": "alpine-js-communication",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.379Z",
    "updated_at": "2025-04-12T11:18:22.379Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1212,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "What is the primary purpose of the <code>x-model</code> directive in Alpine.js?",
    "chapter_no": "11",
    "tag": "alpine-x-model",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.380Z",
    "updated_at": "2025-04-12T11:18:22.380Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1213,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "When building dynamic Alpine components like dropdowns or modals, what is a key aspect of ensuring accessibility?",
    "chapter_no": "11",
    "tag": "alpine-accessibility",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.380Z",
    "updated_at": "2025-04-12T11:18:22.380Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1214,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "The <code>x-transition</code> directive in Alpine.js is primarily used in conjunction with which other directives to animate elements entering or leaving the DOM?",
    "chapter_no": "11",
    "tag": "alpine-x-transition",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.381Z",
    "updated_at": "2025-04-12T11:18:22.381Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1215,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "How can you use Alpine.js state to dynamically set an HTMX request URL?",
    "chapter_no": "11",
    "tag": "alpine-configure-htmx",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.381Z",
    "updated_at": "2025-04-12T11:18:22.381Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1216,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "What is the purpose of the <code>x-cloak</code> directive in Alpine.js?",
    "chapter_no": "11",
    "tag": "alpine-performance-optimization",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.382Z",
    "updated_at": "2025-04-12T11:18:22.382Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1217,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "In larger Alpine interfaces, what is a common strategy for organizing state to avoid overly complex <code>x-data</code> objects?",
    "chapter_no": "11",
    "tag": "alpine-state-organization",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.382Z",
    "updated_at": "2025-04-12T11:18:22.382Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1218,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "What is meant by \"Optimistic UI Updates\" in the context of Alpine and HTMX?",
    "chapter_no": "11",
    "tag": "alpine-htmx-optimistic-ui",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.383Z",
    "updated_at": "2025-04-12T11:18:22.383Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1219,
  "fields": {
    "quiz": 63,
    "topic": 37,
    "text": "Under which circumstances might you consider using a more comprehensive JavaScript framework (like React, Vue, Svelte) instead of the Django + HTMX + Alpine stack?",
    "chapter_no": "11",
    "tag": "alpine-htmx-vs-spa",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.384Z",
    "updated_at": "2025-04-12T11:18:22.384Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1220,
  "fields": {
    "quiz": 64,
    "topic": 37,
    "text": "What is the purpose of the <code>x-effect</code> directive in Alpine.js?",
    "chapter_no": "11",
    "tag": "alpine-x-effect",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.395Z",
    "updated_at": "2025-04-12T11:18:22.395Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1221,
  "fields": {
    "quiz": 64,
    "topic": 37,
    "text": "How would you dispatch a custom browser event named 'user-updated' from within an Alpine component method?",
    "chapter_no": "11",
    "tag": "alpine-magic-properties",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.396Z",
    "updated_at": "2025-04-12T11:18:22.396Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1222,
  "fields": {
    "quiz": 64,
    "topic": 37,
    "text": "If you have a third-party JavaScript charting library, how might you use Alpine.js to manage its instance and update its data?",
    "chapter_no": "11",
    "tag": "alpine-third-party-js",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.396Z",
    "updated_at": "2025-04-12T11:18:22.396Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1223,
  "fields": {
    "quiz": 64,
    "topic": 37,
    "text": "What Alpine.js magic property might you use within an event handler (like <code>x-on:click</code>) to get the element that needs to trigger an HTMX request?",
    "chapter_no": "11",
    "tag": "alpine-trigger-htmx",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.397Z",
    "updated_at": "2025-04-12T11:18:22.397Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1224,
  "fields": {
    "quiz": 64,
    "topic": 37,
    "text": "How can you get a direct reference to a specific DOM element within your Alpine.js component's logic?",
    "chapter_no": "11",
    "tag": "alpine-x-ref",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.398Z",
    "updated_at": "2025-04-12T11:18:22.398Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1225,
  "fields": {
    "quiz": 64,
    "topic": 37,
    "text": "Which Alpine.js magic property provides access to the component's root DOM element?",
    "chapter_no": "11",
    "tag": "alpine-magic-properties",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.398Z",
    "updated_at": "2025-04-12T11:18:22.398Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1226,
  "fields": {
    "quiz": 64,
    "topic": 37,
    "text": "Which magic property allows you to reactively watch a specific piece of state within your Alpine component and run a callback when it changes?",
    "chapter_no": "11",
    "tag": "alpine-magic-properties",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.399Z",
    "updated_at": "2025-04-12T11:18:22.399Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1227,
  "fields": {
    "quiz": 64,
    "topic": 37,
    "text": "How can a child Alpine component access data passed down from a parent component?",
    "chapter_no": "11",
    "tag": "alpine-nested-component-state",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.399Z",
    "updated_at": "2025-04-12T11:18:22.399Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1228,
  "fields": {
    "quiz": 64,
    "topic": 37,
    "text": "When building reusable Alpine components within a Django project, what Django feature is commonly used to encapsulate the component's HTML and Alpine logic?",
    "chapter_no": "11",
    "tag": "alpine-reusable-logic",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.400Z",
    "updated_at": "2025-04-12T11:18:22.400Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1229,
  "fields": {
    "quiz": 64,
    "topic": 37,
    "text": "How would you listen for the <code>htmx:afterSwap</code> event globally using Alpine.js to potentially update multiple components?",
    "chapter_no": "11",
    "tag": "htmx-events-trigger-alpine",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.400Z",
    "updated_at": "2025-04-12T11:18:22.400Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1230,
  "fields": {
    "quiz": 64,
    "topic": 37,
    "text": "Which official Alpine.js plugin helps manage focus trapping within elements like modals or dropdowns?",
    "chapter_no": "11",
    "tag": "alpine-plugins",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.401Z",
    "updated_at": "2025-04-12T11:18:22.401Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1231,
  "fields": {
    "quiz": 64,
    "topic": 37,
    "text": "How can one Alpine component listen for a custom event dispatched by another, possibly unrelated, component?",
    "chapter_no": "11",
    "tag": "alpine-custom-events",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.401Z",
    "updated_at": "2025-04-12T11:18:22.401Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1232,
  "fields": {
    "quiz": 64,
    "topic": 37,
    "text": "When using <code>x-for</code> to iterate over an array named <code>items</code>, how do you typically access the current item within the loop?",
    "chapter_no": "11",
    "tag": "alpine-x-for",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.402Z",
    "updated_at": "2025-04-12T11:18:22.402Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1233,
  "fields": {
    "quiz": 64,
    "topic": 37,
    "text": "What is the primary mechanism provided by Alpine.js for managing global state accessible across multiple independent components?",
    "chapter_no": "11",
    "tag": "alpine-store",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.403Z",
    "updated_at": "2025-04-12T11:18:22.403Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1234,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "When testing Django views that respond to HTMX requests, what HTTP header should be included in the test client's request to simulate an HTMX call?",
    "chapter_no": "12",
    "tag": "testing-strategies",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.416Z",
    "updated_at": "2025-04-12T11:18:22.416Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1235,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "What core Django package is typically required to implement real-time features like the Notification Feed in Project 3?",
    "chapter_no": "12",
    "tag": "project-notifications-tech-stack",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.417Z",
    "updated_at": "2025-04-12T11:18:22.417Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1236,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "In the To-Do List project, how is inline editing typically initiated and saved?",
    "chapter_no": "12",
    "tag": "project-todo-implementation",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.418Z",
    "updated_at": "2025-04-12T11:18:22.418Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1237,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "What overall skill is demonstrated by successfully completing the projects in this chapter?",
    "chapter_no": "12",
    "tag": "django-htmx-alpine-stack",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.418Z",
    "updated_at": "2025-04-12T11:18:22.418Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1238,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "How might Alpine.js help manage the state of filter controls (like checkboxes or sliders) in Project 2?",
    "chapter_no": "12",
    "tag": "project-search-tech-stack",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.419Z",
    "updated_at": "2025-04-12T11:18:22.419Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1239,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "In the context of Project 3 (Notification Feed), what is the role of a Django Channels Consumer?",
    "chapter_no": "12",
    "tag": "project-notifications-implementation",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.419Z",
    "updated_at": "2025-04-12T11:18:22.419Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1240,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "What Django components are essential for the backend of the To-Do List project?",
    "chapter_no": "12",
    "tag": "project-todo-django-setup",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.420Z",
    "updated_at": "2025-04-12T11:18:22.420Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1241,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "What is the role of Alpine.js's <code>x-data</code> directive in the To-Do List project?",
    "chapter_no": "12",
    "tag": "project-todo-tech-stack",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.421Z",
    "updated_at": "2025-04-12T11:18:22.421Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1242,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "What technique helps keep Django templates maintainable when using HTMX for partial updates?",
    "chapter_no": "12",
    "tag": "project-code-organization",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.421Z",
    "updated_at": "2025-04-12T11:18:22.421Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1243,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "In Project 2 (Live Search/Filterable Catalog), which HTMX attribute and trigger value would likely be used for search-as-you-type functionality?",
    "chapter_no": "12",
    "tag": "project-search-tech-stack",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.422Z",
    "updated_at": "2025-04-12T11:18:22.422Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1244,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "In Project 1 (Interactive To-Do List), which HTMX attribute is primarily used to add a new task without a full page refresh?",
    "chapter_no": "12",
    "tag": "project-todo-tech-stack",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.422Z",
    "updated_at": "2025-04-12T11:18:22.422Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1245,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "When should you primarily rely on Alpine.js within this stack?",
    "chapter_no": "12",
    "tag": "tech-stack-choice",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.423Z",
    "updated_at": "2025-04-12T11:18:22.423Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1246,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "How can pagination be implemented using HTMX in the Product Catalog project?",
    "chapter_no": "12",
    "tag": "project-search-implementation",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.423Z",
    "updated_at": "2025-04-12T11:18:22.423Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1247,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "Which HTMX extension allows an element to connect to a Server-Sent Events (SSE) stream?",
    "chapter_no": "12",
    "tag": "project-notifications-tech-stack",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.423Z",
    "updated_at": "2025-04-12T11:18:22.423Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1248,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "What is the primary synergy highlighted in the chapter between Django, HTMX, and Alpine.js?",
    "chapter_no": "12",
    "tag": "django-htmx-alpine-stack-practice",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.424Z",
    "updated_at": "2025-04-12T11:18:22.424Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1249,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "Which HTMX attribute combination is crucial for updating only a specific part of the page (like the task list) after an action (e.g., adding a task)?",
    "chapter_no": "12",
    "tag": "project-todo-tech-stack",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.424Z",
    "updated_at": "2025-04-12T11:18:22.424Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1250,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "In the Django view handling the product search/filtering for Project 2, how would you typically combine multiple filter criteria (e.g., category AND price range)?",
    "chapter_no": "12",
    "tag": "project-search-django-setup",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.425Z",
    "updated_at": "2025-04-12T11:18:22.425Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1251,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "What does \"Progressive Enhancement\" mean in the context of using Django, HTMX, and Alpine.js?",
    "chapter_no": "12",
    "tag": "progressive-enhancement",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.425Z",
    "updated_at": "2025-04-12T11:18:22.425Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1252,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "How might Alpine.js be used for client-side filtering or visibility toggles in the To-Do list project?",
    "chapter_no": "12",
    "tag": "project-todo-implementation",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.426Z",
    "updated_at": "2025-04-12T11:18:22.426Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1253,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "What does \"Out-of-Band Swaps\" (OOB Swaps) allow in HTMX, as demonstrated in the Notification Feed project?",
    "chapter_no": "12",
    "tag": "project-notifications-tech-stack",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.426Z",
    "updated_at": "2025-04-12T11:18:22.426Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1254,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "What is a key benefit of using HTMX for partial page updates compared to traditional full page reloads?",
    "chapter_no": "12",
    "tag": "htmx-core-concepts",
    "position": 21,
    "created_at": "2025-04-12T11:18:22.427Z",
    "updated_at": "2025-04-12T11:18:22.427Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1255,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "How might Alpine.js enhance the user interface of the real-time notification feed?",
    "chapter_no": "12",
    "tag": "project-notifications-tech-stack",
    "position": 22,
    "created_at": "2025-04-12T11:18:22.427Z",
    "updated_at": "2025-04-12T11:18:22.427Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1256,
  "fields": {
    "quiz": 65,
    "topic": 38,
    "text": "What is the purpose of the <code>hx-push-url=\"true\"</code> attribute in the context of the Product Catalog project?",
    "chapter_no": "12",
    "tag": "project-search-tech-stack",
    "position": 23,
    "created_at": "2025-04-12T11:18:22.428Z",
    "updated_at": "2025-04-12T11:18:22.428Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1257,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "In Kubernetes terminology, what is a 'Pod'?",
    "chapter_no": "13",
    "tag": "kubernetes-basics",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.442Z",
    "updated_at": "2025-04-12T11:18:22.442Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1258,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "For serving static files (CSS, JavaScript, images) efficiently in a production Django application on GCP, which service is commonly recommended?",
    "chapter_no": "13",
    "tag": "gcp-cloud-storage-static",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.443Z",
    "updated_at": "2025-04-12T11:18:22.443Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1259,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "Which GCP service is used to distribute incoming traffic across multiple Compute Engine instances running your Django application?",
    "chapter_no": "13",
    "tag": "load-balancing-ha",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.443Z",
    "updated_at": "2025-04-12T11:18:22.443Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1260,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "How can a CI/CD pipeline facilitate Pull Request reviews for a Django project?",
    "chapter_no": "13",
    "tag": "pr-previews-testing-envs",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.444Z",
    "updated_at": "2025-04-12T11:18:22.444Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1261,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "What type of monitoring checks if your Django application is reachable from external locations and measures its response time?",
    "chapter_no": "13",
    "tag": "gcp-uptime-checks",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.444Z",
    "updated_at": "2025-04-12T11:18:22.444Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1262,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "What type of Kubernetes object is typically used to define how a Django application should run, including the container image, replicas, and update strategy?",
    "chapter_no": "13",
    "tag": "kubernetes-django-manifests",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.445Z",
    "updated_at": "2025-04-12T11:18:22.445Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1263,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "When migrating a legacy Django application currently running on-premises to GCP, what is often the first step?",
    "chapter_no": "13",
    "tag": "django-migration-to-gcp",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.446Z",
    "updated_at": "2025-04-12T11:18:22.446Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1264,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "What GCP feature allows you to define rules controlling network traffic flow between resources within your Virtual Private Cloud (VPC) and from external sources?",
    "chapter_no": "13",
    "tag": "gcp-network-security",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.446Z",
    "updated_at": "2025-04-12T11:18:22.446Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1265,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "A crucial aspect of maintaining security for your Django application and its GCP environment is to:",
    "chapter_no": "13",
    "tag": "security-audits-updates",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.447Z",
    "updated_at": "2025-04-12T11:18:22.447Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1266,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "What is the role of Cloud Build in a CI/CD pipeline for a Django application on GCP?",
    "chapter_no": "13",
    "tag": "gcp-cloud-build-ci",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.447Z",
    "updated_at": "2025-04-12T11:18:22.447Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1267,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "What is a key benefit of using multi-stage builds in a Dockerfile for a Django application?",
    "chapter_no": "13",
    "tag": "docker-multi-stage-builds",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.448Z",
    "updated_at": "2025-04-12T11:18:22.448Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1268,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "What is required before deploying a Django application to Cloud Run?",
    "chapter_no": "13",
    "tag": "django-cloud-run-container",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.448Z",
    "updated_at": "2025-04-12T11:18:22.448Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1269,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "Which GCP database service is a NoSQL document database that might be considered for specific use cases alongside a primary SQL database for a Django application?",
    "chapter_no": "13",
    "tag": "gcp-databases",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.449Z",
    "updated_at": "2025-04-12T11:18:22.449Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1270,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "Cloud Run allows you to split traffic between different revisions of your deployed service. What is this feature useful for?",
    "chapter_no": "13",
    "tag": "gcp-cloud-run-setup",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.450Z",
    "updated_at": "2025-04-12T11:18:22.450Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1271,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "A disaster recovery plan for a Django application on GCP should outline:",
    "chapter_no": "13",
    "tag": "disaster-recovery-planning",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.450Z",
    "updated_at": "2025-04-12T11:18:22.450Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1272,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "What is the primary purpose of a <code>Dockerfile</code> when deploying a Django application?",
    "chapter_no": "13",
    "tag": "dockerfile-production",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.451Z",
    "updated_at": "2025-04-12T11:18:22.451Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1273,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "What is a critical step to ensure data safety when using Cloud SQL?",
    "chapter_no": "13",
    "tag": "database-backup-restore",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.451Z",
    "updated_at": "2025-04-12T11:18:22.451Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1274,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "What is a common strategy for handling user-uploaded media files in a scalable Django application on GCP?",
    "chapter_no": "13",
    "tag": "django-media-handling",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.452Z",
    "updated_at": "2025-04-12T11:18:22.452Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1275,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "\"Rightsizing\" resources for a Django application on GCP refers to:",
    "chapter_no": "13",
    "tag": "gcp-rightsizing-django",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.452Z",
    "updated_at": "2025-04-12T11:18:22.452Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1276,
  "fields": {
    "quiz": 66,
    "topic": 39,
    "text": "Deploying Django on Compute Engine typically involves:",
    "chapter_no": "13",
    "tag": "gcp-vm-django-setup",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.453Z",
    "updated_at": "2025-04-12T11:18:22.453Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1277,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "What is the first step required before you can start using GCP services for your Django project?",
    "chapter_no": "13",
    "tag": "gcp-project-setup",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.464Z",
    "updated_at": "2025-04-12T11:18:22.464Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1278,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "Which GCP service is commonly used to automate the process of building container images and deploying them to Cloud Run upon code changes pushed to a repository?",
    "chapter_no": "13",
    "tag": "gcp-cloud-build-cd",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.464Z",
    "updated_at": "2025-04-12T11:18:22.464Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1279,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "What is a major benefit of using Cloud Run for Django applications compared to App Engine Flexible?",
    "chapter_no": "13",
    "tag": "gcp-cloud-run-architecture",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.465Z",
    "updated_at": "2025-04-12T11:18:22.465Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1280,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "Which GCP service is specifically designed for collecting, analyzing, and monitoring log data from applications running on GCP?",
    "chapter_no": "13",
    "tag": "gcp-logging",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.466Z",
    "updated_at": "2025-04-12T11:18:22.466Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1281,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "Which GCP service is primarily used for managing permissions and access control for GCP resources?",
    "chapter_no": "13",
    "tag": "gcp-resource-hierarchy-iam",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.466Z",
    "updated_at": "2025-04-12T11:18:22.466Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1282,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "Which GCP tool provides insights into the performance, logs, and errors of your App Engine application?",
    "chapter_no": "13",
    "tag": "gcp-app-engine-monitoring-scaling",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.467Z",
    "updated_at": "2025-04-12T11:18:22.467Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1283,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "When comparing GCP deployment options, which service offers the most control over the underlying infrastructure, requiring manual management of the OS and patches?",
    "chapter_no": "13",
    "tag": "gcp-deployment-comparison",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.467Z",
    "updated_at": "2025-04-12T11:18:22.467Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1284,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "Which Django setting helps prevent Cross-Site Request Forgery (CSRF) attacks and should be properly configured in production?",
    "chapter_no": "13",
    "tag": "django-gcp-security",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.468Z",
    "updated_at": "2025-04-12T11:18:22.468Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1285,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "Which GCP service provides a fully managed, serverless platform ideal for containerized web applications like Django, automatically scaling based on requests?",
    "chapter_no": "13",
    "tag": "gcp-web-services-overview",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.468Z",
    "updated_at": "2025-04-12T11:18:22.468Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1286,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "What is the primary benefit of using Cloud CDN in front of a Django application serving static assets from Cloud Storage or a load balancer?",
    "chapter_no": "13",
    "tag": "gcp-cloud-cdn",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.469Z",
    "updated_at": "2025-04-12T11:18:22.469Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1287,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "How can you potentially reduce Compute Engine costs for non-critical or batch processing workloads associated with your Django application?",
    "chapter_no": "13",
    "tag": "gcp-cost-saving-instances",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.470Z",
    "updated_at": "2025-04-12T11:18:22.470Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1288,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "What is a key difference between App Engine Standard and App Engine Flexible environments regarding runtime support?",
    "chapter_no": "13",
    "tag": "gcp-app-engine-envs",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.470Z",
    "updated_at": "2025-04-12T11:18:22.470Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1289,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "Which configuration file is essential for deploying a Django application to Google App Engine, defining runtime, scaling, and handlers?",
    "chapter_no": "13",
    "tag": "gcp-app-engine-appyaml",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.471Z",
    "updated_at": "2025-04-12T11:18:22.471Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1290,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "What is the recommended practice for managing sensitive configuration like database passwords or API keys in a Django application deployed on GCP?",
    "chapter_no": "13",
    "tag": "django-environ",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.471Z",
    "updated_at": "2025-04-12T11:18:22.471Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1291,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "What principle should be followed when configuring IAM policies for service accounts used by your Django application on GCP?",
    "chapter_no": "13",
    "tag": "gcp-iam-policies",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.472Z",
    "updated_at": "2025-04-12T11:18:22.472Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1292,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "Which command-line tool is essential for interacting with and managing your GCP resources from your local machine?",
    "chapter_no": "13",
    "tag": "gcp-gcloud-cli",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.472Z",
    "updated_at": "2025-04-12T11:18:22.472Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1293,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "Which Django setting must typically be set to <code>False</code> in a production environment deployed on GCP for security reasons?",
    "chapter_no": "13",
    "tag": "django-prod-settings-update",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.473Z",
    "updated_at": "2025-04-12T11:18:22.473Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1294,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "What Django management command is used to apply database schema changes defined in migration files?",
    "chapter_no": "13",
    "tag": "database-migration-strategies",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.473Z",
    "updated_at": "2025-04-12T11:18:22.473Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1295,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "Which GCP service helps automatically capture, group, and alert on exceptions and errors occurring within your running Django application?",
    "chapter_no": "13",
    "tag": "error-tracking-monitoring",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.474Z",
    "updated_at": "2025-04-12T11:18:22.474Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1296,
  "fields": {
    "quiz": 67,
    "topic": 39,
    "text": "Deploying your Django application and its database (e.g., using Cloud SQL Read Replicas) across multiple GCP regions is a strategy primarily aimed at improving:",
    "chapter_no": "13",
    "tag": "multi-region-deployment",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.474Z",
    "updated_at": "2025-04-12T11:18:22.474Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1297,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "How are media files typically served during development (when <code>DEBUG=True</code>)?",
    "chapter_no": "14",
    "tag": "django-dev-media-serving",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.489Z",
    "updated_at": "2025-04-12T11:18:22.489Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1298,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "Which middleware adds several security enhancements like HSTS, clickjacking protection (X-Frame-Options), and content type nosniff headers?",
    "chapter_no": "14",
    "tag": "django-security-middleware",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.490Z",
    "updated_at": "2025-04-12T11:18:22.490Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1299,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "What is the primary purpose of <code>django.middleware.csrf.CsrfViewMiddleware</code>?",
    "chapter_no": "14",
    "tag": "django-csrf-middleware",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.490Z",
    "updated_at": "2025-04-12T11:18:22.490Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1300,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "Why should the <code>SECRET_KEY</code> setting be kept confidential and unique for each project?",
    "chapter_no": "14",
    "tag": "django-security-secret-key",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.491Z",
    "updated_at": "2025-04-12T11:18:22.491Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1301,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "Which <code>ModelAdmin</code> attribute is useful for automatically generating a slug field based on the value of another field (like a title)?",
    "chapter_no": "14",
    "tag": "django-admin-prepopulated-fields",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.492Z",
    "updated_at": "2025-04-12T11:18:22.492Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1302,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "To customize how a model is displayed and interacted with in the Django Admin, you typically subclass which class?",
    "chapter_no": "14",
    "tag": "django-admin-modeladmin",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.493Z",
    "updated_at": "2025-04-12T11:18:22.493Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1303,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "Settings related to user authentication backends, password validators, and login URLs are usually configured under which main setting?",
    "chapter_no": "14",
    "tag": "django-settings-auth",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.493Z",
    "updated_at": "2025-04-12T11:18:22.493Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1304,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "What action does the <code>python manage.py collectstatic</code> command perform?",
    "chapter_no": "14",
    "tag": "django-manage-collectstatic",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.494Z",
    "updated_at": "2025-04-12T11:18:22.494Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1305,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "Which <code>manage.py</code> command starts an interactive Python shell with the Django project's environment loaded?",
    "chapter_no": "14",
    "tag": "django-manage-shell",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.494Z",
    "updated_at": "2025-04-12T11:18:22.494Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1306,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "Which Django model field type is specifically designed for image uploads and provides height/width attributes?",
    "chapter_no": "14",
    "tag": "django-filefield-imagefield",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.495Z",
    "updated_at": "2025-04-12T11:18:22.495Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1307,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "Which built-in Django middleware is responsible for managing user sessions via cookies or other backends?",
    "chapter_no": "14",
    "tag": "django-session-middleware",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.495Z",
    "updated_at": "2025-04-12T11:18:22.495Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1308,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "Which <code>manage.py</code> command is used specifically to create an administrative user?",
    "chapter_no": "14",
    "tag": "django-manage-createsuperuser",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.496Z",
    "updated_at": "2025-04-12T11:18:22.496Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1309,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "If you want to directly interact with your project's database using its native command-line client, which <code>manage.py</code> command is helpful?",
    "chapter_no": "14",
    "tag": "django-manage-dbshell",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.496Z",
    "updated_at": "2025-04-12T11:18:22.496Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1310,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "Which of the following is NOT typically considered a core infrastructure component covered when going \"beyond MVT\" in Django?",
    "chapter_no": "14",
    "tag": "beyond-mvt-pattern",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.497Z",
    "updated_at": "2025-04-12T11:18:22.497Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1311,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "What is the primary role of the <code>settings.py</code> file in a Django project?",
    "chapter_no": "14",
    "tag": "django-settings-file",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.498Z",
    "updated_at": "2025-04-12T11:18:22.498Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1312,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "Which setting in <code>settings.py</code> defines the base URL from which static files will be served?",
    "chapter_no": "14",
    "tag": "django-static-url",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.498Z",
    "updated_at": "2025-04-12T11:18:22.498Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1313,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "What is the purpose of the <code>ALLOWED_HOSTS</code> setting in <code>settings.py</code>?",
    "chapter_no": "14",
    "tag": "django-security-allowed-hosts",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.499Z",
    "updated_at": "2025-04-12T11:18:22.499Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1314,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "Which setting in <code>settings.py</code> specifies the absolute filesystem path to the directory where user-uploaded files will be stored?",
    "chapter_no": "14",
    "tag": "django-media-root",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.499Z",
    "updated_at": "2025-04-12T11:18:22.499Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1315,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "What is the main purpose of the Django Admin interface?",
    "chapter_no": "14",
    "tag": "django-admin-usage",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.500Z",
    "updated_at": "2025-04-12T11:18:22.500Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1316,
  "fields": {
    "quiz": 68,
    "topic": 40,
    "text": "How can you make certain fields visible but not editable within the Django Admin edit form?",
    "chapter_no": "14",
    "tag": "django-admin-readonly-fields",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.500Z",
    "updated_at": "2025-04-12T11:18:22.500Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1317,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "What is the role of a WSGI (or ASGI) server like Gunicorn or Uvicorn in a Django deployment?",
    "chapter_no": "14",
    "tag": "wsgi-asgi-servers",
    "position": 1,
    "created_at": "2025-04-12T11:18:22.512Z",
    "updated_at": "2025-04-12T11:18:22.512Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1318,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "Which setting typically defines the database connection parameters (engine, name, user, password, host, port)?",
    "chapter_no": "14",
    "tag": "django-settings-database",
    "position": 2,
    "created_at": "2025-04-12T11:18:22.512Z",
    "updated_at": "2025-04-12T11:18:22.512Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1319,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "What command is used to create an initial superuser account to access the Django Admin?",
    "chapter_no": "14",
    "tag": "django-admin-createsuperuser",
    "position": 3,
    "created_at": "2025-04-12T11:18:22.513Z",
    "updated_at": "2025-04-12T11:18:22.513Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1320,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "What does PaaS (Platform as a Service) typically offer for Django deployment (e.g., Heroku, PythonAnywhere)?",
    "chapter_no": "14",
    "tag": "paas-deployment",
    "position": 4,
    "created_at": "2025-04-12T11:18:22.513Z",
    "updated_at": "2025-04-12T11:18:22.513Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1321,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "Conceptually, how does a simple custom middleware class typically work in Django?",
    "chapter_no": "14",
    "tag": "django-custom-middleware",
    "position": 5,
    "created_at": "2025-04-12T11:18:22.514Z",
    "updated_at": "2025-04-12T11:18:22.514Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1322,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "Which <code>ModelAdmin</code> attribute is used to control which fields are displayed as columns in the admin list view for a model?",
    "chapter_no": "14",
    "tag": "django-admin-list-display",
    "position": 6,
    "created_at": "2025-04-12T11:18:22.515Z",
    "updated_at": "2025-04-12T11:18:22.515Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1323,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "What is the purpose of the <code>STATICFILES_DIRS</code> setting in <code>settings.py</code>?",
    "chapter_no": "14",
    "tag": "django-staticfiles-dirs",
    "position": 7,
    "created_at": "2025-04-12T11:18:22.515Z",
    "updated_at": "2025-04-12T11:18:22.515Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1324,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "Which setting in <code>settings.py</code> defines the base URL prefix for serving user-uploaded media files?",
    "chapter_no": "14",
    "tag": "django-media-url",
    "position": 8,
    "created_at": "2025-04-12T11:18:22.515Z",
    "updated_at": "2025-04-12T11:18:22.515Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1325,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "Why is the built-in Django development server (<code>runserver</code>) generally unsuitable for production environments?",
    "chapter_no": "14",
    "tag": "django-runserver-dev-only",
    "position": 9,
    "created_at": "2025-04-12T11:18:22.517Z",
    "updated_at": "2025-04-12T11:18:22.517Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1326,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "In which file do you typically register your Django models to make them appear in the Admin interface?",
    "chapter_no": "14",
    "tag": "django-admin-register",
    "position": 10,
    "created_at": "2025-04-12T11:18:22.517Z",
    "updated_at": "2025-04-12T11:18:22.517Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1327,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "What is the primary purpose of the <code>manage.py</code> script in a Django project?",
    "chapter_no": "14",
    "tag": "django-manage-py",
    "position": 11,
    "created_at": "2025-04-12T11:18:22.518Z",
    "updated_at": "2025-04-12T11:18:22.518Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1328,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "Why is the order of middleware classes listed in the <code>MIDDLEWARE</code> setting important?",
    "chapter_no": "14",
    "tag": "django-middleware-order",
    "position": 12,
    "created_at": "2025-04-12T11:18:22.518Z",
    "updated_at": "2025-04-12T11:18:22.518Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1329,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "Which file is primarily responsible for enabling and configuring the URL for the Django Admin site?",
    "chapter_no": "14",
    "tag": "django-admin-access",
    "position": 13,
    "created_at": "2025-04-12T11:18:22.519Z",
    "updated_at": "2025-04-12T11:18:22.519Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1330,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "To enable a search bar in the admin list view for searching specific model fields, which <code>ModelAdmin</code> attribute is used?",
    "chapter_no": "14",
    "tag": "django-admin-search-fields",
    "position": 14,
    "created_at": "2025-04-12T11:18:22.519Z",
    "updated_at": "2025-04-12T11:18:22.519Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1331,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "For production environments, what is a common best practice for storing and serving media files, especially for scalable applications?",
    "chapter_no": "14",
    "tag": "django-prod-media-storage",
    "position": 15,
    "created_at": "2025-04-12T11:18:22.520Z",
    "updated_at": "2025-04-12T11:18:22.520Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1332,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "When deploying to production, how should database credentials typically be configured?",
    "chapter_no": "14",
    "tag": "django-prod-database-config",
    "position": 16,
    "created_at": "2025-04-12T11:18:22.520Z",
    "updated_at": "2025-04-12T11:18:22.520Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1333,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "Which middleware associates the currently logged-in user (if any) with the <code>request</code> object (as <code>request.user</code>)?",
    "chapter_no": "14",
    "tag": "django-auth-middleware",
    "position": 17,
    "created_at": "2025-04-12T11:18:22.521Z",
    "updated_at": "2025-04-12T11:18:22.521Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1334,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "Which <code>manage.py</code> command is used to perform various checks on the Django project for potential issues without running the server or making migrations?",
    "chapter_no": "14",
    "tag": "django-manage-check",
    "position": 18,
    "created_at": "2025-04-12T11:18:22.521Z",
    "updated_at": "2025-04-12T11:18:22.521Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1335,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "What is the purpose of the <code>STATIC_ROOT</code> setting in <code>settings.py</code>?",
    "chapter_no": "14",
    "tag": "django-static-root",
    "position": 19,
    "created_at": "2025-04-12T11:18:22.523Z",
    "updated_at": "2025-04-12T11:18:22.523Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1336,
  "fields": {
    "quiz": 69,
    "topic": 40,
    "text": "What is a recommended practice for handling sensitive configuration data like API keys or database passwords in <code>settings.py</code>?",
    "chapter_no": "14",
    "tag": "env-variables-secrets",
    "position": 20,
    "created_at": "2025-04-12T11:18:22.523Z",
    "updated_at": "2025-04-12T11:18:22.523Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1337,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "Why would you add \"whitenoise.runserver_nostatic\" to INSTALLED_APPS in Django's settings?",
    "chapter_no": "1",
    "tag": "",
    "position": 1,
    "created_at": "2025-04-13T16:05:48.748Z",
    "updated_at": "2025-04-13T16:05:48.748Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1338,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "What is the purpose of the `--timeout` parameter in the gunicorn command in app.yaml?",
    "chapter_no": "1",
    "tag": "",
    "position": 2,
    "created_at": "2025-04-13T16:05:48.749Z",
    "updated_at": "2025-04-13T16:05:48.749Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1339,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "What is the main difference between `STATIC_ROOT` and `STATIC_URL` in Django's settings for App Engine deployment?",
    "chapter_no": "1",
    "tag": "",
    "position": 3,
    "created_at": "2025-04-13T16:05:48.749Z",
    "updated_at": "2025-04-13T16:05:48.749Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1340,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "When troubleshooting a 500 Internal Server Error in a deployed App Engine application, which command is most useful for immediate diagnosis?",
    "chapter_no": "1",
    "tag": "",
    "position": 4,
    "created_at": "2025-04-13T16:05:48.750Z",
    "updated_at": "2025-04-13T16:05:48.750Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1341,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "What would be the primary reason for a database connection error if you see this in your App Engine logs?\n```\ndjango.db.utils.OperationalError: could not connect to server: No such file or directory\n```",
    "chapter_no": "1",
    "tag": "",
    "position": 5,
    "created_at": "2025-04-13T16:05:48.751Z",
    "updated_at": "2025-04-13T16:05:48.751Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1342,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "What is the significance of the 'instance_class' setting in app.yaml?",
    "chapter_no": "1",
    "tag": "",
    "position": 6,
    "created_at": "2025-04-13T16:05:48.751Z",
    "updated_at": "2025-04-13T16:05:48.751Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1343,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "What does the `target_cpu_utilization` setting control in the `automatic_scaling` section of app.yaml?",
    "chapter_no": "1",
    "tag": "",
    "position": 7,
    "created_at": "2025-04-13T16:05:48.751Z",
    "updated_at": "2025-04-13T16:05:48.751Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1344,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "When setting up Cloud SQL for a Django application, why is it recommended to create a dedicated database user instead of using the root user?",
    "chapter_no": "1",
    "tag": "",
    "position": 8,
    "created_at": "2025-04-13T16:05:48.752Z",
    "updated_at": "2025-04-13T16:05:48.752Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1345,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "What role does the `runtime` parameter in app.yaml play in an App Engine deployment?",
    "chapter_no": "1",
    "tag": "",
    "position": 9,
    "created_at": "2025-04-13T16:05:48.752Z",
    "updated_at": "2025-04-13T16:05:48.752Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1346,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "Which of the following best describes the role of buildpacks in App Engine Standard deployments?",
    "chapter_no": "1",
    "tag": "",
    "position": 10,
    "created_at": "2025-04-13T16:05:48.753Z",
    "updated_at": "2025-04-13T16:05:48.753Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1347,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "What is the purpose of including \"whitenoise.middleware.WhiteNoiseMiddleware\" high in the MIDDLEWARE list?",
    "chapter_no": "1",
    "tag": "",
    "position": 11,
    "created_at": "2025-04-13T16:05:48.754Z",
    "updated_at": "2025-04-13T16:05:48.754Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1348,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "What is the significance of this line in app.yaml?\n```\nDJANGO_SETTINGS_MODULE: \"core.settings\"\n```",
    "chapter_no": "1",
    "tag": "",
    "position": 12,
    "created_at": "2025-04-13T16:05:48.754Z",
    "updated_at": "2025-04-13T16:05:48.754Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1349,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "In a Django App Engine deployment, when should you enable APIs with gcloud services enable?",
    "chapter_no": "1",
    "tag": "",
    "position": 13,
    "created_at": "2025-04-13T16:05:48.755Z",
    "updated_at": "2025-04-13T16:05:48.755Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1350,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "Why is it important to use the \"Secret Manager Secret Accessor\" role when configuring the App Engine service account?",
    "chapter_no": "1",
    "tag": "",
    "position": 14,
    "created_at": "2025-04-13T16:05:48.755Z",
    "updated_at": "2025-04-13T16:05:48.755Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1351,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "What is the correct sequence of actions when deploying a new version of a Django application to App Engine?",
    "chapter_no": "1",
    "tag": "",
    "position": 15,
    "created_at": "2025-04-13T16:05:48.756Z",
    "updated_at": "2025-04-13T16:05:48.756Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1352,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "What distinguishes App Engine Standard from Cloud Run in the Google Cloud ecosystem?",
    "chapter_no": "1",
    "tag": "",
    "position": 16,
    "created_at": "2025-04-13T16:05:48.756Z",
    "updated_at": "2025-04-13T16:05:48.756Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1353,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "When would you use `secure: always` in the handlers section of app.yaml?",
    "chapter_no": "1",
    "tag": "",
    "position": 17,
    "created_at": "2025-04-13T16:05:48.757Z",
    "updated_at": "2025-04-13T16:05:48.757Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1354,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "When using the Cloud SQL Auth Proxy to run migrations, why is it recommended to use a non-standard port like 5433 for PostgreSQL?",
    "chapter_no": "1",
    "tag": "",
    "position": 18,
    "created_at": "2025-04-13T16:05:48.757Z",
    "updated_at": "2025-04-13T16:05:48.757Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1355,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "What does setting `max_instances: 1` in the automatic_scaling section accomplish?",
    "chapter_no": "1",
    "tag": "",
    "position": 19,
    "created_at": "2025-04-13T16:05:48.758Z",
    "updated_at": "2025-04-13T16:05:48.758Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1356,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "Why would a Django application deployed to App Engine return a 400 Bad Request error when the same code works locally?",
    "chapter_no": "1",
    "tag": "",
    "position": 20,
    "created_at": "2025-04-13T16:05:48.759Z",
    "updated_at": "2025-04-13T16:05:48.759Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1357,
  "fields": {
    "quiz": 70,
    "topic": 41,
    "text": "What does the following line in settings.py accomplish?\n\n<pre><code class=\"language-python\">\nSTATICFILES_STORAGE = \"whitenoise.storage.CompressedManifestStaticFilesStorage\"\n</code></pre>",
    "chapter_no": "1",
    "tag": "",
    "position": 21,
    "created_at": "2025-04-13T16:05:48.759Z",
    "updated_at": "2025-04-13T16:05:48.759Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1358,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "After deploying a Django application to App Engine, which step is essential to ensure the database is ready for use?",
    "chapter_no": "2",
    "tag": "",
    "position": 1,
    "created_at": "2025-04-13T16:05:48.774Z",
    "updated_at": "2025-04-13T16:05:48.774Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1359,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "What is the primary advantage of App Engine Standard's automatic scaling for low-traffic applications?",
    "chapter_no": "2",
    "tag": "",
    "position": 2,
    "created_at": "2025-04-13T16:05:48.774Z",
    "updated_at": "2025-04-13T16:05:48.774Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1360,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "When deploying to App Engine, what is the correct sequence for handling sensitive information like database passwords?",
    "chapter_no": "2",
    "tag": "",
    "position": 3,
    "created_at": "2025-04-13T16:05:48.775Z",
    "updated_at": "2025-04-13T16:05:48.775Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1361,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "What is the primary ongoing cost consideration when running a Django application on App Engine Standard with minimal traffic?",
    "chapter_no": "2",
    "tag": "",
    "position": 4,
    "created_at": "2025-04-13T16:05:48.776Z",
    "updated_at": "2025-04-13T16:05:48.776Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1362,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "When creating a Cloud SQL instance for a Django application, what's the significance of selecting the same region for both the database and App Engine application?",
    "chapter_no": "2",
    "tag": "",
    "position": 5,
    "created_at": "2025-04-13T16:05:48.776Z",
    "updated_at": "2025-04-13T16:05:48.776Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1363,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "In the context of deploying a Django application to App Engine Standard, why is `gunicorn` specified in the requirements?",
    "chapter_no": "2",
    "tag": "",
    "position": 6,
    "created_at": "2025-04-13T16:05:48.777Z",
    "updated_at": "2025-04-13T16:05:48.777Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1364,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "In the context of App Engine deployment, what does the following code in `settings.py` primarily accomplish?\n\n<pre><code class=\"language-python\">\ndef get_env_variable(var_name, default=None):\n    value = os.environ.get(var_name, default)\n    if value is None and default is None:\n        raise ImproperlyConfigured(f\"Required environment variable '{var_name}' is not set.\")\n    return value\n</code></pre>",
    "chapter_no": "2",
    "tag": "",
    "position": 7,
    "created_at": "2025-04-13T16:05:48.777Z",
    "updated_at": "2025-04-13T16:05:48.777Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1365,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "In Django's production settings for App Engine deployment, what is the primary reason for setting `DEBUG = False`?",
    "chapter_no": "2",
    "tag": "",
    "position": 8,
    "created_at": "2025-04-13T16:05:48.778Z",
    "updated_at": "2025-04-13T16:05:48.778Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1366,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "What is the purpose of the `STATICFILES_STORAGE` setting in Django when deploying to App Engine with Whitenoise?",
    "chapter_no": "2",
    "tag": "",
    "position": 9,
    "created_at": "2025-04-13T16:05:48.779Z",
    "updated_at": "2025-04-13T16:05:48.779Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1367,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "What is the significance of setting `min_instances: 0` in the `automatic_scaling` section of `app.yaml`?",
    "chapter_no": "2",
    "tag": "",
    "position": 10,
    "created_at": "2025-04-13T16:05:48.779Z",
    "updated_at": "2025-04-13T16:05:48.779Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1368,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "Why would you need to run `python manage.py collectstatic` before deploying to App Engine?",
    "chapter_no": "2",
    "tag": "",
    "position": 11,
    "created_at": "2025-04-13T16:05:48.780Z",
    "updated_at": "2025-04-13T16:05:48.780Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1369,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "What role does the `ALLOWED_HOSTS` setting play in a Django application deployed to App Engine?",
    "chapter_no": "2",
    "tag": "",
    "position": 12,
    "created_at": "2025-04-13T16:05:48.780Z",
    "updated_at": "2025-04-13T16:05:48.780Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1370,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "What is the primary role of the `.gcloudignore` file in an App Engine deployment?",
    "chapter_no": "2",
    "tag": "",
    "position": 13,
    "created_at": "2025-04-13T16:05:48.781Z",
    "updated_at": "2025-04-13T16:05:48.781Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1371,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "What does the following line in `app.yaml` accomplish?\n```\nentrypoint: gunicorn -b :$PORT core.wsgi:application --workers 2 --threads 4 --timeout 60\n```",
    "chapter_no": "2",
    "tag": "",
    "position": 14,
    "created_at": "2025-04-13T16:05:48.781Z",
    "updated_at": "2025-04-13T16:05:48.781Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1372,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "In the App Engine `app.yaml` file, what does the `entrypoint` parameter specify?",
    "chapter_no": "2",
    "tag": "",
    "position": 15,
    "created_at": "2025-04-13T16:05:48.782Z",
    "updated_at": "2025-04-13T16:05:48.782Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1373,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "What is the purpose of the `whitenoise` package when deploying a Django application to App Engine?",
    "chapter_no": "2",
    "tag": "",
    "position": 16,
    "created_at": "2025-04-13T16:05:48.782Z",
    "updated_at": "2025-04-13T16:05:48.782Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1374,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "What is the purpose of Secret Manager in a Django App Engine deployment?",
    "chapter_no": "2",
    "tag": "",
    "position": 17,
    "created_at": "2025-04-13T16:05:48.782Z",
    "updated_at": "2025-04-13T16:05:48.783Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1375,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "What is the purpose of the `beta_settings` section in the App Engine `app.yaml` file?",
    "chapter_no": "2",
    "tag": "",
    "position": 18,
    "created_at": "2025-04-13T16:05:48.783Z",
    "updated_at": "2025-04-13T16:05:48.783Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1376,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "What is the Cloud SQL Auth Proxy used for in the context of a Django App Engine deployment?",
    "chapter_no": "2",
    "tag": "",
    "position": 19,
    "created_at": "2025-04-13T16:05:48.784Z",
    "updated_at": "2025-04-13T16:05:48.784Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1377,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "When deploying a Django application to App Engine, why shouldn't you use SQLite as your database?",
    "chapter_no": "2",
    "tag": "",
    "position": 20,
    "created_at": "2025-04-13T16:05:48.784Z",
    "updated_at": "2025-04-13T16:05:48.784Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1378,
  "fields": {
    "quiz": 71,
    "topic": 42,
    "text": "When deploying a Django application to App Engine Standard, what is the significance of the `DB_HOST` environment variable format `/cloudsql/PROJECT_ID:REGION:INSTANCE_ID`?",
    "chapter_no": "2",
    "tag": "",
    "position": 21,
    "created_at": "2025-04-13T16:05:48.785Z",
    "updated_at": "2025-04-13T16:05:48.785Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1379,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "Which database should NOT be used for a Django application on Cloud Run and why?",
    "chapter_no": "3",
    "tag": "",
    "position": 1,
    "created_at": "2025-04-13T16:05:48.798Z",
    "updated_at": "2025-04-13T16:05:48.798Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1380,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "Which environment variable format is typically used to connect a Django application to a Cloud SQL PostgreSQL database in Cloud Run?",
    "chapter_no": "3",
    "tag": "",
    "position": 2,
    "created_at": "2025-04-13T16:05:48.799Z",
    "updated_at": "2025-04-13T16:05:48.799Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1381,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "Which of the following is the correct command in a Dockerfile to run Django's collectstatic process during the container image build?",
    "chapter_no": "3",
    "tag": "",
    "position": 3,
    "created_at": "2025-04-13T16:05:48.800Z",
    "updated_at": "2025-04-13T16:05:48.800Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1382,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "What is the purpose of the Cloud SQL Auth Proxy when running Django database migrations for a Cloud Run deployment?",
    "chapter_no": "3",
    "tag": "",
    "position": 4,
    "created_at": "2025-04-13T16:05:48.800Z",
    "updated_at": "2025-04-13T16:05:48.800Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1383,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "What command is typically used to run a Django application in a production container on Cloud Run?",
    "chapter_no": "3",
    "tag": "",
    "position": 5,
    "created_at": "2025-04-13T16:05:48.801Z",
    "updated_at": "2025-04-13T16:05:48.801Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1384,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "When setting up a Django application for production deployment on Cloud Run, why is it important to set DEBUG=False?",
    "chapter_no": "3",
    "tag": "",
    "position": 6,
    "created_at": "2025-04-13T16:05:48.801Z",
    "updated_at": "2025-04-13T16:05:48.801Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1385,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "What happens if you don't run Django migrations after deploying to Cloud Run?",
    "chapter_no": "3",
    "tag": "",
    "position": 7,
    "created_at": "2025-04-13T16:05:48.802Z",
    "updated_at": "2025-04-13T16:05:48.802Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1386,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "What does the --add-cloudsql-instances flag do when deploying to Cloud Run?",
    "chapter_no": "3",
    "tag": "",
    "position": 8,
    "created_at": "2025-04-13T16:05:48.803Z",
    "updated_at": "2025-04-13T16:05:48.803Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1387,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "What is the primary benefit of using Google Cloud Run for low-traffic Django applications?",
    "chapter_no": "3",
    "tag": "",
    "position": 9,
    "created_at": "2025-04-13T16:05:48.803Z",
    "updated_at": "2025-04-13T16:05:48.803Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1388,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "What is the purpose of using whitenoise in a Django application deployed to Cloud Run?",
    "chapter_no": "3",
    "tag": "",
    "position": 10,
    "created_at": "2025-04-13T16:05:48.804Z",
    "updated_at": "2025-04-13T16:05:48.804Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1389,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "What does the EXPOSE directive do in a Dockerfile for a Django Cloud Run deployment?",
    "chapter_no": "3",
    "tag": "",
    "position": 11,
    "created_at": "2025-04-13T16:05:48.804Z",
    "updated_at": "2025-04-13T16:05:48.804Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1390,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "When configuring ALLOWED_HOSTS in Django for Cloud Run deployment, which environment variable provides the service URL?",
    "chapter_no": "3",
    "tag": "",
    "position": 12,
    "created_at": "2025-04-13T16:05:48.805Z",
    "updated_at": "2025-04-13T16:05:48.805Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1391,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "Which of the following is NOT a Google Cloud API that needs to be enabled for a typical Django deployment to Cloud Run with Cloud SQL?",
    "chapter_no": "3",
    "tag": "",
    "position": 13,
    "created_at": "2025-04-13T16:05:48.806Z",
    "updated_at": "2025-04-13T16:05:48.806Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1392,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "Which of the following WSGI server configurations would be most appropriate for a low-traffic Django application on Cloud Run with a default instance (1 vCPU)?",
    "chapter_no": "3",
    "tag": "",
    "position": 14,
    "created_at": "2025-04-13T16:05:48.806Z",
    "updated_at": "2025-04-13T16:05:48.806Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1393,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "In the context of Django on Cloud Run, why is the gunicorn web server used instead of Django's built-in development server?",
    "chapter_no": "3",
    "tag": "",
    "position": 15,
    "created_at": "2025-04-13T16:05:48.807Z",
    "updated_at": "2025-04-13T16:05:48.807Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1394,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "What is the purpose of the .dockerignore file when deploying a Django application to Cloud Run?",
    "chapter_no": "3",
    "tag": "",
    "position": 16,
    "created_at": "2025-04-13T16:05:48.807Z",
    "updated_at": "2025-04-13T16:05:48.807Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1395,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "When using Cloud Run with secrets from Secret Manager, what role must be assigned to the Cloud Run service account?",
    "chapter_no": "3",
    "tag": "",
    "position": 17,
    "created_at": "2025-04-13T16:05:48.808Z",
    "updated_at": "2025-04-13T16:05:48.808Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1396,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "In a Django settings.py file for Cloud Run deployment, what is the purpose of the SECURE_PROXY_SSL_HEADER setting?",
    "chapter_no": "3",
    "tag": "",
    "position": 18,
    "created_at": "2025-04-13T16:05:48.808Z",
    "updated_at": "2025-04-13T16:05:48.808Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1397,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "What is the primary ongoing cost factor for a low-traffic Django application deployed on Cloud Run?",
    "chapter_no": "3",
    "tag": "",
    "position": 19,
    "created_at": "2025-04-13T16:05:48.809Z",
    "updated_at": "2025-04-13T16:05:48.809Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1398,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "In a Dockerfile for a Django application, why is it beneficial to copy and install the requirements.txt file before copying the application code?",
    "chapter_no": "3",
    "tag": "",
    "position": 20,
    "created_at": "2025-04-13T16:05:48.809Z",
    "updated_at": "2025-04-13T16:05:48.809Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1399,
  "fields": {
    "quiz": 72,
    "topic": 43,
    "text": "What is the recommended approach for setting Django's SECRET_KEY in a Cloud Run deployment?",
    "chapter_no": "3",
    "tag": "",
    "position": 21,
    "created_at": "2025-04-13T16:05:48.810Z",
    "updated_at": "2025-04-13T16:05:48.810Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1400,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "What does the PYTHONDONTWRITEBYTECODE environment variable do in a Django container?",
    "chapter_no": "4",
    "tag": "",
    "position": 1,
    "created_at": "2025-04-13T16:05:48.824Z",
    "updated_at": "2025-04-13T16:05:48.824Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1401,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "What is the most important reason NOT to use Django's built-in sqlite database when deploying to Cloud Run?",
    "chapter_no": "4",
    "tag": "",
    "position": 2,
    "created_at": "2025-04-13T16:05:48.824Z",
    "updated_at": "2025-04-13T16:05:48.824Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1402,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "What does the --set-secrets flag do when deploying a Django application to Cloud Run?",
    "chapter_no": "4",
    "tag": "",
    "position": 3,
    "created_at": "2025-04-13T16:05:48.825Z",
    "updated_at": "2025-04-13T16:05:48.825Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1403,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "When running Django migrations for a Cloud Run deployment using the Cloud SQL Auth Proxy, which port is typically used for a PostgreSQL database?",
    "chapter_no": "4",
    "tag": "",
    "position": 4,
    "created_at": "2025-04-13T16:05:48.826Z",
    "updated_at": "2025-04-13T16:05:48.826Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1404,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "What is the purpose of the `PYTHONUNBUFFERED` environment variable in a Django application Dockerfile?",
    "chapter_no": "4",
    "tag": "",
    "position": 5,
    "created_at": "2025-04-13T16:05:48.826Z",
    "updated_at": "2025-04-13T16:05:48.826Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1405,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "In a Docker container running on Cloud Run, what does the CMD instruction in the Dockerfile specify?",
    "chapter_no": "4",
    "tag": "",
    "position": 6,
    "created_at": "2025-04-13T16:05:48.827Z",
    "updated_at": "2025-04-13T16:05:48.827Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1406,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "Which of the following correctly describes the relationship between gunicorn and whitenoise in a Django Cloud Run deployment?",
    "chapter_no": "4",
    "tag": "",
    "position": 7,
    "created_at": "2025-04-13T16:05:48.828Z",
    "updated_at": "2025-04-13T16:05:48.828Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1407,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "When following best practices for Cloud Run deployments, where should the Django collectstatic command be run?",
    "chapter_no": "4",
    "tag": "",
    "position": 8,
    "created_at": "2025-04-13T16:05:48.828Z",
    "updated_at": "2025-04-13T16:05:48.828Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1408,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "What package is recommended in the tutorial for parsing database connection URLs in Django applications deployed to Cloud Run?",
    "chapter_no": "4",
    "tag": "",
    "position": 9,
    "created_at": "2025-04-13T16:05:48.829Z",
    "updated_at": "2025-04-13T16:05:48.829Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1409,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "Which of the following is the correct format for DATABASE_URL when connecting to a PostgreSQL Cloud SQL instance from Cloud Run?",
    "chapter_no": "4",
    "tag": "",
    "position": 10,
    "created_at": "2025-04-13T16:05:48.829Z",
    "updated_at": "2025-04-13T16:05:48.829Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1410,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "Which Google Cloud service is responsible for building the container image during Cloud Run deployment with --source flag?",
    "chapter_no": "4",
    "tag": "",
    "position": 11,
    "created_at": "2025-04-13T16:05:48.830Z",
    "updated_at": "2025-04-13T16:05:48.830Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1411,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "When a Django application on Cloud Run needs to connect to a Cloud SQL instance, what component manages this connection securely?",
    "chapter_no": "4",
    "tag": "",
    "position": 12,
    "created_at": "2025-04-13T16:05:48.830Z",
    "updated_at": "2025-04-13T16:05:48.830Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1412,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "What is the purpose of the --allow-unauthenticated flag when deploying to Cloud Run?",
    "chapter_no": "4",
    "tag": "",
    "position": 13,
    "created_at": "2025-04-13T16:05:48.831Z",
    "updated_at": "2025-04-13T16:05:48.831Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1413,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "What happens if the ALLOWED_HOSTS setting is not properly configured in a Django application deployed to Cloud Run?",
    "chapter_no": "4",
    "tag": "",
    "position": 14,
    "created_at": "2025-04-13T16:05:48.832Z",
    "updated_at": "2025-04-13T16:05:48.832Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1414,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "When configuring CSRF protection for a Django application running on Cloud Run, what setting is needed due to Cloud Run's architecture?",
    "chapter_no": "4",
    "tag": "",
    "position": 15,
    "created_at": "2025-04-13T16:05:48.832Z",
    "updated_at": "2025-04-13T16:05:48.832Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1415,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "In the Dockerfile, why should you set WORKDIR to /app for a Django application?",
    "chapter_no": "4",
    "tag": "",
    "position": 16,
    "created_at": "2025-04-13T16:05:48.833Z",
    "updated_at": "2025-04-13T16:05:48.833Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1416,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "What is the recommended pattern for installing dependencies in a multi-stage Dockerfile for a Django application?",
    "chapter_no": "4",
    "tag": "",
    "position": 17,
    "created_at": "2025-04-13T16:05:48.833Z",
    "updated_at": "2025-04-13T16:05:48.833Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1417,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "What is the purpose of the STATICFILES_STORAGE setting in a Django application for Cloud Run?",
    "chapter_no": "4",
    "tag": "",
    "position": 18,
    "created_at": "2025-04-13T16:05:48.834Z",
    "updated_at": "2025-04-13T16:05:48.834Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1418,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "Why should you use environment variables for configuration in a Django application deployed to Cloud Run?",
    "chapter_no": "4",
    "tag": "",
    "position": 19,
    "created_at": "2025-04-13T16:05:48.835Z",
    "updated_at": "2025-04-13T16:05:48.835Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1419,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "What is an advantage of using a smaller Cloud SQL instance (like db-f1-micro) for a Django application with low traffic?",
    "chapter_no": "4",
    "tag": "",
    "position": 20,
    "created_at": "2025-04-13T16:05:48.836Z",
    "updated_at": "2025-04-13T16:05:48.836Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1420,
  "fields": {
    "quiz": 73,
    "topic": 44,
    "text": "What is a key advantage of containerizing Django applications for Cloud Run deployment?",
    "chapter_no": "4",
    "tag": "",
    "position": 21,
    "created_at": "2025-04-13T16:05:48.836Z",
    "updated_at": "2025-04-13T16:05:48.836Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1421,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "When using Django's built-in UserCreationForm for registration, what important step should you take after form.save() to improve user experience?",
    "chapter_no": "5",
    "tag": "",
    "position": 1,
    "created_at": "2025-04-13T16:05:48.852Z",
    "updated_at": "2025-04-13T16:05:48.852Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1422,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "Which setting controls where users are redirected after successful login in Django?",
    "chapter_no": "5",
    "tag": "",
    "position": 2,
    "created_at": "2025-04-13T16:05:48.853Z",
    "updated_at": "2025-04-13T16:05:48.853Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1423,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "If a user is redirected to the login page by the @login_required decorator, what happens after they successfully log in?",
    "chapter_no": "5",
    "tag": "",
    "position": 3,
    "created_at": "2025-04-13T16:05:48.853Z",
    "updated_at": "2025-04-13T16:05:48.853Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1424,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "Why must SessionMiddleware be placed before AuthenticationMiddleware in the MIDDLEWARE setting?",
    "chapter_no": "5",
    "tag": "",
    "position": 4,
    "created_at": "2025-04-13T16:05:48.854Z",
    "updated_at": "2025-04-13T16:05:48.854Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1425,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "What happens when the @permission_required decorator is used with raise_exception=True and a user without the required permission attempts to access the view?",
    "chapter_no": "5",
    "tag": "",
    "position": 5,
    "created_at": "2025-04-13T16:05:48.855Z",
    "updated_at": "2025-04-13T16:05:48.855Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1426,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "When using both @login_required and @permission_required decorators on a view, which order is correct?",
    "chapter_no": "5",
    "tag": "",
    "position": 6,
    "created_at": "2025-04-13T16:05:48.855Z",
    "updated_at": "2025-04-13T16:05:48.855Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1427,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "Which Django form class is specifically designed for user registration?",
    "chapter_no": "5",
    "tag": "",
    "position": 7,
    "created_at": "2025-04-13T16:05:48.856Z",
    "updated_at": "2025-04-13T16:05:48.856Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1428,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "In Django, how are permissions typically created for models?",
    "chapter_no": "5",
    "tag": "",
    "position": 8,
    "created_at": "2025-04-13T16:05:48.856Z",
    "updated_at": "2025-04-13T16:05:48.856Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1429,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "What's the best approach for implementing role-based access control in Django?",
    "chapter_no": "5",
    "tag": "",
    "position": 9,
    "created_at": "2025-04-13T16:05:48.857Z",
    "updated_at": "2025-04-13T16:05:48.857Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1430,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "What is the purpose of the @login_required decorator in Django views?",
    "chapter_no": "5",
    "tag": "",
    "position": 10,
    "created_at": "2025-04-13T16:05:48.857Z",
    "updated_at": "2025-04-13T16:05:48.857Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1431,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "What is the correct way to include Django's built-in authentication URLs in your project?",
    "chapter_no": "5",
    "tag": "",
    "position": 11,
    "created_at": "2025-04-13T16:05:48.858Z",
    "updated_at": "2025-04-13T16:05:48.858Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1432,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "What is the purpose of the `{% csrf_token %}` in a Django login form template?",
    "chapter_no": "5",
    "tag": "",
    "position": 12,
    "created_at": "2025-04-13T16:05:48.858Z",
    "updated_at": "2025-04-13T16:05:48.858Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1433,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "In Django's auth system, what is the purpose of the 'next' parameter in the login URL?",
    "chapter_no": "5",
    "tag": "",
    "position": 13,
    "created_at": "2025-04-13T16:05:48.859Z",
    "updated_at": "2025-04-13T16:05:48.859Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1434,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "What is the correct way to check if a user has a specific permission in a Django view?",
    "chapter_no": "5",
    "tag": "",
    "position": 14,
    "created_at": "2025-04-13T16:05:48.859Z",
    "updated_at": "2025-04-13T16:05:48.859Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1435,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "Which of the following correctly describes what happens when SessionMiddleware processes a request in Django?",
    "chapter_no": "5",
    "tag": "",
    "position": 15,
    "created_at": "2025-04-13T16:05:48.860Z",
    "updated_at": "2025-04-13T16:05:48.860Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1436,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "What is the purpose of the `is_active` field in Django's User model?",
    "chapter_no": "5",
    "tag": "",
    "position": 16,
    "created_at": "2025-04-13T16:05:48.860Z",
    "updated_at": "2025-04-13T16:05:48.860Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1437,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "Which of these fields is NOT part of Django's built-in User model?",
    "chapter_no": "5",
    "tag": "",
    "position": 17,
    "created_at": "2025-04-13T16:05:48.861Z",
    "updated_at": "2025-04-13T16:05:48.861Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1438,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "How do you access a user's permissions in a Django template?",
    "chapter_no": "5",
    "tag": "",
    "position": 18,
    "created_at": "2025-04-13T16:05:48.862Z",
    "updated_at": "2025-04-13T16:05:48.862Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1439,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "What is Django's AnonymousUser and when is it used?",
    "chapter_no": "5",
    "tag": "",
    "position": 19,
    "created_at": "2025-04-13T16:05:48.862Z",
    "updated_at": "2025-04-13T16:05:48.862Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1440,
  "fields": {
    "quiz": 74,
    "topic": 45,
    "text": "What is the correct way to subclass Django's UserCreationForm to add custom fields?",
    "chapter_no": "5",
    "tag": "",
    "position": 20,
    "created_at": "2025-04-13T16:05:48.863Z",
    "updated_at": "2025-04-13T16:05:48.863Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1441,
  "fields": {
    "quiz": 75,
    "topic": 45,
    "text": "Which class-based view is most appropriate for implementing a user registration view in Django?",
    "chapter_no": "5",
    "tag": "",
    "position": 1,
    "created_at": "2025-04-13T16:05:48.874Z",
    "updated_at": "2025-04-13T16:05:48.874Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1442,
  "fields": {
    "quiz": 75,
    "topic": 45,
    "text": "Which of the following Django settings.py INSTALLED_APPS is NOT directly related to the authentication system?",
    "chapter_no": "5",
    "tag": "",
    "position": 2,
    "created_at": "2025-04-13T16:05:48.875Z",
    "updated_at": "2025-04-13T16:05:48.875Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1443,
  "fields": {
    "quiz": 75,
    "topic": 45,
    "text": "How does Django store user passwords in the database?",
    "chapter_no": "5",
    "tag": "",
    "position": 3,
    "created_at": "2025-04-13T16:05:48.875Z",
    "updated_at": "2025-04-13T16:05:48.875Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1444,
  "fields": {
    "quiz": 75,
    "topic": 45,
    "text": "What is the meaning of the is_superuser flag on Django's User model?",
    "chapter_no": "5",
    "tag": "",
    "position": 4,
    "created_at": "2025-04-13T16:05:48.876Z",
    "updated_at": "2025-04-13T16:05:48.876Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1445,
  "fields": {
    "quiz": 75,
    "topic": 45,
    "text": "When a user successfully logs in to a Django application, what is stored in the session to maintain their authenticated state?",
    "chapter_no": "5",
    "tag": "",
    "position": 5,
    "created_at": "2025-04-13T16:05:48.876Z",
    "updated_at": "2025-04-13T16:05:48.876Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1446,
  "fields": {
    "quiz": 75,
    "topic": 45,
    "text": "What's the primary reason for using a POST request instead of a GET request for logout functionality?",
    "chapter_no": "5",
    "tag": "",
    "position": 6,
    "created_at": "2025-04-13T16:05:48.876Z",
    "updated_at": "2025-04-13T16:05:48.876Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1447,
  "fields": {
    "quiz": 75,
    "topic": 45,
    "text": "In Django's authentication system, which middleware is responsible for associating users with requests?",
    "chapter_no": "5",
    "tag": "",
    "position": 7,
    "created_at": "2025-04-13T16:05:48.877Z",
    "updated_at": "2025-04-13T16:05:48.877Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1448,
  "fields": {
    "quiz": 75,
    "topic": 45,
    "text": "What is the primary purpose of Django's Groups in the authentication system?",
    "chapter_no": "5",
    "tag": "",
    "position": 8,
    "created_at": "2025-04-13T16:05:48.878Z",
    "updated_at": "2025-04-13T16:05:48.878Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1449,
  "fields": {
    "quiz": 75,
    "topic": 45,
    "text": "What is the difference between is_staff and is_superuser flags on a Django User?",
    "chapter_no": "5",
    "tag": "",
    "position": 9,
    "created_at": "2025-04-13T16:05:48.878Z",
    "updated_at": "2025-04-13T16:05:48.878Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1450,
  "fields": {
    "quiz": 75,
    "topic": 45,
    "text": "What is the primary difference between Authentication and Authorization in Django?",
    "chapter_no": "5",
    "tag": "",
    "position": 10,
    "created_at": "2025-04-13T16:05:48.879Z",
    "updated_at": "2025-04-13T16:05:48.879Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1451,
  "fields": {
    "quiz": 75,
    "topic": 45,
    "text": "Which decorator can be used to restrict a Django view to users with specific permissions?",
    "chapter_no": "5",
    "tag": "",
    "position": 11,
    "created_at": "2025-04-13T16:05:48.879Z",
    "updated_at": "2025-04-13T16:05:48.879Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.question",
  "pk": 1452,
  "fields": {
    "quiz": 75,
    "topic": 45,
    "text": "What does the following code check in a Django template?\n\n<pre><code class=\"language-html\">\n{% if user.is_authenticated %}\n  <!-- Content here -->\n{% endif %}\n</code></pre>",
    "chapter_no": "5",
    "tag": "",
    "position": 12,
    "created_at": "2025-04-13T16:05:48.880Z",
    "updated_at": "2025-04-13T16:05:48.880Z",
    "is_active": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3601,
  "fields": {
    "question": 721,
    "text": "To restrict the session cookie to only be sent with requests originating from the same site.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3602,
  "fields": {
    "question": 721,
    "text": "To prevent client-side JavaScript from accessing the session cookie, mitigating cross-site scripting (XSS) attacks.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3603,
  "fields": {
    "question": 721,
    "text": "To ensure the session cookie is only sent over HTTPS connections.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3604,
  "fields": {
    "question": 721,
    "text": "To automatically expire the session cookie when the browser is closed.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3605,
  "fields": {
    "question": 721,
    "text": "To enforce that only HTTP requests (not HTTPS) can use the session cookie.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3606,
  "fields": {
    "question": 722,
    "text": "`AuthMiddleware` and `PermissionMiddleware`",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3607,
  "fields": {
    "question": 722,
    "text": "`SessionMiddleware` and `AuthenticationMiddleware`",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3608,
  "fields": {
    "question": 722,
    "text": "`CsrfViewMiddleware` and `AuthenticationMiddleware`",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3609,
  "fields": {
    "question": 722,
    "text": "`UserMiddleware` and `SessionMiddleware`",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3610,
  "fields": {
    "question": 722,
    "text": "`SecurityMiddleware` and `SessionMiddleware`",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3611,
  "fields": {
    "question": 723,
    "text": "Using biometric authentication directly through the browser.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3612,
  "fields": {
    "question": 723,
    "text": "Sending a session token via email that must be entered.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3613,
  "fields": {
    "question": 723,
    "text": "Requiring users to answer security questions after password entry.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3614,
  "fields": {
    "question": 723,
    "text": "Validating the user's IP address against a known list.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3615,
  "fields": {
    "question": 723,
    "text": "Using Time-based One-Time Passwords (TOTP) generated from a shared secret key.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3616,
  "fields": {
    "question": 724,
    "text": "Embed JavaScript in the template to perform the permission check via an API call.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3617,
  "fields": {
    "question": 724,
    "text": "Use the `perms.has_perm('perm_name', obj)` syntax directly within the template.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3618,
  "fields": {
    "question": 724,
    "text": "Create a custom model method `user_can_edit(user)` and call it in the template.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3619,
  "fields": {
    "question": 724,
    "text": "Perform the check in the view using Python logic and pass the boolean result to the template context.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3620,
  "fields": {
    "question": 724,
    "text": "Write complex conditional logic using template tags directly in the HTML.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3621,
  "fields": {
    "question": 725,
    "text": "Session fixation is an attack where an attacker tricks a user into using a session ID known to the attacker; Django prevents this by generating a new session ID upon successful login.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3622,
  "fields": {
    "question": 725,
    "text": "Session fixation means storing too much data in the session; Django prevents this by using database-backed sessions.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3623,
  "fields": {
    "question": 725,
    "text": "Session fixation is tying a session to a specific IP address; Django prevents this by default.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3624,
  "fields": {
    "question": 725,
    "text": "Session fixation involves stealing a user's session cookie; Django prevents this with `SESSION_COOKIE_HTTPONLY`.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3625,
  "fields": {
    "question": 725,
    "text": "Session fixation is when a session never expires; Django prevents this with the `SESSION_COOKIE_AGE` setting.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3626,
  "fields": {
    "question": 726,
    "text": "`User.objects.register()`",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3627,
  "fields": {
    "question": 726,
    "text": "`User(username=..., password=...).save()`",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3628,
  "fields": {
    "question": 726,
    "text": "`User.objects.make_password()`",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3629,
  "fields": {
    "question": 726,
    "text": "`User.objects.create()`",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3630,
  "fields": {
    "question": 726,
    "text": "`User.objects.create_user()`",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3631,
  "fields": {
    "question": 727,
    "text": "To list the authentication backends used for verifying passwords.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3632,
  "fields": {
    "question": 727,
    "text": "To enable or disable password expiration policies.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3633,
  "fields": {
    "question": 727,
    "text": "To define a list of validators that check the strength and suitability of user passwords during creation or change.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3634,
  "fields": {
    "question": 727,
    "text": "To configure the password reset email templates.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3635,
  "fields": {
    "question": 727,
    "text": "To specify the password hashing algorithms used by Django.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3636,
  "fields": {
    "question": 728,
    "text": "Middleware provides more fine-grained control over specific view logic.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3637,
  "fields": {
    "question": 728,
    "text": "Middleware is generally easier to test than view decorators.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3638,
  "fields": {
    "question": 728,
    "text": "Middleware is the only way to protect class-based views.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3639,
  "fields": {
    "question": 728,
    "text": "Middleware allows you to protect entire sections of your site based on URL patterns in a centralized place.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3640,
  "fields": {
    "question": 728,
    "text": "Middleware protection logic is more explicit and visible within the view code.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3641,
  "fields": {
    "question": 729,
    "text": "By importing the custom user model directly, e.g., `from myapp.models import CustomUser`.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3642,
  "fields": {
    "question": 729,
    "text": "Using `models.ForeignKey('auth.User', ...)`, regardless of the custom model.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3643,
  "fields": {
    "question": 729,
    "text": "Using `get_user_model()` directly in the ForeignKey definition, e.g., `models.ForeignKey(get_user_model(), ...)`.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3644,
  "fields": {
    "question": 729,
    "text": "Using the string value from `settings.AUTH_USER_MODEL`, e.g., `models.ForeignKey(settings.AUTH_USER_MODEL, ...)`.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3645,
  "fields": {
    "question": 729,
    "text": "By importing the default `User` model, as Django handles the mapping internally.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3646,
  "fields": {
    "question": 730,
    "text": "Packages like `django-axes` offer more sophisticated features like database logging of attempts, persistent lockouts, admin management, and flexible configuration.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3647,
  "fields": {
    "question": 730,
    "text": "They provide built-in two-factor authentication capabilities.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3648,
  "fields": {
    "question": 730,
    "text": "They integrate directly with external firewall services for IP blocking.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3649,
  "fields": {
    "question": 730,
    "text": "They are significantly faster because they bypass the Django ORM.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3650,
  "fields": {
    "question": 730,
    "text": "They eliminate the need for CAPTCHAs entirely.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3651,
  "fields": {
    "question": 731,
    "text": "To improve application performance by caching authentication results.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3652,
  "fields": {
    "question": 731,
    "text": "To enforce rate limiting policies based on historical data.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3653,
  "fields": {
    "question": 731,
    "text": "For security monitoring, auditing, detecting suspicious activity, and compliance purposes.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3654,
  "fields": {
    "question": 731,
    "text": "To allow users to see their own login history directly.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3655,
  "fields": {
    "question": 731,
    "text": "To automatically generate reports for user engagement metrics.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3656,
  "fields": {
    "question": 732,
    "text": "`AuthenticationForm`",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3657,
  "fields": {
    "question": 732,
    "text": "`UserCreationForm`",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3658,
  "fields": {
    "question": 732,
    "text": "`RegistrationForm`",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3659,
  "fields": {
    "question": 732,
    "text": "`SignUpForm`",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3660,
  "fields": {
    "question": 732,
    "text": "`UserModelForm`",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3661,
  "fields": {
    "question": 733,
    "text": "`@custom_auth`",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3662,
  "fields": {
    "question": 733,
    "text": "`@check_user_status`",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3663,
  "fields": {
    "question": 733,
    "text": "`@permission_required`",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3664,
  "fields": {
    "question": 733,
    "text": "`@user_passes_test`",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3665,
  "fields": {
    "question": 733,
    "text": "`@login_required`",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3666,
  "fields": {
    "question": 734,
    "text": "Tokens stored in localStorage are vulnerable to Cross-Site Scripting (XSS) attacks, potentially allowing attackers to steal them.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3667,
  "fields": {
    "question": 734,
    "text": "Tokens can be easily guessed due to their predictable format.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3668,
  "fields": {
    "question": 734,
    "text": "Tokens significantly increase the server's memory usage compared to sessions.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3669,
  "fields": {
    "question": 734,
    "text": "Tokens cannot be used over HTTPS connections.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3670,
  "fields": {
    "question": 734,
    "text": "Tokens expire too quickly, leading to poor user experience.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3671,
  "fields": {
    "question": 735,
    "text": "OpenID Connect (OIDC)",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3672,
  "fields": {
    "question": 735,
    "text": "OAuth 2.0",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3673,
  "fields": {
    "question": 735,
    "text": "SAML 2.0 (Security Assertion Markup Language)",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3674,
  "fields": {
    "question": 735,
    "text": "LDAP (Lightweight Directory Access Protocol)",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3675,
  "fields": {
    "question": 735,
    "text": "Kerberos",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3676,
  "fields": {
    "question": 736,
    "text": "To encrypt the form data before submission.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3677,
  "fields": {
    "question": 736,
    "text": "To add client-side validation scripts to the form.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3678,
  "fields": {
    "question": 736,
    "text": "To include a hidden input field with a unique token that protects against Cross-Site Request Forgery attacks.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3679,
  "fields": {
    "question": 736,
    "text": "To generate a unique session ID for the user.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3680,
  "fields": {
    "question": 736,
    "text": "To validate the user's credentials before submitting the form.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3681,
  "fields": {
    "question": 737,
    "text": "`AUTH_FIELD`",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3682,
  "fields": {
    "question": 737,
    "text": "`IDENTIFIER_FIELD`",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3683,
  "fields": {
    "question": 737,
    "text": "`LOGIN_FIELD`",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3684,
  "fields": {
    "question": 737,
    "text": "`EMAIL_FIELD` (even if using email as the identifier)",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3685,
  "fields": {
    "question": 737,
    "text": "`USERNAME_FIELD`",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3686,
  "fields": {
    "question": 738,
    "text": "Creating a separate `Profile` model with a `OneToOneField` linking to the User model.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3687,
  "fields": {
    "question": 738,
    "text": "Adding fields directly to the `User` model using monkey patching.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3688,
  "fields": {
    "question": 738,
    "text": "Using Django's `ContentType` framework to attach data.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3689,
  "fields": {
    "question": 738,
    "text": "Inheriting from `User` and overriding the `save` method.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3690,
  "fields": {
    "question": 738,
    "text": "Storing profile data in the session dictionary.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3691,
  "fields": {
    "question": 739,
    "text": "To limit the number of active sessions a user can have simultaneously.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3692,
  "fields": {
    "question": 739,
    "text": "To prevent users from changing their passwords too frequently.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3693,
  "fields": {
    "question": 739,
    "text": "To enforce password complexity rules during login.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3694,
  "fields": {
    "question": 739,
    "text": "To ensure fair usage of server resources among users.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3695,
  "fields": {
    "question": 739,
    "text": "To slow down or block automated brute force attacks trying many password combinations.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3696,
  "fields": {
    "question": 740,
    "text": "`PasswordChangeForm`",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3697,
  "fields": {
    "question": 740,
    "text": "`SetPasswordForm`",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3698,
  "fields": {
    "question": 740,
    "text": "`AuthenticationForm`",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3699,
  "fields": {
    "question": 740,
    "text": "`EmailForm`",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3700,
  "fields": {
    "question": 740,
    "text": "`PasswordResetForm`",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3701,
  "fields": {
    "question": 741,
    "text": "To check if the entered password matches the stored hash during login.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3702,
  "fields": {
    "question": 741,
    "text": "To enforce complexity rules and prevent users from choosing weak or common passwords.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3703,
  "fields": {
    "question": 741,
    "text": "To encrypt passwords before storing them in the database.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3704,
  "fields": {
    "question": 741,
    "text": "To validate the format of the password reset token.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3705,
  "fields": {
    "question": 741,
    "text": "To hash passwords using multiple algorithms for increased security.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3706,
  "fields": {
    "question": 742,
    "text": "App collects user's social media password -&gt; App sends password to provider -&gt; Provider confirms -&gt; App logs user in.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3707,
  "fields": {
    "question": 742,
    "text": "User provides API key from social provider -&gt; App validates key -&gt; App logs user in.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3708,
  "fields": {
    "question": 742,
    "text": "App embeds provider's login form directly -&gt; User logs in within the app -&gt; App receives confirmation.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3709,
  "fields": {
    "question": 742,
    "text": "Redirect user to provider -&gt; User authenticates -&gt; Provider redirects back with code -&gt; App exchanges code for token -&gt; App fetches user info.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3710,
  "fields": {
    "question": 742,
    "text": "App uses user's email to query social provider -&gt; Provider returns authentication status -&gt; App logs user in.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3711,
  "fields": {
    "question": 743,
    "text": "Storing session data exclusively in a cache backend like Redis or Memcached.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3712,
  "fields": {
    "question": 743,
    "text": "Storing session data in the database, linked via a session key stored in a client-side cookie.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3713,
  "fields": {
    "question": 743,
    "text": "Storing all session data directly within an encrypted client-side cookie.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3714,
  "fields": {
    "question": 743,
    "text": "Authenticating users based on their session ID.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3715,
  "fields": {
    "question": 743,
    "text": "Storing session data in temporary files on the server's filesystem.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3716,
  "fields": {
    "question": 744,
    "text": "To specify one or more methods Django should try when verifying user credentials using the `authenticate()` function.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3717,
  "fields": {
    "question": 744,
    "text": "To list the middleware components responsible for handling authentication.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3718,
  "fields": {
    "question": 744,
    "text": "To define the database backends used for storing user information.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3719,
  "fields": {
    "question": 744,
    "text": "To specify the templates used for login and logout pages.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3720,
  "fields": {
    "question": 744,
    "text": "To configure the password hashing algorithms Django should support.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3721,
  "fields": {
    "question": 745,
    "text": "`is_authenticated()` and `attach_user()`",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3722,
  "fields": {
    "question": 745,
    "text": "`authenticate()` and `login()`",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3723,
  "fields": {
    "question": 745,
    "text": "`verify()` and `start_session()`",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3724,
  "fields": {
    "question": 745,
    "text": "`has_perm()` and `set_session()`",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3725,
  "fields": {
    "question": 745,
    "text": "`check_password()` and `create_session()`",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3726,
  "fields": {
    "question": 746,
    "text": "Include the `{% csrf_token %}` tag directly within the JavaScript code.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3727,
  "fields": {
    "question": 746,
    "text": "CSRF protection is automatically handled for AJAX requests and no extra steps are needed.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3728,
  "fields": {
    "question": 746,
    "text": "Append the CSRF token as a query parameter to the API endpoint URL.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3729,
  "fields": {
    "question": 746,
    "text": "Disable CSRF protection for API endpoints using a decorator.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3730,
  "fields": {
    "question": 746,
    "text": "Retrieve the token (often from a cookie) and include it in the request headers (typically `X-CSRFToken`).",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3731,
  "fields": {
    "question": 747,
    "text": "Encrypting data differently for each tenant using tenant-specific keys.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3732,
  "fields": {
    "question": 747,
    "text": "Running separate instances of the Django application for each tenant.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3733,
  "fields": {
    "question": 747,
    "text": "Using separate Django settings files for each tenant.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3734,
  "fields": {
    "question": 747,
    "text": "Adding a `ForeignKey` to a `Tenant` model on all tenant-specific models and filtering queries based on the current tenant.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3735,
  "fields": {
    "question": 747,
    "text": "Implementing row-level security directly within the database engine itself.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3736,
  "fields": {
    "question": 748,
    "text": "`BaseUserManager`",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3737,
  "fields": {
    "question": 748,
    "text": "`AbstractBaseUser`",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3738,
  "fields": {
    "question": 748,
    "text": "`models.Model` directly",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3739,
  "fields": {
    "question": 748,
    "text": "`AbstractUser`",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3740,
  "fields": {
    "question": 748,
    "text": "`PermissionsMixin`",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3741,
  "fields": {
    "question": 749,
    "text": "To force a user to change their password during a test run.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3742,
  "fields": {
    "question": 749,
    "text": "To test the account lockout mechanism by simulating forced logins.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3743,
  "fields": {
    "question": 749,
    "text": "To simulate an authenticated user session for a test client without needing to go through the actual login view and password verification.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3744,
  "fields": {
    "question": 749,
    "text": "To bypass permission checks for a specific test.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3745,
  "fields": {
    "question": 749,
    "text": "To create a new user specifically for the current test method.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3746,
  "fields": {
    "question": 750,
    "text": "`django.core.validators.validate_email`",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3747,
  "fields": {
    "question": 750,
    "text": "`django.core.mail.EmailBackend`",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3748,
  "fields": {
    "question": 750,
    "text": "`django.core.mail.outbox`",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3749,
  "fields": {
    "question": 750,
    "text": "`django.core.signals.email_sent`",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3750,
  "fields": {
    "question": 750,
    "text": "`django.core.cache.email_cache`",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3751,
  "fields": {
    "question": 751,
    "text": "`django.contrib.auth.views.SessionView`",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3752,
  "fields": {
    "question": 751,
    "text": "`django.views.generic.FormView` with `AuthenticationForm`",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3753,
  "fields": {
    "question": 751,
    "text": "`django.views.generic.CreateView` for user sessions",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3754,
  "fields": {
    "question": 751,
    "text": "`django.contrib.auth.views.AuthenticateView`",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3755,
  "fields": {
    "question": 751,
    "text": "`django.contrib.auth.views.LoginView`",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3756,
  "fields": {
    "question": 752,
    "text": "It enables hierarchical permission inheritance between groups.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3757,
  "fields": {
    "question": 752,
    "text": "It provides a way to implement object-level permissions directly.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3758,
  "fields": {
    "question": 752,
    "text": "It automatically grants users permissions based on their group name.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3759,
  "fields": {
    "question": 752,
    "text": "It allows you to assign a collection of permissions to multiple users at once, simplifying management for roles.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3760,
  "fields": {
    "question": 752,
    "text": "It replaces the need for the standard `Permission` model.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3761,
  "fields": {
    "question": 753,
    "text": "To log a user out by destroying their session.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3762,
  "fields": {
    "question": 753,
    "text": "To check if a user has specific permissions.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3763,
  "fields": {
    "question": 753,
    "text": "To hash a user's password before storing it.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3764,
  "fields": {
    "question": 753,
    "text": "To create a new user session after successful credential verification.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3765,
  "fields": {
    "question": 753,
    "text": "To verify a set of credentials (like username and password) against the configured authentication backends and return a user object if valid.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3766,
  "fields": {
    "question": 754,
    "text": "By accessing `{{ user.permissions.app_label.codename }}`.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3767,
  "fields": {
    "question": 754,
    "text": "Using `{% check_perm user 'app_label.codename' %}`.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3768,
  "fields": {
    "question": 754,
    "text": "Using `{% if user.has_permission:'app_label.codename' %}`.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3769,
  "fields": {
    "question": 754,
    "text": "Using the `perms` template variable, e.g., `{% if perms.app_label.codename %}`.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3770,
  "fields": {
    "question": 754,
    "text": "You cannot check permissions directly in templates; it must be passed from the view.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3771,
  "fields": {
    "question": 755,
    "text": "create, read, update, delete",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3772,
  "fields": {
    "question": 755,
    "text": "add, change, delete, view",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3773,
  "fields": {
    "question": 755,
    "text": "manage, access, modify, erase",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3774,
  "fields": {
    "question": 755,
    "text": "insert, select, update, remove",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3775,
  "fields": {
    "question": 755,
    "text": "admin, edit, destroy, list",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3776,
  "fields": {
    "question": 756,
    "text": "It is not necessary; storing plaintext historical passwords is standard practice.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3777,
  "fields": {
    "question": 756,
    "text": "Because Django's `PasswordHistoryValidator` can only compare plaintext passwords.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3778,
  "fields": {
    "question": 756,
    "text": "To avoid storing sensitive plaintext passwords, maintaining security even for historical data. The `check_password` function works with hashes.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3779,
  "fields": {
    "question": 756,
    "text": "To save database space, as hashed passwords are much shorter.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3780,
  "fields": {
    "question": 756,
    "text": "To allow administrators to view previously used passwords if needed.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3781,
  "fields": {
    "question": 757,
    "text": "`AuthProtectedView`",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3782,
  "fields": {
    "question": 757,
    "text": "`AuthenticatedViewMixin`",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3783,
  "fields": {
    "question": 757,
    "text": "`UserPassesTestMixin`",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3784,
  "fields": {
    "question": 757,
    "text": "`PermissionRequiredMixin`",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3785,
  "fields": {
    "question": 757,
    "text": "`LoginRequiredMixin`",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3786,
  "fields": {
    "question": 758,
    "text": "There is no significant difference; the terms are used interchangeably in Django.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3787,
  "fields": {
    "question": 758,
    "text": "Authentication verifies who a user is, while authorization determines what an authenticated user is allowed to do.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3788,
  "fields": {
    "question": 758,
    "text": "Authentication determines what a user can do, while authorization verifies their identity.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3789,
  "fields": {
    "question": 758,
    "text": "Authentication uses passwords, while authorization uses permissions.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3790,
  "fields": {
    "question": 758,
    "text": "Authentication handles user registration, while authorization handles user login.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3791,
  "fields": {
    "question": 759,
    "text": "`@permission_required`",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3792,
  "fields": {
    "question": 759,
    "text": "`@user_passes_test`",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3793,
  "fields": {
    "question": 759,
    "text": "`@login_required`",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3794,
  "fields": {
    "question": 759,
    "text": "`@authenticate_user`",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3795,
  "fields": {
    "question": 759,
    "text": "`@protected_view`",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3796,
  "fields": {
    "question": 760,
    "text": "It specifies the URL users are redirected to if they try to access a protected page without being logged in.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3797,
  "fields": {
    "question": 760,
    "text": "It specifies the default URL to redirect users to after a successful login if no `next` parameter is provided.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3798,
  "fields": {
    "question": 760,
    "text": "It specifies the URL to redirect users to after they log out.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3799,
  "fields": {
    "question": 760,
    "text": "It specifies the URL for the password reset page.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3800,
  "fields": {
    "question": 760,
    "text": "It specifies the URL of the login page itself.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3801,
  "fields": {
    "question": 761,
    "text": "A report confirming that all Python code passes linting checks.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3802,
  "fields": {
    "question": 761,
    "text": "The definition of all Django models and successful initial database migration.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3803,
  "fields": {
    "question": 761,
    "text": "A fully functional client-side application built only with Alpine.js and hardcoded data.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3804,
  "fields": {
    "question": 761,
    "text": "A complete set of static HTML pages styled with Tailwind CSS.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3805,
  "fields": {
    "question": 761,
    "text": "A web application where specific user interactions trigger requests that update parts of the page dynamically using HTML partials returned from Django views, verified by Playwright E2E tests.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3806,
  "fields": {
    "question": 762,
    "text": "To define the database models and run initial migrations.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3807,
  "fields": {
    "question": 762,
    "text": "To create the static, responsive HTML structure and styling using Tailwind CSS, focusing on visual layout without any client-side or backend interactivity.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3808,
  "fields": {
    "question": 762,
    "text": "To connect the frontend to the Django backend using HTMX.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3809,
  "fields": {
    "question": 762,
    "text": "To write all the unit tests for the Django views.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3810,
  "fields": {
    "question": 762,
    "text": "To implement all client-side interactivity using Alpine.js.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3811,
  "fields": {
    "question": 763,
    "text": "To enhance the visual appearance of web pages for all users.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3812,
  "fields": {
    "question": 763,
    "text": "To improve the search engine optimization (SEO) ranking of a website.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3813,
  "fields": {
    "question": 763,
    "text": "To connect frontend JavaScript code directly to backend database APIs.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3814,
  "fields": {
    "question": 763,
    "text": "To provide extra semantic information to assistive technologies (like screen readers) about the roles, states, and properties of UI elements, especially custom interactive ones.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3815,
  "fields": {
    "question": 763,
    "text": "To automatically style web pages based on user preferences.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3816,
  "fields": {
    "question": 764,
    "text": "It allows HTML elements to connect directly to database fields without backend code.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3817,
  "fields": {
    "question": 764,
    "text": "It improves accessibility (for screen readers), SEO (for search engines), and code readability/maintainability by using elements for their intended purpose.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3818,
  "fields": {
    "question": 764,
    "text": "It automatically applies complex CSS styling provided by Tailwind CSS.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3819,
  "fields": {
    "question": 764,
    "text": "It significantly reduces the amount of JavaScript needed for interactivity.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3820,
  "fields": {
    "question": 764,
    "text": "It guarantees that the webpage will look identical in all web browsers.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3821,
  "fields": {
    "question": 765,
    "text": "To analyze source code to flag programming errors, bugs, stylistic errors, and enforce coding standards, improving code quality and consistency.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3822,
  "fields": {
    "question": 765,
    "text": "To automatically refactor code to improve performance.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3823,
  "fields": {
    "question": 765,
    "text": "To manage project dependencies and library versions.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3824,
  "fields": {
    "question": 765,
    "text": "To compile source code into executable machine code.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3825,
  "fields": {
    "question": 765,
    "text": "To run automated tests that simulate user interactions in a browser.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3826,
  "fields": {
    "question": 766,
    "text": "It manages server deployment and scaling configurations.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3827,
  "fields": {
    "question": 766,
    "text": "It allows interaction with the database using Python objects (models) instead of raw SQL, abstracting database differences and helping prevent SQL injection.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3828,
  "fields": {
    "question": 766,
    "text": "It automatically generates frontend code based on backend models.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3829,
  "fields": {
    "question": 766,
    "text": "It replaces the need for Django's templating engine.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3830,
  "fields": {
    "question": 766,
    "text": "It provides tools for visual regression testing of the user interface.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3831,
  "fields": {
    "question": 767,
    "text": "Ensuring the web server responds quickly to browser requests.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3832,
  "fields": {
    "question": 767,
    "text": "Designing websites that respond to voice commands.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3833,
  "fields": {
    "question": 767,
    "text": "Creating websites that load correctly even on slow internet connections.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3834,
  "fields": {
    "question": 767,
    "text": "Making the website interactive using JavaScript frameworks.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3835,
  "fields": {
    "question": 767,
    "text": "Designing web pages to adapt their layout and content gracefully to different screen sizes and devices (desktops, tablets, mobiles).",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3836,
  "fields": {
    "question": 768,
    "text": "Phase 4: Backend Integration (Django)",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3837,
  "fields": {
    "question": 768,
    "text": "Phase 5: Dynamic Frontend-Backend Interaction (HTMX)",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3838,
  "fields": {
    "question": 768,
    "text": "Phase 3: Frontend Interactivity (Client-Side)",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3839,
  "fields": {
    "question": 768,
    "text": "Phase 2: Static UI Implementation",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3840,
  "fields": {
    "question": 768,
    "text": "Phase 1: Foundational Setup",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3841,
  "fields": {
    "question": 769,
    "text": "To speed up the LLM's code generation process.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3842,
  "fields": {
    "question": 769,
    "text": "To provide a way for human developers to manually approve every line of code.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3843,
  "fields": {
    "question": 769,
    "text": "To replace the need for version control systems like Git.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3844,
  "fields": {
    "question": 769,
    "text": "To ensure the output of each development stage meets objectives and quality standards before proceeding, minimizing backtracking and building trust in the process.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3845,
  "fields": {
    "question": 769,
    "text": "To automatically generate documentation for the code written by the LLM.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3846,
  "fields": {
    "question": 770,
    "text": "To convert the static HTML mockups into reusable Django templates (base, partials) and render them using a basic Django view with hardcoded context data.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3847,
  "fields": {
    "question": 770,
    "text": "To write end-to-end tests using Playwright to simulate user interactions.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3848,
  "fields": {
    "question": 770,
    "text": "To implement dynamic partial updates using HTMX attributes.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3849,
  "fields": {
    "question": 770,
    "text": "To define all the database models required for the application.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3850,
  "fields": {
    "question": 770,
    "text": "To configure the production deployment environment.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3851,
  "fields": {
    "question": 771,
    "text": "A programming interface representing the HTML page structure as a tree of objects, which JavaScript interacts with to dynamically change page content or style.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3852,
  "fields": {
    "question": 771,
    "text": "A database technology used for storing website content.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3853,
  "fields": {
    "question": 771,
    "text": "A protocol for secure communication between the browser and the server.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3854,
  "fields": {
    "question": 771,
    "text": "A CSS framework for creating responsive layouts.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3855,
  "fields": {
    "question": 771,
    "text": "A server-side templating language used by Django.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3856,
  "fields": {
    "question": 772,
    "text": "To generate project documentation automatically using LLMs.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3857,
  "fields": {
    "question": 772,
    "text": "To create a better version of GitHub Copilot focused solely on code completion.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3858,
  "fields": {
    "question": 772,
    "text": "To use LLMs as proactive project managers that orchestrate development stages and verify outputs using automated checks.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3859,
  "fields": {
    "question": 772,
    "text": "To build websites using only LLMs without needing frameworks like Django or libraries like HTMX.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3860,
  "fields": {
    "question": 772,
    "text": "To replace human developers entirely with LLMs for writing all code.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3861,
  "fields": {
    "question": 773,
    "text": "To automatically generate a color palette based on the website's content.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3862,
  "fields": {
    "question": 773,
    "text": "To make the website look more visually appealing by using a wider range of colors.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3863,
  "fields": {
    "question": 773,
    "text": "To ensure that the website uses colors consistent with the company's branding guidelines.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3864,
  "fields": {
    "question": 773,
    "text": "To ensure text and important UI elements are easily readable against their background, especially for users with visual impairments, meeting WCAG standards.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3865,
  "fields": {
    "question": 773,
    "text": "To reduce the file size of CSS by limiting the number of colors used.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3866,
  "fields": {
    "question": 774,
    "text": "Search engines rank pages higher if they use interactive <code>&lt;div&gt;</code> elements instead of buttons.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3867,
  "fields": {
    "question": 774,
    "text": "<code>aria-expanded</code> only works when applied to <code>&lt;div&gt;</code> elements, not buttons.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3868,
  "fields": {
    "question": 774,
    "text": "The <code>&lt;div&gt;</code> element loads faster because it has less default styling.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3869,
  "fields": {
    "question": 774,
    "text": "The <code>&lt;button&gt;</code> is natively keyboard focusable, announced as a button by screen readers, and ARIA attributes communicate its state (expanded/collapsed) and what it controls.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3870,
  "fields": {
    "question": 774,
    "text": "Using a <code>&lt;div&gt;</code> provides more flexibility for complex animations with Alpine.js.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3871,
  "fields": {
    "question": 775,
    "text": "HTMX",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3872,
  "fields": {
    "question": 775,
    "text": "Pytest",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3873,
  "fields": {
    "question": 775,
    "text": "Playwright",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3874,
  "fields": {
    "question": 775,
    "text": "Django Test Client",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3875,
  "fields": {
    "question": 775,
    "text": "Ruff",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3876,
  "fields": {
    "question": 776,
    "text": "Writing code very slowly and carefully to avoid errors.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3877,
  "fields": {
    "question": 776,
    "text": "Using only one programming language throughout the project.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3878,
  "fields": {
    "question": 776,
    "text": "Incrementing the version number after every code commit.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3879,
  "fields": {
    "question": 776,
    "text": "Adding new features only after the entire project is initially completed.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3880,
  "fields": {
    "question": 776,
    "text": "Building software complexity in layers, with each stage adding manageable pieces of functionality.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3881,
  "fields": {
    "question": 777,
    "text": "To generate static HTML files from Django templates.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3882,
  "fields": {
    "question": 777,
    "text": "To add lightweight client-side interactivity (like dropdowns, modals, toggles) directly within the HTML markup, complementing server-rendered HTML and HTMX.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3883,
  "fields": {
    "question": 777,
    "text": "To define the database schema and manage migrations.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3884,
  "fields": {
    "question": 777,
    "text": "To handle all backend database interactions and business logic.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3885,
  "fields": {
    "question": 777,
    "text": "To perform automated end-to-end testing of the application.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3886,
  "fields": {
    "question": 778,
    "text": "To enable dynamic partial page updates by allowing the server (Django) to send HTML snippets in response to user actions, reducing the need for complex client-side JavaScript.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3887,
  "fields": {
    "question": 778,
    "text": "To replace the need for a database in web applications.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3888,
  "fields": {
    "question": 778,
    "text": "To manage server infrastructure and deployment processes.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3889,
  "fields": {
    "question": 778,
    "text": "To automatically style HTML elements using AI-generated CSS.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3890,
  "fields": {
    "question": 778,
    "text": "To provide a complete alternative to Django for backend development.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3891,
  "fields": {
    "question": 779,
    "text": "Applies pending database migrations to the database schema.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3892,
  "fields": {
    "question": 779,
    "text": "Installs or updates project dependencies listed in requirements.txt.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3893,
  "fields": {
    "question": 779,
    "text": "Runs the complete test suite defined in the project's test files.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3894,
  "fields": {
    "question": 779,
    "text": "Checks the entire Django project for common problems like model errors or configuration issues, without running tests or needing database connections.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3895,
  "fields": {
    "question": 779,
    "text": "Starts the Django development server.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3896,
  "fields": {
    "question": 780,
    "text": "Unit Testing",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3897,
  "fields": {
    "question": 780,
    "text": "Accessibility Testing",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3898,
  "fields": {
    "question": 780,
    "text": "Integration Testing",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3899,
  "fields": {
    "question": 780,
    "text": "End-to-End (E2E) Testing",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3900,
  "fields": {
    "question": 780,
    "text": "Visual Regression Testing",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3901,
  "fields": {
    "question": 781,
    "text": "To tell App Engine to use a specific, more powerful instance type.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3902,
  "fields": {
    "question": 781,
    "text": "To allow <code>settings.py</code> to conditionally apply production-specific configurations (like <code>DEBUG=False</code>, GCS storage, database path).",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3903,
  "fields": {
    "question": 781,
    "text": "To enable detailed debugging logs visible only in the GCP console.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3904,
  "fields": {
    "question": 781,
    "text": "To automatically install production dependencies listed in a separate file.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3905,
  "fields": {
    "question": 781,
    "text": "To enforce HTTPS redirection at the network level before reaching Django.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3906,
  "fields": {
    "question": 782,
    "text": "Poor concurrency handling (prone to 'Database is locked' errors) and lack of automatic synchronization of changes made by live instances back to GCS.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3907,
  "fields": {
    "question": 782,
    "text": "App Engine instances do not have write access to the <code>/tmp</code> directory.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3908,
  "fields": {
    "question": 782,
    "text": "Fetching from GCS on startup significantly increases instance cold start times beyond acceptable limits.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3909,
  "fields": {
    "question": 782,
    "text": "Django's ORM does not support SQLite when running on Linux environments like App Engine.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3910,
  "fields": {
    "question": 782,
    "text": "SQLite databases stored in GCS cannot exceed 10MB in size.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3911,
  "fields": {
    "question": 783,
    "text": "<code>python manage.py collectstatic</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3912,
  "fields": {
    "question": 783,
    "text": "<code>gsutil cp static/* gs://your-bucket/</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3913,
  "fields": {
    "question": 783,
    "text": "<code>gcloud app deploy --collect-static</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3914,
  "fields": {
    "question": 783,
    "text": "<code>python manage.py runserver --collectstatic</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3915,
  "fields": {
    "question": 783,
    "text": "<code>python manage.py compresstatic</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3916,
  "fields": {
    "question": 784,
    "text": "The Google Cloud user account that ran the <code>gcloud app deploy</code> command.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3917,
  "fields": {
    "question": 784,
    "text": "A temporary, anonymous identity created for each instance.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3918,
  "fields": {
    "question": 784,
    "text": "The App Engine default service account (usually <code>your-project-id@appspot.gserviceaccount.com</code>).",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3919,
  "fields": {
    "question": 784,
    "text": "It accesses services without any specific identity if they are within the same project.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3920,
  "fields": {
    "question": 784,
    "text": "The identity defined by the <code>SERVICE_ACCOUNT</code> environment variable in <code>app.yaml</code>.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3921,
  "fields": {
    "question": 785,
    "text": "<code>.gitignore</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3922,
  "fields": {
    "question": 785,
    "text": "<code>requirements.txt</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3923,
  "fields": {
    "question": 785,
    "text": "<code>app.yaml</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3924,
  "fields": {
    "question": 785,
    "text": "<code>ignore.cfg</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3925,
  "fields": {
    "question": 785,
    "text": "<code>.gcloudignore</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3926,
  "fields": {
    "question": 786,
    "text": "To configure network settings and firewall rules for the App Engine instance.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3927,
  "fields": {
    "question": 786,
    "text": "To download the SQLite database file from a private GCS bucket into the instance's writable <code>/tmp</code> directory before Gunicorn starts Django.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3928,
  "fields": {
    "question": 786,
    "text": "To install Python dependencies listed in <code>requirements.txt</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3929,
  "fields": {
    "question": 786,
    "text": "To run Django database migrations automatically during deployment.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3930,
  "fields": {
    "question": 786,
    "text": "To upload application logs from the instance back to Cloud Logging.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3931,
  "fields": {
    "question": 787,
    "text": "<code>gunicorn</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3932,
  "fields": {
    "question": 787,
    "text": "<code>django-storages[google]</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3933,
  "fields": {
    "question": 787,
    "text": "<code>google-cloud-storage</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3934,
  "fields": {
    "question": 787,
    "text": "<code>google-auth</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3935,
  "fields": {
    "question": 787,
    "text": "<code>google-cloud-secret-manager</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3936,
  "fields": {
    "question": 788,
    "text": "It is insecure, inefficient (single-threaded), and cannot scale to handle significant traffic.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3937,
  "fields": {
    "question": 788,
    "text": "It automatically disables database connections in production mode.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3938,
  "fields": {
    "question": 788,
    "text": "It conflicts with Google Cloud's internal load balancing system.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3939,
  "fields": {
    "question": 788,
    "text": "It cannot serve static files under any circumstances.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3940,
  "fields": {
    "question": 788,
    "text": "It requires Python 2, which is not supported by App Engine.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3941,
  "fields": {
    "question": 789,
    "text": "SSH into the running App Engine instance and run <code>python manage.py migrate</code> directly on the <code>/tmp/db/db.sqlite3</code> file.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3942,
  "fields": {
    "question": 789,
    "text": "Use the GCP Console's Datastore interface to apply schema changes to the SQLite file stored in GCS.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3943,
  "fields": {
    "question": 789,
    "text": "Database migrations are automatically detected and applied by App Engine during the deployment process.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3944,
  "fields": {
    "question": 789,
    "text": "Make changes locally (run <code>migrate</code>), upload the updated local <code>db.sqlite3</code> file to the GCS database bucket, then redeploy the application using <code>gcloud app deploy</code>.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3945,
  "fields": {
    "question": 789,
    "text": "Configure a Cloud Build trigger to run migrations against the GCS file whenever <code>models.py</code> changes.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3946,
  "fields": {
    "question": 790,
    "text": "App Engine dynamically assigns a port via the <code>PORT</code> environment variable, and Gunicorn must listen on that specific port for App Engine to route traffic correctly.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3947,
  "fields": {
    "question": 790,
    "text": "This syntax enables Gunicorn's multi-threading capabilities, essential for performance.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3948,
  "fields": {
    "question": 790,
    "text": "It binds Gunicorn to the standard HTTPS port 443, which is required by App Engine.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3949,
  "fields": {
    "question": 790,
    "text": "It instructs Gunicorn to only accept connections from App Engine's internal load balancer.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3950,
  "fields": {
    "question": 790,
    "text": "<code>:$PORT</code> tells Gunicorn to automatically select the most efficient port based on current network conditions.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3951,
  "fields": {
    "question": 791,
    "text": "The command that App Engine uses to start the application's web server (e.g., running a startup script then launching Gunicorn).",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3952,
  "fields": {
    "question": 791,
    "text": "A list of external IP addresses allowed to access the application.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3953,
  "fields": {
    "question": 791,
    "text": "The URL path that serves as the main landing page for the application.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3954,
  "fields": {
    "question": 791,
    "text": "The main Python file that contains the Django application's core logic (e.g., <code>views.py</code>).",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3955,
  "fields": {
    "question": 791,
    "text": "The specific version of Python runtime to be used.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3956,
  "fields": {
    "question": 792,
    "text": "<code>roles/viewer</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3957,
  "fields": {
    "question": 792,
    "text": "<code>roles/storage.admin</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3958,
  "fields": {
    "question": 792,
    "text": "<code>roles/secretmanager.secretAccessor</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3959,
  "fields": {
    "question": 792,
    "text": "<code>roles/storage.objectAdmin</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3960,
  "fields": {
    "question": 792,
    "text": "<code>roles/storage.objectViewer</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3961,
  "fields": {
    "question": 793,
    "text": "Using the Django development server (<code>runserver</code>) which handles static files automatically.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3962,
  "fields": {
    "question": 793,
    "text": "Using the <code>WhiteNoise</code> middleware to serve static files directly from the App Engine instance filesystem.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3963,
  "fields": {
    "question": 793,
    "text": "Configuring Gunicorn to serve static files from the <code>/static/</code> directory within the instance.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3964,
  "fields": {
    "question": 793,
    "text": "Using <code>django-storages</code> to collect files and serve them directly from a publicly readable Google Cloud Storage (GCS) bucket.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3965,
  "fields": {
    "question": 793,
    "text": "Embedding all static files directly into the HTML templates as base64 encoded data.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3966,
  "fields": {
    "question": 794,
    "text": "It can lead to a \"cold start\" delay for the first request received after a period of inactivity, as App Engine needs to start a new instance.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3967,
  "fields": {
    "question": 794,
    "text": "It limits the maximum number of instances the application can scale up to.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3968,
  "fields": {
    "question": 794,
    "text": "It disables the use of environment variables defined in <code>app.yaml</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3969,
  "fields": {
    "question": 794,
    "text": "It prevents the application from accessing Google Cloud Storage buckets.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3970,
  "fields": {
    "question": 794,
    "text": "It requires manual intervention to restart the application after it scales down.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3971,
  "fields": {
    "question": 795,
    "text": "<code>gcloud app update --all</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3972,
  "fields": {
    "question": 795,
    "text": "<code>gcloud builds submit --config app.yaml</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3973,
  "fields": {
    "question": 795,
    "text": "<code>gcloud run deploy --source .</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3974,
  "fields": {
    "question": 795,
    "text": "<code>gcloud app deploy</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3975,
  "fields": {
    "question": 795,
    "text": "<code>gcloud components update app-engine-python</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3976,
  "fields": {
    "question": 796,
    "text": "Generate a new key dynamically every time the App Engine instance starts.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3977,
  "fields": {
    "question": 796,
    "text": "Place it in a file named <code>secret.txt</code> inside the Cloud Storage bucket used for the database.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3978,
  "fields": {
    "question": 796,
    "text": "Hardcode it directly within the <code>settings.py</code> file committed to Git.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3979,
  "fields": {
    "question": 796,
    "text": "Store it as a plain text environment variable within the <code>app.yaml</code> file.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3980,
  "fields": {
    "question": 796,
    "text": "Store it securely in GCP Secret Manager and fetch it within <code>settings.py</code> using the Secret Manager client library.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3981,
  "fields": {
    "question": 797,
    "text": "The <code>django-storages</code> package is missing from <code>requirements.txt</code>.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3982,
  "fields": {
    "question": 797,
    "text": "The static files were not uploaded to the GCS bucket, the bucket name in <code>app.yaml</code> is wrong, or the bucket is not publicly readable (missing <code>allUsers</code> viewer permission).",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3983,
  "fields": {
    "question": 797,
    "text": "The Gunicorn worker timeout value in <code>app.yaml</code> is too short.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3984,
  "fields": {
    "question": 797,
    "text": "The <code>DEBUG</code> setting in <code>settings.py</code> is incorrectly set to <code>True</code> in production.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3985,
  "fields": {
    "question": 797,
    "text": "The database file failed to download from GCS during instance startup.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3986,
  "fields": {
    "question": 798,
    "text": "<code>whitenoise</code> (While useful, Gunicorn is the server itself)",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3987,
  "fields": {
    "question": 798,
    "text": "<code>requests</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3988,
  "fields": {
    "question": 798,
    "text": "<code>django-appengine-sdk</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3989,
  "fields": {
    "question": 798,
    "text": "<code>gunicorn</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3990,
  "fields": {
    "question": 798,
    "text": "<code>psycopg2-binary</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3991,
  "fields": {
    "question": 799,
    "text": "To restrict access based on the user's geographical location.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3992,
  "fields": {
    "question": 799,
    "text": "To specify which domain names the Django application is permitted to serve, preventing HTTP Host header attacks.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3993,
  "fields": {
    "question": 799,
    "text": "To define the static file directories for the application.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3994,
  "fields": {
    "question": 799,
    "text": "To configure the allowed database connection hosts.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3995,
  "fields": {
    "question": 799,
    "text": "To list the IP addresses of developers allowed to access the admin interface.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3996,
  "fields": {
    "question": 800,
    "text": "<code>min-instances=0</code> disables the ability to mount GCS volumes, requiring <code>min-instances=1</code>.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3997,
  "fields": {
    "question": 800,
    "text": "<code>min-instances=1</code> provides a significant discount on CPU and memory usage compared to <code>min-instances=0</code>.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3998,
  "fields": {
    "question": 800,
    "text": "<code>min-instances=0</code> allows scaling to zero (no cost when idle, but potential cold starts), while <code>min-instances=1</code> keeps at least one instance running (incurring costs even when idle, but faster response to initial requests).",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 3999,
  "fields": {
    "question": 800,
    "text": "Setting <code>min-instances=0</code> requires using a more expensive tier of Cloud Run.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4000,
  "fields": {
    "question": 800,
    "text": "<code>min-instances=1</code> includes free network egress, while <code>min-instances=0</code> charges for all egress.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4001,
  "fields": {
    "question": 801,
    "text": "To clean up unused media files from the media directory.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4002,
  "fields": {
    "question": 801,
    "text": "To automatically generate templates based on models.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4003,
  "fields": {
    "question": 801,
    "text": "To gather all static files (CSS, JS, images) from various Django apps and project locations into a single directory (<code>STATIC_ROOT</code>) for deployment.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4004,
  "fields": {
    "question": 801,
    "text": "To compile Python code into bytecode for faster execution.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4005,
  "fields": {
    "question": 801,
    "text": "To apply database migrations to the production database schema.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4006,
  "fields": {
    "question": 802,
    "text": "To register custom domain names for the Cloud Run service.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4007,
  "fields": {
    "question": 802,
    "text": "To store the application's static files (CSS, JavaScript, images).",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4008,
  "fields": {
    "question": 802,
    "text": "To store database backups generated by Cloud Run.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4009,
  "fields": {
    "question": 802,
    "text": "To manage Python package dependencies listed in <code>requirements.txt</code>.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4010,
  "fields": {
    "question": 802,
    "text": "To store and manage the private Docker images built for the Django application.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4011,
  "fields": {
    "question": 803,
    "text": "After running <code>manage.py migrate</code> locally, you must upload the updated local <code>db.sqlite3</code> file to the GCS database bucket before redeploying the Cloud Run service.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4012,
  "fields": {
    "question": 803,
    "text": "You need to manually edit the database schema in the GCS bucket using a GCS tool.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4013,
  "fields": {
    "question": 803,
    "text": "You need to run <code>manage.py migrate</code> inside the running Cloud Run container using the Cloud Shell.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4014,
  "fields": {
    "question": 803,
    "text": "Migrations are applied automatically by Cloud Run when it detects model changes.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4015,
  "fields": {
    "question": 803,
    "text": "You must rebuild the Docker image with a special flag to apply migrations during the build.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4016,
  "fields": {
    "question": 804,
    "text": "It disables Django's built-in authentication system (users and passwords).",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4017,
  "fields": {
    "question": 804,
    "text": "It allows HTTP traffic in addition to HTTPS traffic to reach the service.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4018,
  "fields": {
    "question": 804,
    "text": "It allows the service account to access GCP resources without any specific IAM roles.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4019,
  "fields": {
    "question": 804,
    "text": "It tells Cloud Run not to verify the authenticity of the Docker image being deployed.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4020,
  "fields": {
    "question": 804,
    "text": "It makes the Cloud Run service's HTTPS endpoint publicly accessible on the internet without requiring users to log in with a Google account or other authentication.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4021,
  "fields": {
    "question": 805,
    "text": "It builds two separate images: one for development and one for production.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4022,
  "fields": {
    "question": 805,
    "text": "It reduces the final image size by installing dependencies in a separate, temporary container.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4023,
  "fields": {
    "question": 805,
    "text": "It optimizes Docker's build cache; if only application code changes (<code>COPY . .</code>), the time-consuming dependency installation layer is reused, speeding up builds.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4024,
  "fields": {
    "question": 805,
    "text": "It allows running the application with two different Python versions simultaneously.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4025,
  "fields": {
    "question": 805,
    "text": "It ensures that the final image includes the build tools and intermediate files needed for debugging.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4026,
  "fields": {
    "question": 806,
    "text": "Making the bucket publicly writable using <code>roles/storage.objectCreator</code> for <code>allUsers</code>.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4027,
  "fields": {
    "question": 806,
    "text": "Granting the <code>roles/storage.objectAdmin</code> role to the Cloud Run service account.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4028,
  "fields": {
    "question": 806,
    "text": "Granting the <code>roles/storage.objectViewer</code> role to the special identifier <code>allUsers</code>.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4029,
  "fields": {
    "question": 806,
    "text": "Granting the <code>roles/storage.admin</code> role to <code>allUsers</code>.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4030,
  "fields": {
    "question": 806,
    "text": "Granting the <code>roles/viewer</code> role at the project level to <code>allUsers</code>.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4031,
  "fields": {
    "question": 807,
    "text": "The path where the database exists locally during development (e.g., <code>BASE_DIR / 'db.sqlite3'</code>).",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4032,
  "fields": {
    "question": 807,
    "text": "A relative path like <code>../database/db.sqlite3</code>.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4033,
  "fields": {
    "question": 807,
    "text": "The name of the GCS bucket itself (e.g., <code>your-unique-quiz-app-db-bucket</code>).",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4034,
  "fields": {
    "question": 807,
    "text": "The specific mount path defined in the Cloud Run service configuration (e.g., <code>/mnt/gcs/quiz-db/db.sqlite3</code>).",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4035,
  "fields": {
    "question": 807,
    "text": "The public URL of the GCS bucket (e.g., <code>https://storage.googleapis.com/...</code>).",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4036,
  "fields": {
    "question": 808,
    "text": "<code>--image=...</code> and <code>--platform=managed</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4037,
  "fields": {
    "question": 808,
    "text": "<code>--add-gcs-volume=...</code> and <code>--volume-mount-path=...</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4038,
  "fields": {
    "question": 808,
    "text": "<code>--set-env-vars DB_PATH=gs://...</code> and <code>--copy-files source=gs://...,destination=...</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4039,
  "fields": {
    "question": 808,
    "text": "<code>--service-account=...</code> and <code>--region=...</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4040,
  "fields": {
    "question": 808,
    "text": "<code>--volume name=...,type=cloud-storage,bucket=...</code> and <code>--mount path=...,volume=...</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4041,
  "fields": {
    "question": 809,
    "text": "GCS automatically compresses static files better than Gunicorn can.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4042,
  "fields": {
    "question": 809,
    "text": "GCS provides built-in protection against Cross-Site Scripting (XSS) attacks for static files.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4043,
  "fields": {
    "question": 809,
    "text": "GCS is optimized for serving static assets globally with low latency and reduces the load on the application container.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4044,
  "fields": {
    "question": 809,
    "text": "It allows static files to be updated without needing to redeploy the application container.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4045,
  "fields": {
    "question": 809,
    "text": "Serving files from the container is prohibited by Cloud Run security policies.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4046,
  "fields": {
    "question": 810,
    "text": "It runs the Django development server (<code>runserver</code>) using Gunicorn as a wrapper.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4047,
  "fields": {
    "question": 810,
    "text": "It executes the Gunicorn command during the Docker image build process, not at runtime.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4048,
  "fields": {
    "question": 810,
    "text": "It starts the Gunicorn server, binding it to the port specified by the <code>PORT</code> environment variable (provided by Cloud Run) and ensures Gunicorn handles system signals properly via <code>exec</code>.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4049,
  "fields": {
    "question": 810,
    "text": "It tells Docker to expose the specified <code>$PORT</code> to the public internet automatically.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4050,
  "fields": {
    "question": 810,
    "text": "It binds Gunicorn only to the localhost interface (<code>127.0.0.1</code>) on a fixed port.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4051,
  "fields": {
    "question": 811,
    "text": "It is single-threaded, inefficient under load, and lacks security hardening.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4052,
  "fields": {
    "question": 811,
    "text": "It requires <code>DEBUG=True</code> which automatically optimizes it for performance.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4053,
  "fields": {
    "question": 811,
    "text": "It automatically scales to handle thousands of concurrent users.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4054,
  "fields": {
    "question": 811,
    "text": "It can only work with SQLite databases, not PostgreSQL or MySQL.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4055,
  "fields": {
    "question": 811,
    "text": "It cannot serve static files under any circumstances.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4056,
  "fields": {
    "question": 812,
    "text": "Store the key in a file within the GCS bucket mounted as the database volume.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4057,
  "fields": {
    "question": 812,
    "text": "Generate the key dynamically every time the container starts using a startup script.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4058,
  "fields": {
    "question": 812,
    "text": "Store the key in GCP Secret Manager and inject it into the container as an environment variable using the <code>--update-secrets</code> flag during deployment.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4059,
  "fields": {
    "question": 812,
    "text": "Pass the key as a plain text environment variable using the <code>--set-env-vars</code> flag during deployment.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4060,
  "fields": {
    "question": 812,
    "text": "Hardcode the key directly in the <code>settings.py</code> file within the Docker image.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4061,
  "fields": {
    "question": 813,
    "text": "By using Django's session storage to hold all database contents in memory.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4062,
  "fields": {
    "question": 813,
    "text": "By converting the SQLite database to Cloud SQL PostgreSQL during deployment.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4063,
  "fields": {
    "question": 813,
    "text": "By embedding the <code>db.sqlite3</code> file directly into the Docker image during the build process.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4064,
  "fields": {
    "question": 813,
    "text": "By storing the <code>db.sqlite3</code> file in a Google Cloud Storage (GCS) bucket and mounting that bucket as a volume into the Cloud Run container.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4065,
  "fields": {
    "question": 813,
    "text": "By configuring Cloud Run to automatically back up the container filesystem every minute.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4066,
  "fields": {
    "question": 814,
    "text": "It is the user account used to log into the GCP console to manage Cloud Run services.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4067,
  "fields": {
    "question": 814,
    "text": "It defines the billing account associated with the Cloud Run service costs.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4068,
  "fields": {
    "question": 814,
    "text": "It acts as the identity of the application, allowing it to authenticate and be authorized to access other GCP resources (like GCS buckets or secrets) based on assigned IAM roles.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4069,
  "fields": {
    "question": 814,
    "text": "It is a network configuration entity that allows Cloud Run to connect to a VPC.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4070,
  "fields": {
    "question": 814,
    "text": "It is a special type of database account required for connecting to Cloud SQL.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4071,
  "fields": {
    "question": 815,
    "text": "It replaces Django's ORM for interacting with the database.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4072,
  "fields": {
    "question": 815,
    "text": "It manages the database connection pooling for Django.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4073,
  "fields": {
    "question": 815,
    "text": "It builds the Docker container image from the Dockerfile.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4074,
  "fields": {
    "question": 815,
    "text": "It serves static files directly from the Django application container.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4075,
  "fields": {
    "question": 815,
    "text": "It acts as a production-grade WSGI HTTP server to run the Django application, handling multiple requests concurrently.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4076,
  "fields": {
    "question": 816,
    "text": "The static files bucket is not publicly accessible.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4077,
  "fields": {
    "question": 816,
    "text": "The Gunicorn worker timeout value is too low.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4078,
  "fields": {
    "question": 816,
    "text": "The database connection is failing intermittently.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4079,
  "fields": {
    "question": 816,
    "text": "The <code>CSRF_TRUSTED_ORIGINS</code> environment variable in Cloud Run is missing or does not include the correct HTTPS URL of the service (e.g., <code>https://your-service-*.a.run.app</code>).",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4080,
  "fields": {
    "question": 816,
    "text": "The <code>SECRET_KEY</code> stored in Secret Manager is incorrect.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4081,
  "fields": {
    "question": 817,
    "text": "<code>roles/editor</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4082,
  "fields": {
    "question": 817,
    "text": "<code>roles/storage.objectAdmin</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4083,
  "fields": {
    "question": 817,
    "text": "<code>roles/run.invoker</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4084,
  "fields": {
    "question": 817,
    "text": "<code>roles/storage.objectViewer</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4085,
  "fields": {
    "question": 817,
    "text": "<code>roles/storage.admin</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4086,
  "fields": {
    "question": 818,
    "text": "The database file becomes too large to fit inside a standard container.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4087,
  "fields": {
    "question": 818,
    "text": "Cloud Run only supports PostgreSQL databases, not SQLite.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4088,
  "fields": {
    "question": 818,
    "text": "SQLite files cannot be read by applications running inside Docker containers.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4089,
  "fields": {
    "question": 818,
    "text": "Cloud Run container filesystems are ephemeral; changes are lost when the container restarts or scales down.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4090,
  "fields": {
    "question": 818,
    "text": "Direct filesystem access is blocked by GCP security policies by default.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4091,
  "fields": {
    "question": 819,
    "text": "It enforces the use of a specific Python version across environments.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4092,
  "fields": {
    "question": 819,
    "text": "It allows separating configuration (especially secrets) from code, making the application adaptable to different environments (dev, prod) without code changes.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4093,
  "fields": {
    "question": 819,
    "text": "It eliminates the need for a <code>requirements.txt</code> file.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4094,
  "fields": {
    "question": 819,
    "text": "It embeds all configuration directly into the final Docker image for faster startups.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4095,
  "fields": {
    "question": 819,
    "text": "It automatically optimizes database queries based on the environment.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4096,
  "fields": {
    "question": 820,
    "text": "It copies the local <code>app</code> directory into the container's working directory.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4097,
  "fields": {
    "question": 820,
    "text": "It sets the default directory inside the container for subsequent commands like <code>COPY</code>, <code>RUN</code>, and <code>CMD</code>.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4098,
  "fields": {
    "question": 820,
    "text": "It defines an environment variable named <code>WORKDIR</code> with the value <code>/app</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4099,
  "fields": {
    "question": 820,
    "text": "It specifies the network port the container application should listen on.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4100,
  "fields": {
    "question": 820,
    "text": "It creates a persistent volume named <code>app</code> for storing application data.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4101,
  "fields": {
    "question": 821,
    "text": "It adds an extra layer of encryption between the Cloud Run frontend and the application container.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4102,
  "fields": {
    "question": 821,
    "text": "It specifies the header containing the client's true IP address.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4103,
  "fields": {
    "question": 821,
    "text": "It helps Django correctly determine if the original client request was made via HTTPS, allowing features like <code>request.is_secure()</code> and secure cookies to work properly.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4104,
  "fields": {
    "question": 821,
    "text": "It configures the SSL certificate used by the Gunicorn server.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4105,
  "fields": {
    "question": 821,
    "text": "It forces all incoming HTTP requests to be redirected to HTTPS at the Django application level.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4106,
  "fields": {
    "question": 822,
    "text": "It encrypts the entire application code, preventing unauthorized access.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4107,
  "fields": {
    "question": 822,
    "text": "It automatically converts the Django application into a faster language like Go or Rust.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4108,
  "fields": {
    "question": 822,
    "text": "It provides a managed database service optimized for Django.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4109,
  "fields": {
    "question": 822,
    "text": "It packages the application and its dependencies into a consistent, portable container image, ensuring it runs the same way locally and in the cloud.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4110,
  "fields": {
    "question": 822,
    "text": "It eliminates the need for a WSGI server like Gunicorn.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4111,
  "fields": {
    "question": 823,
    "text": "<code>.compute()</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4112,
  "fields": {
    "question": 823,
    "text": "<code>.summarize()</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4113,
  "fields": {
    "question": 823,
    "text": "<code>.calculate()</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4114,
  "fields": {
    "question": 823,
    "text": "<code>.group_by()</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4115,
  "fields": {
    "question": 823,
    "text": "<code>.aggregate()</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4116,
  "fields": {
    "question": 824,
    "text": "<code>models.ManyToManyField</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4117,
  "fields": {
    "question": 824,
    "text": "<code>models.OneToOneField</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4118,
  "fields": {
    "question": 824,
    "text": "<code>models.RelatedListField</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4119,
  "fields": {
    "question": 824,
    "text": "<code>models.ForeignKey</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4120,
  "fields": {
    "question": 824,
    "text": "<code>models.MultipleChoiceField</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4121,
  "fields": {
    "question": 825,
    "text": "<code>models.RelationField</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4122,
  "fields": {
    "question": 825,
    "text": "<code>models.ForeignKey</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4123,
  "fields": {
    "question": 825,
    "text": "<code>models.ManyToManyField</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4124,
  "fields": {
    "question": 825,
    "text": "<code>models.RelatedField</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4125,
  "fields": {
    "question": 825,
    "text": "<code>models.OneToOneField</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4126,
  "fields": {
    "question": 826,
    "text": "<code>ordering</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4127,
  "fields": {
    "question": 826,
    "text": "<code>sort</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4128,
  "fields": {
    "question": 826,
    "text": "<code>query_order</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4129,
  "fields": {
    "question": 826,
    "text": "<code>order_by</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4130,
  "fields": {
    "question": 826,
    "text": "<code>default_order</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4131,
  "fields": {
    "question": 827,
    "text": "Define a field that is stored directly in the database.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4132,
  "fields": {
    "question": 827,
    "text": "Mark a method as requiring database transaction handling.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4133,
  "fields": {
    "question": 827,
    "text": "Specify a relationship to another model.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4134,
  "fields": {
    "question": 827,
    "text": "Define a custom manager method.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4135,
  "fields": {
    "question": 827,
    "text": "Create a method that can be accessed like a read-only attribute, often used for calculated values.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4136,
  "fields": {
    "question": 828,
    "text": "To define a human-readable name for the relationship in the admin.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4137,
  "fields": {
    "question": 828,
    "text": "To link the relationship to a specific database constraint.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4138,
  "fields": {
    "question": 828,
    "text": "To set the name of the database column for the foreign key.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4139,
  "fields": {
    "question": 828,
    "text": "To specify the name used for the reverse relation from the related model back to the current one.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4140,
  "fields": {
    "question": 828,
    "text": "To restrict the types of related objects allowed.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4141,
  "fields": {
    "question": 829,
    "text": "<code>python manage.py createmigrations</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4142,
  "fields": {
    "question": 829,
    "text": "<code>python manage.py schemamigration</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4143,
  "fields": {
    "question": 829,
    "text": "<code>python manage.py migrate</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4144,
  "fields": {
    "question": 829,
    "text": "<code>python manage.py applymigrations</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4145,
  "fields": {
    "question": 829,
    "text": "<code>python manage.py makemigrations</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4146,
  "fields": {
    "question": 830,
    "text": "Specifies the display size of the field in the admin interface.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4147,
  "fields": {
    "question": 830,
    "text": "Sets the default value if none is provided.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4148,
  "fields": {
    "question": 830,
    "text": "Specifies the maximum number of characters the field can store.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4149,
  "fields": {
    "question": 830,
    "text": "Determines if the field can be left empty in forms.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4150,
  "fields": {
    "question": 830,
    "text": "Sets the minimum number of characters allowed.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4151,
  "fields": {
    "question": 831,
    "text": "<code>models.FileField</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4152,
  "fields": {
    "question": 831,
    "text": "<code>models.TextField</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4153,
  "fields": {
    "question": 831,
    "text": "<code>models.CharField(max_length=5000)</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4154,
  "fields": {
    "question": 831,
    "text": "<code>models.LongStringField</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4155,
  "fields": {
    "question": 831,
    "text": "<code>models.SlugField</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4156,
  "fields": {
    "question": 832,
    "text": "<code>MyModel.objects.get_all()</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4157,
  "fields": {
    "question": 832,
    "text": "<code>MyModel.objects.all()</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4158,
  "fields": {
    "question": 832,
    "text": "<code>MyModel.objects.select()</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4159,
  "fields": {
    "question": 832,
    "text": "<code>MyModel.objects.filter()</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4160,
  "fields": {
    "question": 832,
    "text": "<code>MyModel.objects.fetch()</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4161,
  "fields": {
    "question": 833,
    "text": "<code>null=True</code> sets the database default to NULL, <code>blank=True</code> sets the form default to an empty string.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4162,
  "fields": {
    "question": 833,
    "text": "<code>null=True</code> allows empty strings, <code>blank=True</code> allows NULL in the database.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4163,
  "fields": {
    "question": 833,
    "text": "They are interchangeable and have the same effect.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4164,
  "fields": {
    "question": 833,
    "text": "<code>null=True</code> allows NULL values in the database schema, <code>blank=True</code> allows the field to be empty in forms (validation-related).",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4165,
  "fields": {
    "question": 833,
    "text": "<code>null=True</code> is for text fields, <code>blank=True</code> is for numeric fields.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4166,
  "fields": {
    "question": 834,
    "text": "Object-Resource Model: Defines application resource structures.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4167,
  "fields": {
    "question": 834,
    "text": "Object-Request Mapper: Maps HTTP requests to Python objects.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4168,
  "fields": {
    "question": 834,
    "text": "Object-Relational Mapper: Translates between Python objects (Models) and relational database tables/queries.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4169,
  "fields": {
    "question": 834,
    "text": "Object-Relational Manager: Manages object states in memory.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4170,
  "fields": {
    "question": 834,
    "text": "Ordered-Record Manager: Manages the order of database records.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4171,
  "fields": {
    "question": 835,
    "text": "To convert the model instance to a JSON string.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4172,
  "fields": {
    "question": 835,
    "text": "To provide a human-readable string representation of a model instance (e.g., in the admin site or shell).",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4173,
  "fields": {
    "question": 835,
    "text": "To specify the default ordering for the model.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4174,
  "fields": {
    "question": 835,
    "text": "To define the database table name for the model.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4175,
  "fields": {
    "question": 835,
    "text": "To perform validation on model fields.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4176,
  "fields": {
    "question": 836,
    "text": "It provides database portability (easier to switch between databases like PostgreSQL, MySQL, SQLite).",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4177,
  "fields": {
    "question": 836,
    "text": "It always results in faster database queries.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4178,
  "fields": {
    "question": 836,
    "text": "It requires less Python code than raw SQL.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4179,
  "fields": {
    "question": 836,
    "text": "It eliminates the need to understand database concepts like tables and columns.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4180,
  "fields": {
    "question": 836,
    "text": "It allows direct manipulation of database connection pools.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4181,
  "fields": {
    "question": 837,
    "text": "<code>python manage.py shell</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4182,
  "fields": {
    "question": 837,
    "text": "<code>python manage.py test</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4183,
  "fields": {
    "question": 837,
    "text": "<code>python manage.py dbshell</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4184,
  "fields": {
    "question": 837,
    "text": "<code>python manage.py debug</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4185,
  "fields": {
    "question": 837,
    "text": "<code>python manage.py runserver</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4186,
  "fields": {
    "question": 838,
    "text": "<code>filter()</code> is faster than <code>get()</code> for single object retrieval.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4187,
  "fields": {
    "question": 838,
    "text": "<code>get()</code> returns a QuerySet, <code>filter()</code> returns a single object.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4188,
  "fields": {
    "question": 838,
    "text": "There is no functional difference, only a semantic one.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4189,
  "fields": {
    "question": 838,
    "text": "<code>get()</code> raises an error if no object or multiple objects are found, while <code>filter()</code> returns an empty QuerySet or a QuerySet with multiple objects.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4190,
  "fields": {
    "question": 838,
    "text": "<code>get()</code> is used for searching by primary key only, <code>filter()</code> can use any field.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4191,
  "fields": {
    "question": 839,
    "text": "<code>python manage.py createapp myapp</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4192,
  "fields": {
    "question": 839,
    "text": "<code>python manage.py startapp myapp</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4193,
  "fields": {
    "question": 839,
    "text": "<code>python manage.py initapp myapp</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4194,
  "fields": {
    "question": 839,
    "text": "<code>django-admin startproject myapp</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4195,
  "fields": {
    "question": 839,
    "text": "<code>django-admin newapp myapp</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4196,
  "fields": {
    "question": 840,
    "text": "It sets the foreign key to its default value when the related object is deleted.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4197,
  "fields": {
    "question": 840,
    "text": "It prevents the related object from being deleted.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4198,
  "fields": {
    "question": 840,
    "text": "It sets the foreign key field to NULL when the related object is deleted.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4199,
  "fields": {
    "question": 840,
    "text": "It deletes the object containing the ForeignKey when the related object it points to is deleted.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4200,
  "fields": {
    "question": 840,
    "text": "It raises an error if an attempt is made to delete the related object.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4201,
  "fields": {
    "question": 841,
    "text": "By defining a <code>get_table_name</code> method in the model.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4202,
  "fields": {
    "question": 841,
    "text": "By setting the <code>table_name</code> attribute on the model class.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4203,
  "fields": {
    "question": 841,
    "text": "In the <code>settings.py</code> file under <code>DATABASE_TABLE_NAMES</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4204,
  "fields": {
    "question": 841,
    "text": "Passing a <code>name=</code> argument when defining the model.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4205,
  "fields": {
    "question": 841,
    "text": "Using the <code>db_table</code> option within the model's inner <code>Meta</code> class.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4206,
  "fields": {
    "question": 842,
    "text": "Only once when you first create the project.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4207,
  "fields": {
    "question": 842,
    "text": "Before you run the <code>migrate</code> command for the first time.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4208,
  "fields": {
    "question": 842,
    "text": "Whenever you add new data to the database.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4209,
  "fields": {
    "question": 842,
    "text": "After you have made changes to your model definitions (e.g., added a field, changed a field type).",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4210,
  "fields": {
    "question": 842,
    "text": "Every time you run the development server.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4211,
  "fields": {
    "question": 843,
    "text": "<code>KeyError</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4212,
  "fields": {
    "question": 843,
    "text": "<code>MyModel.DoesNotExist</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4213,
  "fields": {
    "question": 843,
    "text": "<code>MyModel.MultipleObjectsReturned</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4214,
  "fields": {
    "question": 843,
    "text": "<code>LookupError</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4215,
  "fields": {
    "question": 843,
    "text": "<code>ValueError</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4216,
  "fields": {
    "question": 844,
    "text": "<code>django.db.BaseModel</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4217,
  "fields": {
    "question": 844,
    "text": "<code>django.models.Object</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4218,
  "fields": {
    "question": 844,
    "text": "<code>django.orm.ModelBase</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4219,
  "fields": {
    "question": 844,
    "text": "<code>django.db.models.Model</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4220,
  "fields": {
    "question": 844,
    "text": "<code>django.core.Model</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4221,
  "fields": {
    "question": 845,
    "text": "<code>Product.objects.get(ordered='name', limit=5)</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4222,
  "fields": {
    "question": 845,
    "text": "<code>Product.objects.select(limit=5).order_by('name')</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4223,
  "fields": {
    "question": 845,
    "text": "<code>Product.objects.all().order_by('name').limit(5)</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4224,
  "fields": {
    "question": 845,
    "text": "<code>Product.objects.order_by('name')[0:5]</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4225,
  "fields": {
    "question": 845,
    "text": "<code>Product.objects.filter(name__isnull=False).sort('name')[:5]</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4226,
  "fields": {
    "question": 846,
    "text": "Both 2 and 4 are valid ways to achieve this.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4227,
  "fields": {
    "question": 846,
    "text": "Define a custom model validation method.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4228,
  "fields": {
    "question": 846,
    "text": "Use a <code>CheckConstraint</code> in the <code>Meta.constraints</code> option.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4229,
  "fields": {
    "question": 846,
    "text": "Set <code>unique=True</code> on all the relevant fields individually.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4230,
  "fields": {
    "question": 846,
    "text": "Use the <code>unique_together</code> option within the model's <code>Meta</code> class.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4231,
  "fields": {
    "question": 847,
    "text": "<code>models.ForeignKey(unique=True)</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4232,
  "fields": {
    "question": 847,
    "text": "<code>models.OneToOneField</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4233,
  "fields": {
    "question": 847,
    "text": "<code>models.ManyToManyField(max_related=1)</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4234,
  "fields": {
    "question": 847,
    "text": "<code>models.SingleRelationField</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4235,
  "fields": {
    "question": 847,
    "text": "<code>models.UniqueForeignKey</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4236,
  "fields": {
    "question": 848,
    "text": "To set the database column name.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4237,
  "fields": {
    "question": 848,
    "text": "To define the internal variable name used in code.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4238,
  "fields": {
    "question": 848,
    "text": "To specify a unique identifier for the model.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4239,
  "fields": {
    "question": 848,
    "text": "To provide a human-readable name for the object or field, often used in the Django admin.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4240,
  "fields": {
    "question": 848,
    "text": "To add help text displayed next to a form field.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4241,
  "fields": {
    "question": 849,
    "text": "<code>models.SlugField</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4242,
  "fields": {
    "question": 849,
    "text": "<code>models.TextField</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4243,
  "fields": {
    "question": 849,
    "text": "<code>models.VarcharField</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4244,
  "fields": {
    "question": 849,
    "text": "<code>models.StringField</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4245,
  "fields": {
    "question": 849,
    "text": "<code>models.CharField</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4246,
  "fields": {
    "question": 850,
    "text": "<code>python manage.py applymigrations</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4247,
  "fields": {
    "question": 850,
    "text": "<code>python manage.py migrate</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4248,
  "fields": {
    "question": 850,
    "text": "<code>python manage.py update_db</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4249,
  "fields": {
    "question": 850,
    "text": "<code>python manage.py syncdb</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4250,
  "fields": {
    "question": 850,
    "text": "<code>python manage.py makemigrations --apply</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4251,
  "fields": {
    "question": 851,
    "text": "Define it within the model's <code>Meta</code> class.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4252,
  "fields": {
    "question": 851,
    "text": "Use the <code>add_method</code> function from <code>django.db.models</code>.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4253,
  "fields": {
    "question": 851,
    "text": "Create a separate Manager class and add the method there.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4254,
  "fields": {
    "question": 851,
    "text": "Define a function outside the model class that takes the model instance as an argument.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4255,
  "fields": {
    "question": 851,
    "text": "Add a method directly inside the model class definition like any other Python class method.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4256,
  "fields": {
    "question": 852,
    "text": "To define the structure and behavior of the application's data, mapping to database tables.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4257,
  "fields": {
    "question": 852,
    "text": "To handle incoming HTTP requests and return responses.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4258,
  "fields": {
    "question": 852,
    "text": "To render HTML templates with context data.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4259,
  "fields": {
    "question": 852,
    "text": "To manage URL routing and dispatch views.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4260,
  "fields": {
    "question": 852,
    "text": "To provide static files like CSS and JavaScript.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4261,
  "fields": {
    "question": 853,
    "text": "<code>distinct=True</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4262,
  "fields": {
    "question": 853,
    "text": "<code>required=True</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4263,
  "fields": {
    "question": 853,
    "text": "<code>primary_key=True</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4264,
  "fields": {
    "question": 853,
    "text": "<code>unique=True</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4265,
  "fields": {
    "question": 853,
    "text": "<code>indexed=True</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4266,
  "fields": {
    "question": 854,
    "text": "Manually creating records in the production database and checking them.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4267,
  "fields": {
    "question": 854,
    "text": "Relying solely on Django's built-in admin interface for validation.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4268,
  "fields": {
    "question": 854,
    "text": "Only testing the views that use the models.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4269,
  "fields": {
    "question": 854,
    "text": "Writing unit tests using Python's <code>unittest</code> module or Django's <code>TestCase</code> subclass, often with a separate test database.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4270,
  "fields": {
    "question": 854,
    "text": "Using third-party GUI testing tools exclusively.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4271,
  "fields": {
    "question": 855,
    "text": "In a custom manager method.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4272,
  "fields": {
    "question": 855,
    "text": "In the <code>validators</code> list of a single field.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4273,
  "fields": {
    "question": 855,
    "text": "In the view function handling the form submission.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4274,
  "fields": {
    "question": 855,
    "text": "In the model's <code>clean()</code> method.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4275,
  "fields": {
    "question": 855,
    "text": "In the <code>Meta</code> class <code>constraints</code> list. (Constraints are for DB level)",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4276,
  "fields": {
    "question": 856,
    "text": "The QuerySet itself (often after applying a filter).",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4277,
  "fields": {
    "question": 856,
    "text": "A boolean value.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4278,
  "fields": {
    "question": 856,
    "text": "A single model instance.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4279,
  "fields": {
    "question": 856,
    "text": "A dictionary.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4280,
  "fields": {
    "question": 856,
    "text": "A list of model instances.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4281,
  "fields": {
    "question": 857,
    "text": "\"Django for Beginners\" by William S. Vincent",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4282,
  "fields": {
    "question": 857,
    "text": "\"Fluent Python\" by Luciano Ramalho",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4283,
  "fields": {
    "question": 857,
    "text": "\"Test-Driven Development with Python\" by Harry Percival",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4284,
  "fields": {
    "question": 857,
    "text": "\"Effective Python\" by Brett Slatkin",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4285,
  "fields": {
    "question": 857,
    "text": "\"Two Scoops of Django\" by Daniel Roy Greenfeld and Audrey Roy Greenfeld",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4286,
  "fields": {
    "question": 858,
    "text": "To manage static files.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4287,
  "fields": {
    "question": 858,
    "text": "To render HTML templates.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4288,
  "fields": {
    "question": 858,
    "text": "To define the database schema for a model.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4289,
  "fields": {
    "question": 858,
    "text": "To handle user authentication.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4290,
  "fields": {
    "question": 858,
    "text": "To add new, chainable methods for filtering or retrieving model instances.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4291,
  "fields": {
    "question": 859,
    "text": "A database indexing strategy.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4292,
  "fields": {
    "question": 859,
    "text": "A way to define URL patterns.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4293,
  "fields": {
    "question": 859,
    "text": "A template engine feature for dynamic content.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4294,
  "fields": {
    "question": 859,
    "text": "A method for encrypting user passwords.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4295,
  "fields": {
    "question": 859,
    "text": "A system that allows certain senders to notify a set of receivers when specific actions occur.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4296,
  "fields": {
    "question": 860,
    "text": "Ensure uniqueness across multiple fields.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4297,
  "fields": {
    "question": 860,
    "text": "Define Python-level validation logic.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4298,
  "fields": {
    "question": 860,
    "text": "Create foreign key relationships.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4299,
  "fields": {
    "question": 860,
    "text": "Enforce database-level checks on field values (e.g., <code>price &gt; 0</code>).",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4300,
  "fields": {
    "question": 860,
    "text": "Specify default ordering.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4301,
  "fields": {
    "question": 861,
    "text": "For fetching related objects across many-to-many or reverse foreign-key relationships.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4302,
  "fields": {
    "question": 861,
    "text": "When working with Abstract Base Classes.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4303,
  "fields": {
    "question": 861,
    "text": "When you only need the primary keys of related objects.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4304,
  "fields": {
    "question": 861,
    "text": "When you want to avoid database JOINs altogether.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4305,
  "fields": {
    "question": 861,
    "text": "For simple foreign key relationships (one-to-one or many-to-one).",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4306,
  "fields": {
    "question": 862,
    "text": "In the project's <code>settings.py</code> file.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4307,
  "fields": {
    "question": 862,
    "text": "In <code>urls.py</code>.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4308,
  "fields": {
    "question": 862,
    "text": "In the <code>ready()</code> method of the application's configuration class (<code>apps.py</code>).",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4309,
  "fields": {
    "question": 862,
    "text": "In <code>views.py</code>, within a specific view function.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4310,
  "fields": {
    "question": 862,
    "text": "In <code>models.py</code>, right after the model definition.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4311,
  "fields": {
    "question": 863,
    "text": "In a separate <code>utils</code> module, called by the view.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4312,
  "fields": {
    "question": 863,
    "text": "As a method on the <code>Order</code> model.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4313,
  "fields": {
    "question": 863,
    "text": "In the URL configuration (<code>urls.py</code>).",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4314,
  "fields": {
    "question": 863,
    "text": "As a template filter.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4315,
  "fields": {
    "question": 863,
    "text": "In the <code>Order</code> view.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4316,
  "fields": {
    "question": 864,
    "text": "Directly in every view that needs it.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4317,
  "fields": {
    "question": 864,
    "text": "As methods on a custom Manager or QuerySet.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4318,
  "fields": {
    "question": 864,
    "text": "In template tags.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4319,
  "fields": {
    "question": 864,
    "text": "In the settings file.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4320,
  "fields": {
    "question": 864,
    "text": "As global functions in <code>utils.py</code>.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4321,
  "fields": {
    "question": 865,
    "text": "<code>create()</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4322,
  "fields": {
    "question": 865,
    "text": "<code>__init__()</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4323,
  "fields": {
    "question": 865,
    "text": "<code>get_queryset()</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4324,
  "fields": {
    "question": 865,
    "text": "<code>all()</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4325,
  "fields": {
    "question": 865,
    "text": "<code>filter()</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4326,
  "fields": {
    "question": 866,
    "text": "<code>indexes</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4327,
  "fields": {
    "question": 866,
    "text": "<code>unique_together = [(&#x27;field1&#x27;, &#x27;field2&#x27;)]</code> or <code>constraints</code> with <code>UniqueConstraint</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4328,
  "fields": {
    "question": 866,
    "text": "<code>ordering</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4329,
  "fields": {
    "question": 866,
    "text": "<code>unique = True</code> (Used on a single field)",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4330,
  "fields": {
    "question": 866,
    "text": "<code>constraints</code> with <code>CheckConstraint</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4331,
  "fields": {
    "question": 867,
    "text": "<code>Meta.set_ordering(&#x27;name&#x27;)</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4332,
  "fields": {
    "question": 867,
    "text": "<code>sort_by = (&#x27;name&#x27;,)</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4333,
  "fields": {
    "question": 867,
    "text": "<code>order_by = [&#x27;name&#x27;]</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4334,
  "fields": {
    "question": 867,
    "text": "<code>default_order = &#x27;name&#x27;</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4335,
  "fields": {
    "question": 867,
    "text": "<code>ordering = [&#x27;name&#x27;]</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4336,
  "fields": {
    "question": 868,
    "text": "Inherit from <code>django.db.models.ProxyModel</code>.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4337,
  "fields": {
    "question": 868,
    "text": "Set <code>abstract = True</code> in the <code>Meta</code> class.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4338,
  "fields": {
    "question": 868,
    "text": "Set <code>managed = False</code> in the <code>Meta</code> class.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4339,
  "fields": {
    "question": 868,
    "text": "Use the <code>@proxy</code> decorator on the model class.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4340,
  "fields": {
    "question": 868,
    "text": "Set <code>proxy = True</code> in the <code>Meta</code> class.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4341,
  "fields": {
    "question": 869,
    "text": "<code>only()</code> and <code>defer()</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4342,
  "fields": {
    "question": 869,
    "text": "<code>filter()</code> and <code>exclude()</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4343,
  "fields": {
    "question": 869,
    "text": "<code>values()</code> and <code>values_list()</code> (Also achieve this, but return dict/tuples)",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4344,
  "fields": {
    "question": 869,
    "text": "<code>annotate()</code> and <code>aggregate()</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4345,
  "fields": {
    "question": 869,
    "text": "<code>select_related()</code> and <code>prefetch_related()</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4346,
  "fields": {
    "question": 870,
    "text": "It enforces code style guidelines.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4347,
  "fields": {
    "question": 870,
    "text": "It generates API documentation.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4348,
  "fields": {
    "question": 870,
    "text": "It manages database migrations.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4349,
  "fields": {
    "question": 870,
    "text": "It provides detailed information about database queries executed per request, helping to identify issues like N+1 problems.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4350,
  "fields": {
    "question": 870,
    "text": "It automatically rewrites inefficient queries.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4351,
  "fields": {
    "question": 871,
    "text": "<code>django.db.models.Model</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4352,
  "fields": {
    "question": 871,
    "text": "<code>django.db.models.QuerySet</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4353,
  "fields": {
    "question": 871,
    "text": "<code>django.db.models.Manager</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4354,
  "fields": {
    "question": 871,
    "text": "<code>django.forms.Field</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4355,
  "fields": {
    "question": 871,
    "text": "<code>django.db.models.Field</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4356,
  "fields": {
    "question": 872,
    "text": "All logic should be placed in custom Managers.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4357,
  "fields": {
    "question": 872,
    "text": "Views should contain all business logic.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4358,
  "fields": {
    "question": 872,
    "text": "Templates should handle complex data transformations.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4359,
  "fields": {
    "question": 872,
    "text": "Business logic related to data should reside in the Model layer, keeping Views focused on handling HTTP requests/responses.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4360,
  "fields": {
    "question": 872,
    "text": "Models should primarily contain data fields, with minimal methods.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4361,
  "fields": {
    "question": 873,
    "text": "<code>delete()</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4362,
  "fields": {
    "question": 873,
    "text": "<code>get_absolute_url()</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4363,
  "fields": {
    "question": 873,
    "text": "<code>clean()</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4364,
  "fields": {
    "question": 873,
    "text": "<code>__str__()</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4365,
  "fields": {
    "question": 873,
    "text": "<code>save()</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4366,
  "fields": {
    "question": 874,
    "text": "It automatically generates API endpoints.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4367,
  "fields": {
    "question": 874,
    "text": "It reduces the need for database migrations.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4368,
  "fields": {
    "question": 874,
    "text": "It promotes code reuse and makes the logic available wherever the model instance is used (views, admin, shell, tests).",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4369,
  "fields": {
    "question": 874,
    "text": "It makes database queries faster.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4370,
  "fields": {
    "question": 874,
    "text": "It simplifies URL routing.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4371,
  "fields": {
    "question": 875,
    "text": "By using the <code>@property</code> decorator on a model method.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4372,
  "fields": {
    "question": 875,
    "text": "By setting <code>computed=True</code> in the <code>Meta</code> class.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4373,
  "fields": {
    "question": 875,
    "text": "By defining a custom model field.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4374,
  "fields": {
    "question": 875,
    "text": "By using a <code>lambda</code> function in the model definition.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4375,
  "fields": {
    "question": 875,
    "text": "By defining a method and calling it with parentheses: <code>user.calculate_age()</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4376,
  "fields": {
    "question": 876,
    "text": "To optimize database read operations.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4377,
  "fields": {
    "question": 876,
    "text": "To define shared fields for multiple models without a database table.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4378,
  "fields": {
    "question": 876,
    "text": "To change the Python-level behavior of a model (e.g., add methods, change manager) without altering its database schema.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4379,
  "fields": {
    "question": 876,
    "text": "To create a new database table with additional fields.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4380,
  "fields": {
    "question": 876,
    "text": "To enforce complex database constraints.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4381,
  "fields": {
    "question": 877,
    "text": "To change the visual representation of the model in the admin interface.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4382,
  "fields": {
    "question": 877,
    "text": "To add new fields to the model's database table.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4383,
  "fields": {
    "question": 877,
    "text": "To add table-level functionality or modify the initial QuerySet the manager returns.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4384,
  "fields": {
    "question": 877,
    "text": "To override the model's <code>save()</code> method.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4385,
  "fields": {
    "question": 877,
    "text": "To define custom database constraints.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4386,
  "fields": {
    "question": 878,
    "text": "To specify related models.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4387,
  "fields": {
    "question": 878,
    "text": "To attach custom validation functions.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4388,
  "fields": {
    "question": 878,
    "text": "To provide a list of allowed values for the field, often displayed as a dropdown in forms or the admin.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4389,
  "fields": {
    "question": 878,
    "text": "To set the maximum length of a character field.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4390,
  "fields": {
    "question": 878,
    "text": "To define multiple database indexes.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4391,
  "fields": {
    "question": 879,
    "text": "To set the database table name.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4392,
  "fields": {
    "question": 879,
    "text": "To define a custom manager.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4393,
  "fields": {
    "question": 879,
    "text": "To specify database indexing.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4394,
  "fields": {
    "question": 879,
    "text": "To provide a human-readable singular name for the model, often used in the admin interface.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4395,
  "fields": {
    "question": 879,
    "text": "To enable optimistic locking.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4396,
  "fields": {
    "question": 880,
    "text": "Signals automatically handle database transactions.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4397,
  "fields": {
    "question": 880,
    "text": "Logic flow can become hard to trace and debug due to the implicit invocation of receivers.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4398,
  "fields": {
    "question": 880,
    "text": "They prevent N+1 query problems.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4399,
  "fields": {
    "question": 880,
    "text": "Reduced database load.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4400,
  "fields": {
    "question": 880,
    "text": "Improved code readability.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4401,
  "fields": {
    "question": 881,
    "text": "<code>@receiver(signals.post_save, sender=MyModel) def my_receiver(...):</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4402,
  "fields": {
    "question": 881,
    "text": "<code>MyModel.add_signal_listener(post_save, my_receiver)</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4403,
  "fields": {
    "question": 881,
    "text": "<code>signals.register(post_save, MyModel, my_receiver)</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4404,
  "fields": {
    "question": 881,
    "text": "<code>def my_receiver(sender=MyModel, signal=post_save, **kwargs):</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4405,
  "fields": {
    "question": 881,
    "text": "<code>@post_save.connect(sender=MyModel) def my_receiver(...):</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4406,
  "fields": {
    "question": 882,
    "text": "It simplifies the model's <code>save()</code> method.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4407,
  "fields": {
    "question": 882,
    "text": "It helps decouple applications; the app sending the signal doesn't need to know about the apps receiving it.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4408,
  "fields": {
    "question": 882,
    "text": "It replaces the need for custom managers.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4409,
  "fields": {
    "question": 882,
    "text": "It guarantees faster database operations.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4410,
  "fields": {
    "question": 882,
    "text": "It automatically generates documentation.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4411,
  "fields": {
    "question": 883,
    "text": "Register it in <code>admin.py</code>.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4412,
  "fields": {
    "question": 883,
    "text": "Assign an instance of it to a model attribute, typically <code>objects</code>: <code>objects = MyManager()</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4413,
  "fields": {
    "question": 883,
    "text": "Pass it as an argument: <code>models.CharField(manager=MyManager())</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4414,
  "fields": {
    "question": 883,
    "text": "Decorate the model class: <code>@use_manager(MyManager)</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4415,
  "fields": {
    "question": 883,
    "text": "Define it in the <code>Meta</code> class: <code>meta_manager = MyManager()</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4416,
  "fields": {
    "question": 884,
    "text": "Use the <code>@abstract_model</code> decorator.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4417,
  "fields": {
    "question": 884,
    "text": "Inherit directly from <code>django.db.models.Model</code> without specifying fields.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4418,
  "fields": {
    "question": 884,
    "text": "Set <code>abstract = False</code> in the <code>Meta</code> class.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4419,
  "fields": {
    "question": 884,
    "text": "Set <code>abstract = True</code> in the <code>Meta</code> class.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4420,
  "fields": {
    "question": 884,
    "text": "Inherit from <code>django.db.models.AbstractModel</code>.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4421,
  "fields": {
    "question": 885,
    "text": "It limits the columns retrieved from the database for the main model.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4422,
  "fields": {
    "question": 885,
    "text": "It caches the query results in memory.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4423,
  "fields": {
    "question": 885,
    "text": "It follows foreign-key relationships and retrieves related objects in the same database query using SQL JOINs.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4424,
  "fields": {
    "question": 885,
    "text": "It performs separate queries for related objects and joins them in Python.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4425,
  "fields": {
    "question": 885,
    "text": "It selects a random subset of the query results.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4426,
  "fields": {
    "question": 886,
    "text": "Multi-Table Inheritance",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4427,
  "fields": {
    "question": 886,
    "text": "Manual Table Inheritance",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4428,
  "fields": {
    "question": 886,
    "text": "Abstract Base Classes",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4429,
  "fields": {
    "question": 886,
    "text": "Proxy Models",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4430,
  "fields": {
    "question": 886,
    "text": "Concrete Base Classes",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4431,
  "fields": {
    "question": 887,
    "text": "Complex business requirements often necessitate careful use of advanced patterns like custom managers, inheritance, and model methods.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4432,
  "fields": {
    "question": 887,
    "text": "Django's built-in features are insufficient for complex applications.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4433,
  "fields": {
    "question": 887,
    "text": "Simplicity is always better, even if it means less functionality.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4434,
  "fields": {
    "question": 887,
    "text": "Performance optimization is rarely needed for complex models.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4435,
  "fields": {
    "question": 887,
    "text": "Third-party packages should always be preferred over custom model logic.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4436,
  "fields": {
    "question": 888,
    "text": "Use the <code>manage.py rename_field</code> command. (No such command exists by default)",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4437,
  "fields": {
    "question": 888,
    "text": "Simply rename the field in <code>models.py</code> and run <code>makemigrations</code>. Django handles the rest automatically.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4438,
  "fields": {
    "question": 888,
    "text": "Delete the <code>old_name</code> field, run <code>migrate</code>, add the <code>new_name</code> field, run <code>migrate</code> again.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4439,
  "fields": {
    "question": 888,
    "text": "Modify the database schema directly using SQL, then update the model.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4440,
  "fields": {
    "question": 888,
    "text": "1. Add the new field (<code>new_name</code>). 2. Create a data migration to copy data from <code>old_name</code> to <code>new_name</code>. 3. Remove the old field (<code>old_name</code>).",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4441,
  "fields": {
    "question": 889,
    "text": "Writing too many unit tests for models.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4442,
  "fields": {
    "question": 889,
    "text": "Excessive use of database-level constraints.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4443,
  "fields": {
    "question": 889,
    "text": "Not using Django signals enough.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4444,
  "fields": {
    "question": 889,
    "text": "Making models too \"thin\" by putting all logic in views.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4445,
  "fields": {
    "question": 889,
    "text": "Over-reliance on Abstract Base Classes.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4446,
  "fields": {
    "question": 890,
    "text": "Combining many schema changes into a single large migration for efficiency.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4447,
  "fields": {
    "question": 890,
    "text": "Using only NoSQL databases to avoid schema issues.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4448,
  "fields": {
    "question": 890,
    "text": "Ensuring migrations are backward-compatible if possible, especially during deployment phases where old and new code might coexist.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4449,
  "fields": {
    "question": 890,
    "text": "Avoiding database indexes to speed up migrations.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4450,
  "fields": {
    "question": 890,
    "text": "Deleting migration files after they have been applied in production.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4451,
  "fields": {
    "question": 891,
    "text": "Both are equally suitable for filtering.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4452,
  "fields": {
    "question": 891,
    "text": "Model method, as it operates on a single instance.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4453,
  "fields": {
    "question": 891,
    "text": "Neither, filtering should only happen in views.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4454,
  "fields": {
    "question": 891,
    "text": "Model method, but only if it calls <code>self.objects.filter()</code>.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4455,
  "fields": {
    "question": 891,
    "text": "Custom manager/queryset method, as it operates at the table/queryset level.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4456,
  "fields": {
    "question": 892,
    "text": "To define the database table name.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4457,
  "fields": {
    "question": 892,
    "text": "To perform complex database queries.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4458,
  "fields": {
    "question": 892,
    "text": "To trigger background tasks.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4459,
  "fields": {
    "question": 892,
    "text": "To provide a convenient way to access derived or formatted data related to a single model instance.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4460,
  "fields": {
    "question": 892,
    "text": "To handle user authentication logic.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4461,
  "fields": {
    "question": 893,
    "text": "<code>migrations.RenameField</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4462,
  "fields": {
    "question": 893,
    "text": "<code>migrations.RunPython</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4463,
  "fields": {
    "question": 893,
    "text": "<code>migrations.AddField</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4464,
  "fields": {
    "question": 893,
    "text": "<code>migrations.RunSQL</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4465,
  "fields": {
    "question": 893,
    "text": "<code>migrations.AlterModelTable</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4466,
  "fields": {
    "question": 894,
    "text": "It slows down the development process unnecessarily.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4467,
  "fields": {
    "question": 894,
    "text": "It helps ensure that complex business logic encapsulated in the model layer works correctly and prevents regressions.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4468,
  "fields": {
    "question": 894,
    "text": "It's only necessary if you use signals.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4469,
  "fields": {
    "question": 894,
    "text": "It automatically optimizes database queries.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4470,
  "fields": {
    "question": 894,
    "text": "It replaces the need for documentation.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4471,
  "fields": {
    "question": 895,
    "text": "<code>object_list_model</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4472,
  "fields": {
    "question": 895,
    "text": "<code>model</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4473,
  "fields": {
    "question": 895,
    "text": "<code>queryset</code> (can be used instead of model)",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4474,
  "fields": {
    "question": 895,
    "text": "<code>context_object_name</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4475,
  "fields": {
    "question": 895,
    "text": "<code>template_name</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4476,
  "fields": {
    "question": 896,
    "text": "To redirect the user to another URL.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4477,
  "fields": {
    "question": 896,
    "text": "To parse incoming JSON data.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4478,
  "fields": {
    "question": 896,
    "text": "To perform a database query.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4479,
  "fields": {
    "question": 896,
    "text": "To load a template, fill it with context data, and return an <code>HttpResponse</code>.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4480,
  "fields": {
    "question": 896,
    "text": "To handle user authentication.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4481,
  "fields": {
    "question": 897,
    "text": "`{{ user_name }}`",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4482,
  "fields": {
    "question": 897,
    "text": "`{% user_name %}`",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4483,
  "fields": {
    "question": 897,
    "text": "`$user_name`",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4484,
  "fields": {
    "question": 897,
    "text": "<code>&lt;% user_name %&gt;</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4485,
  "fields": {
    "question": 897,
    "text": "`{{ context.user_name }}`",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4486,
  "fields": {
    "question": 898,
    "text": "Using <code>request.META[&#x27;QUERY_STRING&#x27;]</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4487,
  "fields": {
    "question": 898,
    "text": "Using <code>request.body.get(&#x27;param_name&#x27;)</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4488,
  "fields": {
    "question": 898,
    "text": "Using <code>request.session.get(&#x27;param_name&#x27;)</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4489,
  "fields": {
    "question": 898,
    "text": "Using <code>request.GET.get(&#x27;param_name&#x27;)</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4490,
  "fields": {
    "question": 898,
    "text": "Using <code>request.POST.get(&#x27;param_name&#x27;)</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4491,
  "fields": {
    "question": 899,
    "text": "<code>settings.py</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4492,
  "fields": {
    "question": 899,
    "text": "<code>urls.py</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4493,
  "fields": {
    "question": 899,
    "text": "<code>views.py</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4494,
  "fields": {
    "question": 899,
    "text": "<code>models.py</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4495,
  "fields": {
    "question": 899,
    "text": "<code>admin.py</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4496,
  "fields": {
    "question": 900,
    "text": "Exposure of sensitive configuration details and security vulnerabilities through detailed error pages.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4497,
  "fields": {
    "question": 900,
    "text": "Automatic database backups.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4498,
  "fields": {
    "question": 900,
    "text": "Improved application performance.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4499,
  "fields": {
    "question": 900,
    "text": "Reduced server costs.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4500,
  "fields": {
    "question": 900,
    "text": "Enhanced user session security.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4501,
  "fields": {
    "question": 901,
    "text": "A Python dictionary.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4502,
  "fields": {
    "question": 901,
    "text": "An instance of <code>HttpResponse</code> or one of its subclasses.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4503,
  "fields": {
    "question": 901,
    "text": "A JSON string.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4504,
  "fields": {
    "question": 901,
    "text": "A Model instance.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4505,
  "fields": {
    "question": 901,
    "text": "A rendered HTML string.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4506,
  "fields": {
    "question": 902,
    "text": "Validates that an object exists before deleting it.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4507,
  "fields": {
    "question": 902,
    "text": "Tries to retrieve a single object based on lookup parameters; raises Http404 if it doesn't exist.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4508,
  "fields": {
    "question": 902,
    "text": "Redirects to a 404 page if the user is not logged in.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4509,
  "fields": {
    "question": 902,
    "text": "Renders a specific 404 template with context.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4510,
  "fields": {
    "question": 902,
    "text": "Returns a default object if the requested one is not found.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4511,
  "fields": {
    "question": 903,
    "text": "<code>@login_required</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4512,
  "fields": {
    "question": 903,
    "text": "<code>@csrf_protect</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4513,
  "fields": {
    "question": 903,
    "text": "<code>@allowed_methods('POST')</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4514,
  "fields": {
    "question": 903,
    "text": "<code>@require_http_methods([\"POST\"])</code> or <code>@require_POST</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4515,
  "fields": {
    "question": 903,
    "text": "<code>@method_check(['POST'])</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4516,
  "fields": {
    "question": 904,
    "text": "<code>RequestFactory</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4517,
  "fields": {
    "question": 904,
    "text": "<code>HttpClient</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4518,
  "fields": {
    "question": 904,
    "text": "<code>ViewTester</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4519,
  "fields": {
    "question": 904,
    "text": "<code>MockRequest</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4520,
  "fields": {
    "question": 904,
    "text": "<code>Client</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4521,
  "fields": {
    "question": 905,
    "text": "A separate, temporary test database is created, and each test runs in its own transaction which is rolled back afterwards.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4522,
  "fields": {
    "question": 905,
    "text": "The production database is used directly.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4523,
  "fields": {
    "question": 905,
    "text": "A backup of the production database is restored before each test.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4524,
  "fields": {
    "question": 905,
    "text": "Tests run entirely in memory without a database.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4525,
  "fields": {
    "question": 905,
    "text": "The developer must manually set up and tear down the test database.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4526,
  "fields": {
    "question": 906,
    "text": "To prevent Cross-Site Request Forgery attacks by including a required security token.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4527,
  "fields": {
    "question": 906,
    "text": "To include hidden fields for GET parameters.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4528,
  "fields": {
    "question": 906,
    "text": "To link the form to a specific Django model.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4529,
  "fields": {
    "question": 906,
    "text": "To generate a unique ID for the form.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4530,
  "fields": {
    "question": 906,
    "text": "To automatically submit the form using JavaScript.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4531,
  "fields": {
    "question": 907,
    "text": "They simplify the process of writing complex SQL queries.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4532,
  "fields": {
    "question": 907,
    "text": "They are the only way to handle asynchronous requests in Django.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4533,
  "fields": {
    "question": 907,
    "text": "They eliminate the need for URL configuration.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4534,
  "fields": {
    "question": 907,
    "text": "They are fundamentally faster than Function-Based Views.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4535,
  "fields": {
    "question": 907,
    "text": "They promote code reuse through inheritance and mixins, especially for common view patterns.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4536,
  "fields": {
    "question": 908,
    "text": "Method-View-Template",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4537,
  "fields": {
    "question": 908,
    "text": "Model-View-Template",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4538,
  "fields": {
    "question": 908,
    "text": "Module-View-Transaction",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4539,
  "fields": {
    "question": 908,
    "text": "Model-Variable-Template",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4540,
  "fields": {
    "question": 908,
    "text": "Model-View-Technology",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4541,
  "fields": {
    "question": 909,
    "text": "<code>item</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4542,
  "fields": {
    "question": 909,
    "text": "<code>instance</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4543,
  "fields": {
    "question": 909,
    "text": "<code>detail_object</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4544,
  "fields": {
    "question": 909,
    "text": "<code>object</code> (or the lowercased model name)",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4545,
  "fields": {
    "question": 909,
    "text": "<code>model_instance</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4546,
  "fields": {
    "question": 910,
    "text": "Using <code>request.GET.get(&#x27;param_name&#x27;)</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4547,
  "fields": {
    "question": 910,
    "text": "Using <code>request.body.decode(&#x27;utf-8&#x27;)</code> and parsing",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4548,
  "fields": {
    "question": 910,
    "text": "Using <code>request.POST.get(&#x27;param_name&#x27;)</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4549,
  "fields": {
    "question": 910,
    "text": "Using <code>request.headers[&#x27;param_name&#x27;]</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4550,
  "fields": {
    "question": 910,
    "text": "Using <code>request.FILES.get(&#x27;file_name&#x27;)</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4551,
  "fields": {
    "question": 911,
    "text": "To interact directly with the database.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4552,
  "fields": {
    "question": 911,
    "text": "To define the presentation logic and structure of the user interface.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4553,
  "fields": {
    "question": 911,
    "text": "To handle the request, process business logic, and return a response (often rendering a template).",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4554,
  "fields": {
    "question": 911,
    "text": "To manage URL routing patterns.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4555,
  "fields": {
    "question": 911,
    "text": "To define the data structure and fields.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4556,
  "fields": {
    "question": 912,
    "text": "\n        <pre><code class=\"language-html\">\n        &lt;iterate through=\"item_list\" var=\"item\"&gt; {{ item }} &lt;/iterate&gt;\n        </code></pre>\n      ",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4557,
  "fields": {
    "question": 912,
    "text": "\n        <pre><code class=\"language-html\">\n        &lt;for item in item_list&gt; {{ item }} &lt;/for&gt;\n        </code></pre>\n      ",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4558,
  "fields": {
    "question": 912,
    "text": "\n        <pre><code class=\"language-html\">\n        {% for item in item_list %} {{ item }} {% endfor %}\n        </code></pre>\n      ",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4559,
  "fields": {
    "question": 912,
    "text": "\n        <pre><code class=\"language-html\">\n        {% foreach item in item_list %} {{ item }} {% endforeach %}\n        </code></pre>\n      ",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4560,
  "fields": {
    "question": 912,
    "text": "\n        <pre><code class=\"language-html\">\n        {% loop item in item_list %} {{ item }} {% endloop %}\n        </code></pre>\n      ",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4561,
  "fields": {
    "question": 913,
    "text": "The database triggers the view based on the URL.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4562,
  "fields": {
    "question": 913,
    "text": "Via the Template engine selecting the appropriate view.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4563,
  "fields": {
    "question": 913,
    "text": "The view directly listens on a network port.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4564,
  "fields": {
    "question": 913,
    "text": "Through the Model layer interpreting the request.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4565,
  "fields": {
    "question": 913,
    "text": "Through Django's URL dispatcher matching the request URL to a pattern defined in <code>urls.py</code>.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4566,
  "fields": {
    "question": 914,
    "text": "<code>TemplateView</code> / <code>RedirectView</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4567,
  "fields": {
    "question": 914,
    "text": "<code>ListView</code> / <code>DetailView</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4568,
  "fields": {
    "question": 914,
    "text": "<code>CreateView</code> / <code>DeleteView</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4569,
  "fields": {
    "question": 914,
    "text": "<code>UpdateView</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4570,
  "fields": {
    "question": 914,
    "text": "<code>FormView</code> / <code>ModelFormView</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4571,
  "fields": {
    "question": 915,
    "text": "The template file name is misspelled, or the template loader cannot find the file in the configured directories.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4572,
  "fields": {
    "question": 915,
    "text": "An issue with the URL routing configuration.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4573,
  "fields": {
    "question": 915,
    "text": "Missing CSRF token in a POST request.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4574,
  "fields": {
    "question": 915,
    "text": "Incorrect database credentials.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4575,
  "fields": {
    "question": 915,
    "text": "A syntax error in the <code>views.py</code> file.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4576,
  "fields": {
    "question": 916,
    "text": "Celery",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4577,
  "fields": {
    "question": 916,
    "text": "Django Debug Toolbar",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4578,
  "fields": {
    "question": 916,
    "text": "Django REST framework",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4579,
  "fields": {
    "question": 916,
    "text": "South / Migrations",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4580,
  "fields": {
    "question": 916,
    "text": "Django Channels",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4581,
  "fields": {
    "question": 917,
    "text": "<code>ConfirmView</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4582,
  "fields": {
    "question": 917,
    "text": "<code>ObjectDeleteView</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4583,
  "fields": {
    "question": 917,
    "text": "<code>DeleteView</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4584,
  "fields": {
    "question": 917,
    "text": "<code>RemoveView</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4585,
  "fields": {
    "question": 917,
    "text": "<code>UpdateView</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4586,
  "fields": {
    "question": 918,
    "text": "Running unit tests with verbose output.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4587,
  "fields": {
    "question": 918,
    "text": "Using the Django Debug Toolbar.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4588,
  "fields": {
    "question": 918,
    "text": "Performing static code analysis.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4589,
  "fields": {
    "question": 918,
    "text": "Using the Python Debugger to pause execution and inspect variables interactively.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4590,
  "fields": {
    "question": 918,
    "text": "Enabling framework-level logging.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4591,
  "fields": {
    "question": 919,
    "text": "Create a session cookie manually.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4592,
  "fields": {
    "question": 919,
    "text": "Use <code>self.client.login(username=&#x27;testuser&#x27;, password=&#x27;password&#x27;)</code>.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4593,
  "fields": {
    "question": 919,
    "text": "Use <code>self.client.set_user(test_user)</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4594,
  "fields": {
    "question": 919,
    "text": "Manually set <code>request.user</code> in the test.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4595,
  "fields": {
    "question": 919,
    "text": "Pass user credentials in the <code>headers</code> argument of <code>client.get()</code>.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4596,
  "fields": {
    "question": 920,
    "text": "The model instance being processed.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4597,
  "fields": {
    "question": 920,
    "text": "A <code>HttpRequest</code> object containing request metadata.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4598,
  "fields": {
    "question": 920,
    "text": "A <code>HttpResponse</code> object.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4599,
  "fields": {
    "question": 920,
    "text": "A dictionary containing context data.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4600,
  "fields": {
    "question": 920,
    "text": "The name of the template to be rendered.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4601,
  "fields": {
    "question": 921,
    "text": "<code>DetailView</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4602,
  "fields": {
    "question": 921,
    "text": "<code>CreateView</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4603,
  "fields": {
    "question": 921,
    "text": "<code>TemplateView</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4604,
  "fields": {
    "question": 921,
    "text": "<code>FormView</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4605,
  "fields": {
    "question": 921,
    "text": "<code>ListView</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4606,
  "fields": {
    "question": 922,
    "text": "<code>response = get('/items/')</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4607,
  "fields": {
    "question": 922,
    "text": "<code>response = self.client.get('/items/')</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4608,
  "fields": {
    "question": 922,
    "text": "<code>response = self.client.simulate_get('/items/')</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4609,
  "fields": {
    "question": 922,
    "text": "<code>response = self.client.fetch('/items/')</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4610,
  "fields": {
    "question": 922,
    "text": "<code>response = self.client.request(method='GET', path='/items/')</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4611,
  "fields": {
    "question": 923,
    "text": "It prevents template name collisions between different Django apps.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4612,
  "fields": {
    "question": 923,
    "text": "It enables automatic CSS inclusion.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4613,
  "fields": {
    "question": 923,
    "text": "It allows templates to directly access models.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4614,
  "fields": {
    "question": 923,
    "text": "It automatically translates templates.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4615,
  "fields": {
    "question": 923,
    "text": "It improves template rendering performance.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4616,
  "fields": {
    "question": 924,
    "text": "<code>find_path()</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4617,
  "fields": {
    "question": 924,
    "text": "<code>url()</code> (in older Django) or <code>re_path()</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4618,
  "fields": {
    "question": 924,
    "text": "<code>match()</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4619,
  "fields": {
    "question": 924,
    "text": "<code>pattern()</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4620,
  "fields": {
    "question": 924,
    "text": "<code>regex_path()</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4621,
  "fields": {
    "question": 925,
    "text": "<code>DeleteView</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4622,
  "fields": {
    "question": 925,
    "text": "<code>DetailView</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4623,
  "fields": {
    "question": 925,
    "text": "<code>ListView</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4624,
  "fields": {
    "question": 925,
    "text": "<code>CreateView</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4625,
  "fields": {
    "question": 925,
    "text": "<code>FormView</code> (more generic, <code>CreateView</code> is model-specific)",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4626,
  "fields": {
    "question": 926,
    "text": "<code>path(&#x27;articles/&lt;article_id&gt;/&#x27;, views.article_detail)</code></article_id>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4627,
  "fields": {
    "question": 926,
    "text": "`path('articles/(?P<article_id>\\d+)/', views.article_detail)`</article_id>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4628,
  "fields": {
    "question": 926,
    "text": "<code>path(&#x27;articles/:article_id/&#x27;, views.article_detail)</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4629,
  "fields": {
    "question": 926,
    "text": "`path('articles/{article_id}/', views.article_detail)`",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4630,
  "fields": {
    "question": 926,
    "text": "<code>path(&#x27;articles/?id=&lt;article_id&gt;&#x27;, views.article_detail)</code></article_id>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4631,
  "fields": {
    "question": 927,
    "text": "To organize template files.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4632,
  "fields": {
    "question": 927,
    "text": "To group related models together.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4633,
  "fields": {
    "question": 927,
    "text": "To apply security restrictions to a group of URLs.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4634,
  "fields": {
    "question": 927,
    "text": "To allow distinguishing between URLs with the same name from different apps (e.g., <code>polls:detail</code> vs <code>blog:detail</code>).",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4635,
  "fields": {
    "question": 927,
    "text": "To automatically generate URLs based on model names.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4636,
  "fields": {
    "question": 928,
    "text": "<code>RedirectView</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4637,
  "fields": {
    "question": 928,
    "text": "<code>ArchiveIndexView</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4638,
  "fields": {
    "question": 928,
    "text": "<code>ListView</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4639,
  "fields": {
    "question": 928,
    "text": "<code>UpdateView</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4640,
  "fields": {
    "question": 928,
    "text": "<code>DetailView</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4641,
  "fields": {
    "question": 929,
    "text": "A configuration file for views.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4642,
  "fields": {
    "question": 929,
    "text": "A class that provides a specific piece of functionality and is intended to be inherited by other classes (often CBVs).",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4643,
  "fields": {
    "question": 929,
    "text": "A specific type of template tag.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4644,
  "fields": {
    "question": 929,
    "text": "A database field type.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4645,
  "fields": {
    "question": 929,
    "text": "A JavaScript helper function for AJAX requests.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4646,
  "fields": {
    "question": 930,
    "text": "`{% url 'view_name' %}` or <code>reverse(&#x27;view_name&#x27;)</code> in Python code",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4647,
  "fields": {
    "question": 930,
    "text": "`{% reverse 'view_name' %}`",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4648,
  "fields": {
    "question": 930,
    "text": "`{% path 'view_name' %}`",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4649,
  "fields": {
    "question": 930,
    "text": "`{% route 'view_name' %}`",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4650,
  "fields": {
    "question": 930,
    "text": "`{% link 'view_name' %}`",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4651,
  "fields": {
    "question": 931,
    "text": "They automatically handle database migrations.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4652,
  "fields": {
    "question": 931,
    "text": "They handle common web development patterns (displaying lists, details, forms) with minimal code.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4653,
  "fields": {
    "question": 931,
    "text": "They bypass the need for templates.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4654,
  "fields": {
    "question": 931,
    "text": "They are designed specifically for building REST APIs.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4655,
  "fields": {
    "question": 931,
    "text": "They provide maximum flexibility for unique view logic.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4656,
  "fields": {
    "question": 932,
    "text": "To pass dynamic data from the view to the template for rendering.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4657,
  "fields": {
    "question": 932,
    "text": "To define the template's CSS styles.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4658,
  "fields": {
    "question": 932,
    "text": "To specify which template file to use.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4659,
  "fields": {
    "question": 932,
    "text": "To store session information for the user.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4660,
  "fields": {
    "question": 932,
    "text": "To configure URL routing within the template.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4661,
  "fields": {
    "question": 933,
    "text": "<code>connect()</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4662,
  "fields": {
    "question": 933,
    "text": "<code>url()</code> (older Django) or <code>re_path()</code> for regex",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4663,
  "fields": {
    "question": 933,
    "text": "<code>map()</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4664,
  "fields": {
    "question": 933,
    "text": "<code>route()</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4665,
  "fields": {
    "question": 933,
    "text": "<code>path()</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4666,
  "fields": {
    "question": 934,
    "text": "CBVs are deprecated in newer Django versions.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4667,
  "fields": {
    "question": 934,
    "text": "CBVs use inheritance and mixins for code reuse, while FBVs are typically standalone functions.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4668,
  "fields": {
    "question": 934,
    "text": "FBVs cannot handle POST requests, while CBVs can.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4669,
  "fields": {
    "question": 934,
    "text": "FBVs are required for rendering templates, while CBVs are not.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4670,
  "fields": {
    "question": 934,
    "text": "FBVs handle URL routing directly, while CBVs rely on a separate router.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4671,
  "fields": {
    "question": 935,
    "text": "Use a <code>try...except</code> block within the view to catch the specific exception and return an appropriate response (e.g., a 404 page).",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4672,
  "fields": {
    "question": 935,
    "text": "Modify the Django core to ignore such exceptions.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4673,
  "fields": {
    "question": 935,
    "text": "Let the exception propagate and display a generic 500 error page.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4674,
  "fields": {
    "question": 935,
    "text": "Define a custom middleware that catches all exceptions globally.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4675,
  "fields": {
    "question": 935,
    "text": "Log the exception but always return a 200 OK response.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4676,
  "fields": {
    "question": 936,
    "text": "By inheriting from <code>AsyncView</code> class.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4677,
  "fields": {
    "question": 936,
    "text": "By setting <code>is_async = True</code> attribute on the function.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4678,
  "fields": {
    "question": 936,
    "text": "By defining the function using the <code>async def</code> syntax.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4679,
  "fields": {
    "question": 936,
    "text": "By wrapping the view function with <code>sync_to_async</code>.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4680,
  "fields": {
    "question": 936,
    "text": "By adding <code>@async_view</code> decorator.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4681,
  "fields": {
    "question": 937,
    "text": "To render templates based on view context data.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4682,
  "fields": {
    "question": 937,
    "text": "To provide generic class-based views.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4683,
  "fields": {
    "question": 937,
    "text": "To handle database migrations.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4684,
  "fields": {
    "question": 937,
    "text": "To define URL patterns for the application.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4685,
  "fields": {
    "question": 937,
    "text": "To process requests globally before they reach the view and responses before they leave the view.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4686,
  "fields": {
    "question": 938,
    "text": "Denial of Service (DoS)",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4687,
  "fields": {
    "question": 938,
    "text": "Cross-Site Scripting (XSS)",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4688,
  "fields": {
    "question": 938,
    "text": "Cross-Site Request Forgery (CSRF)",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4689,
  "fields": {
    "question": 938,
    "text": "Session Hijacking",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4690,
  "fields": {
    "question": 938,
    "text": "SQL Injection",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4691,
  "fields": {
    "question": 939,
    "text": "The name of the template to render.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4692,
  "fields": {
    "question": 939,
    "text": "A dictionary of context data.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4693,
  "fields": {
    "question": 939,
    "text": "A QuerySet object.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4694,
  "fields": {
    "question": 939,
    "text": "An <code>HttpResponse</code> object (or raise an exception).",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4695,
  "fields": {
    "question": 939,
    "text": "A boolean value indicating success or failure.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4696,
  "fields": {
    "question": 940,
    "text": "The <code>assertTemplateUsed</code> assertion",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4697,
  "fields": {
    "question": 940,
    "text": "The <code>RequestFactory</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4698,
  "fields": {
    "question": 940,
    "text": "The Django Debug Toolbar",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4699,
  "fields": {
    "question": 940,
    "text": "The <code>manage.py runserver</code> command",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4700,
  "fields": {
    "question": 940,
    "text": "The Django test <code>Client</code> (<code>self.client</code> in a <code>TestCase</code>)",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4701,
  "fields": {
    "question": 941,
    "text": "<code>render_to_response()</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4702,
  "fields": {
    "question": 941,
    "text": "<code>dispatch()</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4703,
  "fields": {
    "question": 941,
    "text": "<code>get_template_names()</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4704,
  "fields": {
    "question": 941,
    "text": "<code>get_context_data()</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4705,
  "fields": {
    "question": 941,
    "text": "<code>get_queryset()</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4706,
  "fields": {
    "question": 942,
    "text": "They automatically handle database migrations for API models.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4707,
  "fields": {
    "question": 942,
    "text": "They replace the need for serializers.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4708,
  "fields": {
    "question": 942,
    "text": "They automatically generate the standard URL patterns for a <code>ViewSet</code> (list, detail, etc.).",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4709,
  "fields": {
    "question": 942,
    "text": "They enforce specific authentication methods across all registered views.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4710,
  "fields": {
    "question": 942,
    "text": "They provide built-in caching mechanisms for API endpoints.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4711,
  "fields": {
    "question": 943,
    "text": "<code>await</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4712,
  "fields": {
    "question": 943,
    "text": "<code>sync_to_async</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4713,
  "fields": {
    "question": 943,
    "text": "<code>async_to_sync</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4714,
  "fields": {
    "question": 943,
    "text": "<code>mark_async_unsafe</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4715,
  "fields": {
    "question": 943,
    "text": "<code>run_coroutine_threadsafe</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4716,
  "fields": {
    "question": 944,
    "text": "<code>ContextMixin</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4717,
  "fields": {
    "question": 944,
    "text": "<code>TemplateResponseMixin</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4718,
  "fields": {
    "question": 944,
    "text": "<code>MultipleObjectMixin</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4719,
  "fields": {
    "question": 944,
    "text": "<code>FormMixin</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4720,
  "fields": {
    "question": 944,
    "text": "<code>SingleObjectMixin</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4721,
  "fields": {
    "question": 945,
    "text": "Combine all logic into a single, large function or method.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4722,
  "fields": {
    "question": 945,
    "text": "Break down the view logic into smaller, reusable functions, methods, or mixins with clear responsibilities.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4723,
  "fields": {
    "question": 945,
    "text": "Use generic variable names like <code>x</code>, <code>y</code>, <code>data</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4724,
  "fields": {
    "question": 945,
    "text": "Avoid writing unit tests until the refactoring is complete.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4725,
  "fields": {
    "question": 945,
    "text": "Embed raw SQL queries directly within the view logic.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4726,
  "fields": {
    "question": 946,
    "text": "By manually parsing the <code>request.path</code> inside the view.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4727,
  "fields": {
    "question": 946,
    "text": "By defining a single complex regular expression using <code>re_path</code>.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4728,
  "fields": {
    "question": 946,
    "text": "By using multiple <code>path()</code> calls at the same level in <code>urls.py</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4729,
  "fields": {
    "question": 946,
    "text": "By using the <code>include()</code> function to link separate <code>urls.py</code> files for nested resources.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4730,
  "fields": {
    "question": 946,
    "text": "Nested URLs are not supported in Django.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4731,
  "fields": {
    "question": 947,
    "text": "To specify the HTML template to be rendered.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4732,
  "fields": {
    "question": 947,
    "text": "To define the database model associated with the view.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4733,
  "fields": {
    "question": 947,
    "text": "To add common behavior or checks (like authentication) to multiple views without repeating code.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4734,
  "fields": {
    "question": 947,
    "text": "To directly manipulate the HTTP response headers.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4735,
  "fields": {
    "question": 947,
    "text": "To handle asynchronous operations within the view.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4736,
  "fields": {
    "question": 948,
    "text": "Test asynchronous code specifically.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4737,
  "fields": {
    "question": 948,
    "text": "Simulate a full browser interaction including JavaScript execution.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4738,
  "fields": {
    "question": 948,
    "text": "Test the database connection independently.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4739,
  "fields": {
    "question": 948,
    "text": "Unit test a view function by generating a <code>HttpRequest</code> object without going through the full middleware and URL routing stack.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4740,
  "fields": {
    "question": 948,
    "text": "Make actual HTTP requests to external services.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4741,
  "fields": {
    "question": 949,
    "text": "Unit Testing",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4742,
  "fields": {
    "question": 949,
    "text": "Integration Testing",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4743,
  "fields": {
    "question": 949,
    "text": "End-to-End Testing",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4744,
  "fields": {
    "question": 949,
    "text": "Performance Testing",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4745,
  "fields": {
    "question": 949,
    "text": "Acceptance Testing",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4746,
  "fields": {
    "question": 950,
    "text": "By installing a third-party logging application without any Django configuration.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4747,
  "fields": {
    "question": 950,
    "text": "By directly writing to files using Python's built-in <code>open()</code> function within views.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4748,
  "fields": {
    "question": 950,
    "text": "By using <code>print()</code> statements extensively within the view code.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4749,
  "fields": {
    "question": 950,
    "text": "By configuring the <code>LOGGING</code> dictionary in the <code>settings.py</code> file.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4750,
  "fields": {
    "question": 950,
    "text": "Logging is automatically enabled for all events without configuration.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4751,
  "fields": {
    "question": 951,
    "text": "<code>path('articles/&lt;article_id&gt;/', views.article_detail)</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4752,
  "fields": {
    "question": 951,
    "text": "Both 3 and 4 are valid ways (using <code>path</code> and <code>re_path</code> respectively).",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4753,
  "fields": {
    "question": 951,
    "text": "<code>path('articles/&lt;int:article_id&gt;/', views.article_detail)</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4754,
  "fields": {
    "question": 951,
    "text": "<code>path('articles/{int:article_id}/', views.article_detail)</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4755,
  "fields": {
    "question": 951,
    "text": "<code>path('articles/(?P&lt;article_id&gt;[0-9]+)/', views.article_detail)</code> (using <code>re_path</code>)",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4756,
  "fields": {
    "question": 952,
    "text": "To simplify the process of building Web APIs in Django.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4757,
  "fields": {
    "question": 952,
    "text": "To manage static file serving.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4758,
  "fields": {
    "question": 952,
    "text": "To automatically handle user interface design.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4759,
  "fields": {
    "question": 952,
    "text": "To replace Django's template engine with a JavaScript framework.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4760,
  "fields": {
    "question": 952,
    "text": "To provide real-time WebSocket support.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4761,
  "fields": {
    "question": 953,
    "text": "Using Django's <code>prefetch_related</code> and <code>select_related</code> to optimize database queries.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4762,
  "fields": {
    "question": 953,
    "text": "Fetching each piece of data with a separate HTTP request from the browser.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4763,
  "fields": {
    "question": 953,
    "text": "Storing all product details directly in the user's session.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4764,
  "fields": {
    "question": 953,
    "text": "Making multiple synchronous blocking calls to external microservices within the view.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4765,
  "fields": {
    "question": 953,
    "text": "Loading all possible products into memory on application startup.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4766,
  "fields": {
    "question": 954,
    "text": "<code>@sync_only</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4767,
  "fields": {
    "question": 954,
    "text": "<code>run_in_executor</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4768,
  "fields": {
    "question": 954,
    "text": "<code>async_to_sync</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4769,
  "fields": {
    "question": 954,
    "text": "<code>defer_sync</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4770,
  "fields": {
    "question": 954,
    "text": "<code>sync_to_async</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4771,
  "fields": {
    "question": 955,
    "text": "Database query optimization (e.g., using <code>select_related</code>, <code>prefetch_related</code>).",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4772,
  "fields": {
    "question": 955,
    "text": "Writing all view logic directly within the template files.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4773,
  "fields": {
    "question": 955,
    "text": "Using asynchronous views for I/O-bound tasks.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4774,
  "fields": {
    "question": 955,
    "text": "Offloading heavy tasks to background workers (e.g., Celery).",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4775,
  "fields": {
    "question": 955,
    "text": "Caching view responses or template fragments.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4776,
  "fields": {
    "question": 956,
    "text": "To generate a URL path based on a view name and optional parameters, as defined in <code>urls.py</code>.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4777,
  "fields": {
    "question": 956,
    "text": "To reverse the changes made by a database transaction.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4778,
  "fields": {
    "question": 956,
    "text": "To redirect the user back to the previous page they visited.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4779,
  "fields": {
    "question": 956,
    "text": "To invert the boolean value of a variable.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4780,
  "fields": {
    "question": 956,
    "text": "To reverse the order of elements in a list within a view.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4781,
  "fields": {
    "question": 957,
    "text": "<code>FormMixin</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4782,
  "fields": {
    "question": 957,
    "text": "<code>RedirectViewMixin</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4783,
  "fields": {
    "question": 957,
    "text": "<code>ContextMixin</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4784,
  "fields": {
    "question": 957,
    "text": "<code>TemplateResponseMixin</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4785,
  "fields": {
    "question": 957,
    "text": "<code>SingleObjectMixin</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4786,
  "fields": {
    "question": 958,
    "text": "<code>SuspiciousOperation</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4787,
  "fields": {
    "question": 958,
    "text": "<code>Http404</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4788,
  "fields": {
    "question": 958,
    "text": "<code>ServerError</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4789,
  "fields": {
    "question": 958,
    "text": "<code>PermissionDenied</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4790,
  "fields": {
    "question": 958,
    "text": "<code>HttpResponseBadRequest</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4791,
  "fields": {
    "question": 959,
    "text": "<code>process_get(self, request, *args, **kwargs)</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4792,
  "fields": {
    "question": 959,
    "text": "<code>post(self, request, *args, **kwargs)</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4793,
  "fields": {
    "question": 959,
    "text": "<code>get(self, request, *args, **kwargs)</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4794,
  "fields": {
    "question": 959,
    "text": "<code>dispatch(self, request, *args, **kwargs)</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4795,
  "fields": {
    "question": 959,
    "text": "<code>handle_get(self, request, *args, **kwargs)</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4796,
  "fields": {
    "question": 960,
    "text": "Caching should only be implemented as a last resort.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4797,
  "fields": {
    "question": 960,
    "text": "Asynchronous views magically solve all performance issues without code changes.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4798,
  "fields": {
    "question": 960,
    "text": "Using Class-Based Views always guarantees better performance than Function-Based Views.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4799,
  "fields": {
    "question": 960,
    "text": "Database interactions are often the primary bottleneck and require careful optimization (indexing, query optimization).",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4800,
  "fields": {
    "question": 960,
    "text": "Python code execution speed is usually more critical than I/O operations.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4801,
  "fields": {
    "question": 961,
    "text": "Manually set session cookies on the request.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4802,
  "fields": {
    "question": 961,
    "text": "Modify the view code to skip the login check during tests.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4803,
  "fields": {
    "question": 961,
    "text": "Use the <code>client.login(username=&#x27;user&#x27;, password=&#x27;password&#x27;)</code> method after creating a test user.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4804,
  "fields": {
    "question": 961,
    "text": "Use the <code>@skipIf</code> decorator on the test method.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4805,
  "fields": {
    "question": 961,
    "text": "Pass user credentials with every request using HTTP Basic Auth.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4806,
  "fields": {
    "question": 962,
    "text": "<code>process_exception(request, exception)</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4807,
  "fields": {
    "question": 962,
    "text": "<code>process_template_response(request, response)</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4808,
  "fields": {
    "question": 962,
    "text": "<code>__call__(request)</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4809,
  "fields": {
    "question": 962,
    "text": "<code>process_view(request, view_func, view_args, view_kwargs)</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4810,
  "fields": {
    "question": 962,
    "text": "<code>process_request(request)</code> (Deprecated in favor of <code>__call__</code>)",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4811,
  "fields": {
    "question": 963,
    "text": "Avoiding class-based views entirely.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4812,
  "fields": {
    "question": 963,
    "text": "Implementing comprehensive logging, monitoring, and testing from the beginning.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4813,
  "fields": {
    "question": 963,
    "text": "Writing views that handle every possible edge case, regardless of complexity.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4814,
  "fields": {
    "question": 963,
    "text": "Minimizing the use of Django's ORM.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4815,
  "fields": {
    "question": 963,
    "text": "Deploying changes directly to production without staging environments.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4816,
  "fields": {
    "question": 964,
    "text": "<code>ViewSet</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4817,
  "fields": {
    "question": 964,
    "text": "<code>APIView</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4818,
  "fields": {
    "question": 964,
    "text": "<code>ModelViewSet</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4819,
  "fields": {
    "question": 964,
    "text": "<code>ListCreateAPIView</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4820,
  "fields": {
    "question": 964,
    "text": "<code>GenericAPIView</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4821,
  "fields": {
    "question": 965,
    "text": "A WebSocket handler managing long-lived connections.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4822,
  "fields": {
    "question": 965,
    "text": "A view streaming a large file response over the network.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4823,
  "fields": {
    "question": 965,
    "text": "A view that makes multiple slow, independent external API calls.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4824,
  "fields": {
    "question": 965,
    "text": "A view waiting for a slow database query to return.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4825,
  "fields": {
    "question": 965,
    "text": "A view primarily performing CPU-bound calculations (e.g., complex data processing).",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4826,
  "fields": {
    "question": 966,
    "text": "Only log critical errors.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4827,
  "fields": {
    "question": 966,
    "text": "Only log messages to the console.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4828,
  "fields": {
    "question": 966,
    "text": "Automatically fix errors based on log messages.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4829,
  "fields": {
    "question": 966,
    "text": "Log data directly into the database without using models.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4830,
  "fields": {
    "question": 966,
    "text": "Send log messages to various handlers (console, file, external services) based on severity level and logger name.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4831,
  "fields": {
    "question": 967,
    "text": "Implement pagination or infinite scrolling to load data in chunks.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4832,
  "fields": {
    "question": 967,
    "text": "Remove all CSS styling.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4833,
  "fields": {
    "question": 967,
    "text": "Store large datasets in browser localStorage.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4834,
  "fields": {
    "question": 967,
    "text": "Use smaller font sizes in the template.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4835,
  "fields": {
    "question": 967,
    "text": "Load all data synchronously in the initial request.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4836,
  "fields": {
    "question": 968,
    "text": "Clickjacking protection via <code>X-Frame-Options</code> header",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4837,
  "fields": {
    "question": 968,
    "text": "Password hashing",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4838,
  "fields": {
    "question": 968,
    "text": "The CSRF middleware and `{% csrf_token %}` template tag",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4839,
  "fields": {
    "question": 968,
    "text": "HTTPS enforcement",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4840,
  "fields": {
    "question": 968,
    "text": "SQL injection protection in the ORM",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4841,
  "fields": {
    "question": 969,
    "text": "<code>AllowAny</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4842,
  "fields": {
    "question": 969,
    "text": "<code>IsAuthenticatedOrReadOnly</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4843,
  "fields": {
    "question": 969,
    "text": "<code>IsAuthenticated</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4844,
  "fields": {
    "question": 969,
    "text": "<code>DjangoModelPermissions</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4845,
  "fields": {
    "question": 969,
    "text": "<code>IsAdminUser</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4846,
  "fields": {
    "question": 970,
    "text": "It renders the template associated with the view.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4847,
  "fields": {
    "question": 970,
    "text": "It performs database queries for the view.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4848,
  "fields": {
    "question": 970,
    "text": "It validates the incoming HTTP request method.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4849,
  "fields": {
    "question": 970,
    "text": "It registers the view with the Django admin site.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4850,
  "fields": {
    "question": 970,
    "text": "It creates an instance of the view and calls its <code>dispatch</code> method. It returns a callable function suitable for use in <code>urls.py</code>.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4851,
  "fields": {
    "question": 971,
    "text": "<code>post()</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4852,
  "fields": {
    "question": 971,
    "text": "<code>get_template_names()</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4853,
  "fields": {
    "question": 971,
    "text": "<code>get_context_data(**kwargs)</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4854,
  "fields": {
    "question": 971,
    "text": "<code>get_object()</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4855,
  "fields": {
    "question": 971,
    "text": "<code>get_queryset()</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4856,
  "fields": {
    "question": 972,
    "text": "<code>self.assertRedirects(response, &#x27;/expected/url/&#x27;)</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4857,
  "fields": {
    "question": 972,
    "text": "<code>self.assertContains(response, &quot;Expected Text&quot;)</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4858,
  "fields": {
    "question": 972,
    "text": "<code>self.assertTrue(isinstance(response.context[&#x27;my_var&#x27;], MyModel))</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4859,
  "fields": {
    "question": 972,
    "text": "<code>self.assertTemplateUsed(response, &#x27;myapp/my_template.html&#x27;)</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4860,
  "fields": {
    "question": 972,
    "text": "<code>self.assertEqual(response.status_code, 200)</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4861,
  "fields": {
    "question": 973,
    "text": "To handle user authentication and permissions.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4862,
  "fields": {
    "question": 973,
    "text": "To manage database connections for API requests.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4863,
  "fields": {
    "question": 973,
    "text": "To define URL routing patterns for API endpoints.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4864,
  "fields": {
    "question": 973,
    "text": "To apply caching strategies to API responses.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4865,
  "fields": {
    "question": 973,
    "text": "To convert complex data types (like Django models) into native Python datatypes that can be easily rendered into JSON or XML, and vice versa.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4866,
  "fields": {
    "question": 974,
    "text": "<code>LiveServerTestCase</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4867,
  "fields": {
    "question": 974,
    "text": "<code>SimpleTestCase</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4868,
  "fields": {
    "question": 974,
    "text": "<code>RequestFactory</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4869,
  "fields": {
    "question": 974,
    "text": "<code>Client</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4870,
  "fields": {
    "question": 974,
    "text": "<code>TestCase</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4871,
  "fields": {
    "question": 975,
    "text": "<code>Form</code> is deprecated in favor of <code>ModelForm</code>.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4872,
  "fields": {
    "question": 975,
    "text": "<code>Form</code> includes built-in validation, while <code>ModelForm</code> does not.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4873,
  "fields": {
    "question": 975,
    "text": "<code>ModelForm</code> automatically generates fields based on a Django model, while <code>Form</code> requires manual field definition.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4874,
  "fields": {
    "question": 975,
    "text": "<code>Form</code> is used for GET requests, <code>ModelForm</code> for POST requests.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4875,
  "fields": {
    "question": 975,
    "text": "<code>ModelForm</code> can only be rendered using <code>as_table</code>, while <code>Form</code> can use <code>as_p</code>.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4876,
  "fields": {
    "question": 976,
    "text": "<code>request.FILES</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4877,
  "fields": {
    "question": 976,
    "text": "<code>form.cleaned_data</code> (contains the file object after validation)",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4878,
  "fields": {
    "question": 976,
    "text": "Both 2 and 4 are relevant.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4879,
  "fields": {
    "question": 976,
    "text": "<code>request.GET</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4880,
  "fields": {
    "question": 976,
    "text": "<code>request.POST</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4881,
  "fields": {
    "question": 977,
    "text": "<code>django.test.Client</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4882,
  "fields": {
    "question": 977,
    "text": "The browser's developer console",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4883,
  "fields": {
    "question": 977,
    "text": "The Django Debug Toolbar",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4884,
  "fields": {
    "question": 977,
    "text": "<code>django.test.TestCase</code> or <code>unittest.TestCase</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4885,
  "fields": {
    "question": 977,
    "text": "Selenium WebDriver",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4886,
  "fields": {
    "question": 978,
    "text": "<code>enctype=\"multipart/form-data\"</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4887,
  "fields": {
    "question": 978,
    "text": "<code>enctype=\"text/plain\"</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4888,
  "fields": {
    "question": 978,
    "text": "<code>enctype=\"application/octet-stream\"</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4889,
  "fields": {
    "question": 978,
    "text": "<code>enctype=\"application/x-www-form-urlencoded\"</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4890,
  "fields": {
    "question": 978,
    "text": "<code>enctype=\"application/json\"</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4891,
  "fields": {
    "question": 979,
    "text": "Using the <code>include = [...]</code> attribute.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4892,
  "fields": {
    "question": 979,
    "text": "Using the <code>fields = [...]</code> attribute or <code>fields = &#x27;__all__&#x27;</code>.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4893,
  "fields": {
    "question": 979,
    "text": "By defining corresponding attributes directly in the <code>Meta</code> class.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4894,
  "fields": {
    "question": 979,
    "text": "Using the <code>render_fields = [...]</code> attribute.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4895,
  "fields": {
    "question": 979,
    "text": "Using the <code>select_fields = [...]</code> attribute.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4896,
  "fields": {
    "question": 980,
    "text": "To manage user authentication and sessions.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4897,
  "fields": {
    "question": 980,
    "text": "To render static HTML content.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4898,
  "fields": {
    "question": 980,
    "text": "To directly interact with the database schema.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4899,
  "fields": {
    "question": 980,
    "text": "To define the URL routing for the application.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4900,
  "fields": {
    "question": 980,
    "text": "To collect, validate, and process user input.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4901,
  "fields": {
    "question": 981,
    "text": "To perform validation that involves multiple form fields simultaneously.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4902,
  "fields": {
    "question": 981,
    "text": "To provide initial data for the form fields.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4903,
  "fields": {
    "question": 981,
    "text": "To render the form's HTML representation.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4904,
  "fields": {
    "question": 981,
    "text": "To define the widgets used for each form field.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4905,
  "fields": {
    "question": 981,
    "text": "To sanitize input data against SQL injection attacks.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4906,
  "fields": {
    "question": 982,
    "text": "Both 2 and 3 are valid ways.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4907,
  "fields": {
    "question": 982,
    "text": "Define a method named <code>clean_my_field(self)</code> which returns the cleaned value or raises <code>ValidationError</code>.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4908,
  "fields": {
    "question": 982,
    "text": "Pass a validator function to the <code>validators</code> argument of the field definition.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4909,
  "fields": {
    "question": 982,
    "text": "Define a method named <code>validate_my_field(self, value)</code>.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4910,
  "fields": {
    "question": 982,
    "text": "Override the form's <code>is_valid()</code> method.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4911,
  "fields": {
    "question": 983,
    "text": "Automatic database table creation.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4912,
  "fields": {
    "question": 983,
    "text": "Built-in support for real-time communication via WebSockets.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4913,
  "fields": {
    "question": 983,
    "text": "Simplified front-end JavaScript framework integration.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4914,
  "fields": {
    "question": 983,
    "text": "Automation of security concerns like Cross-Site Request Forgery (CSRF).",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4915,
  "fields": {
    "question": 983,
    "text": "Direct integration with NoSQL databases.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4916,
  "fields": {
    "question": 984,
    "text": "<code>forms.EmailField()</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4917,
  "fields": {
    "question": 984,
    "text": "<code>forms.SlugField()</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4918,
  "fields": {
    "question": 984,
    "text": "<code>forms.RegexField(regex='email_pattern')</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4919,
  "fields": {
    "question": 984,
    "text": "<code>forms.CharField(widget=forms.EmailInput)</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4920,
  "fields": {
    "question": 984,
    "text": "<code>forms.URLField()</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4921,
  "fields": {
    "question": 985,
    "text": "By calling <code>form.validate()</code> and catching exceptions.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4922,
  "fields": {
    "question": 985,
    "text": "By checking <code>if form.valid:</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4923,
  "fields": {
    "question": 985,
    "text": "By checking <code>if request.POST:</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4924,
  "fields": {
    "question": 985,
    "text": "By manually iterating through <code>request.POST</code> items.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4925,
  "fields": {
    "question": 985,
    "text": "By calling <code>form.is_valid()</code> after instantiating the form with request data.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4926,
  "fields": {
    "question": 986,
    "text": "<code>{{ form.as_paragraphs }}</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4927,
  "fields": {
    "question": 986,
    "text": "<code>{% render_form form p %}</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4928,
  "fields": {
    "question": 986,
    "text": "<code>{{ form.render_p }}</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4929,
  "fields": {
    "question": 986,
    "text": "<code>{% include \"form_p.html\" with form=form %}</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4930,
  "fields": {
    "question": 986,
    "text": "<code>{{ form.as_p }}</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4931,
  "fields": {
    "question": 987,
    "text": "<code>form.render('ul')</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4932,
  "fields": {
    "question": 987,
    "text": "<code>form.list_fields()</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4933,
  "fields": {
    "question": 987,
    "text": "<code>form.as_list()</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4934,
  "fields": {
    "question": 987,
    "text": "<code>form.as_li()</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4935,
  "fields": {
    "question": 987,
    "text": "<code>form.as_ul()</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4936,
  "fields": {
    "question": 988,
    "text": "By passing the model class as the first argument to the <code>ModelForm</code> constructor.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4937,
  "fields": {
    "question": 988,
    "text": "By using a decorator <code>@modelform_for(MyModel)</code> on the form class.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4938,
  "fields": {
    "question": 988,
    "text": "By defining an inner <code>Meta</code> class within the <code>ModelForm</code> and setting its <code>model</code> attribute.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4939,
  "fields": {
    "question": 988,
    "text": "By setting <code>model = MyModel</code> as a class attribute directly within the <code>ModelForm</code>.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4940,
  "fields": {
    "question": 988,
    "text": "It's inferred automatically from the form's name.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4941,
  "fields": {
    "question": 989,
    "text": "The field's <code>__init__</code> method.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4942,
  "fields": {
    "question": 989,
    "text": "The field's <code>validate()</code> method.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4943,
  "fields": {
    "question": 989,
    "text": "The field's <code>to_python()</code> method.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4944,
  "fields": {
    "question": 989,
    "text": "The form's <code>clean()</code> method.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4945,
  "fields": {
    "question": 989,
    "text": "The field's <code>clean()</code> method.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4946,
  "fields": {
    "question": 990,
    "text": "<code>{% render_field form.my_field %}</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4947,
  "fields": {
    "question": 990,
    "text": "<code>&lt;field form=form field_name=\"my_field\"&gt;</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4948,
  "fields": {
    "question": 990,
    "text": "<code>{{ form.fields.my_field.render() }}</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4949,
  "fields": {
    "question": 990,
    "text": "<code>&lt;input type=\"text\" value=\"{{ form.my_field.value }}\"&gt;</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4950,
  "fields": {
    "question": 990,
    "text": "<code>{{ form.my_field.label_tag }} {{ form.my_field }}</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4951,
  "fields": {
    "question": 991,
    "text": "django-allauth",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4952,
  "fields": {
    "question": 991,
    "text": "django-widget-tweaks",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4953,
  "fields": {
    "question": 991,
    "text": "django-forms-bootstrap",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4954,
  "fields": {
    "question": 991,
    "text": "django-floppyforms",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4955,
  "fields": {
    "question": 991,
    "text": "django-crispy-forms",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4956,
  "fields": {
    "question": 992,
    "text": "It guides the user on how to correct invalid input, reducing frustration.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4957,
  "fields": {
    "question": 992,
    "text": "It allows bypassing server-side validation.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4958,
  "fields": {
    "question": 992,
    "text": "It helps search engines index the form content better.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4959,
  "fields": {
    "question": 992,
    "text": "It makes the form look more professional.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4960,
  "fields": {
    "question": 992,
    "text": "It satisfies WCAG accessibility requirements for color contrast.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4961,
  "fields": {
    "question": 993,
    "text": "By using the <code>create_form()</code> utility function.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4962,
  "fields": {
    "question": 993,
    "text": "By creating a function that returns a dictionary of fields.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4963,
  "fields": {
    "question": 993,
    "text": "By creating a class that inherits from <code>django.forms.Form</code> and defining fields as class attributes.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4964,
  "fields": {
    "question": 993,
    "text": "By defining fields directly within the Django settings file.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4965,
  "fields": {
    "question": 993,
    "text": "By inheriting from <code>django.db.models.Model</code>.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4966,
  "fields": {
    "question": 994,
    "text": "Instantiate the form with a dictionary of valid data and assert that <code>form.is_valid()</code> returns <code>True</code>.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4967,
  "fields": {
    "question": 994,
    "text": "Mock the database and check if <code>form.save()</code> works.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4968,
  "fields": {
    "question": 994,
    "text": "Check the rendered HTML output for error messages.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4969,
  "fields": {
    "question": 994,
    "text": "Call the form's <code>clean()</code> method directly and check for exceptions.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4970,
  "fields": {
    "question": 994,
    "text": "Use <code>django.test.Client</code> to simulate a POST request.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4971,
  "fields": {
    "question": 995,
    "text": "In the <code>settings.py</code> file.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4972,
  "fields": {
    "question": 995,
    "text": "In the form's <code>__init__()</code> method, modifying <code>self.fields[&#x27;my_choice_field&#x27;].choices</code>.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4973,
  "fields": {
    "question": 995,
    "text": "In the model definition associated with the form.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4974,
  "fields": {
    "question": 995,
    "text": "In the form's <code>clean()</code> method.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4975,
  "fields": {
    "question": 995,
    "text": "Directly in the Django template using JavaScript.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4976,
  "fields": {
    "question": 996,
    "text": "To encrypt the form data before submission.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4977,
  "fields": {
    "question": 996,
    "text": "To add a timestamp to the form submission.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4978,
  "fields": {
    "question": 996,
    "text": "To link the form to a specific user session.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4979,
  "fields": {
    "question": 996,
    "text": "To include a hidden input field with a token that protects against Cross-Site Request Forgery (CSRF) attacks.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4980,
  "fields": {
    "question": 996,
    "text": "To prevent Cross-Site Scripting (XSS) attacks.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4981,
  "fields": {
    "question": 997,
    "text": "By rendering the initial form HTML on the client side.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4982,
  "fields": {
    "question": 997,
    "text": "By directly manipulating the Python form class code in the browser.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4983,
  "fields": {
    "question": 997,
    "text": "By automatically submitting the form every few seconds.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4984,
  "fields": {
    "question": 997,
    "text": "By replacing Django's server-side validation entirely.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4985,
  "fields": {
    "question": 997,
    "text": "By providing real-time client-side validation feedback before submission.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4986,
  "fields": {
    "question": 998,
    "text": "To dynamically add or remove fields from a single form.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4987,
  "fields": {
    "question": 998,
    "text": "To handle asynchronous form submissions using AJAX.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4988,
  "fields": {
    "question": 998,
    "text": "To manage and validate multiple instances of the same form on one page.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4989,
  "fields": {
    "question": 998,
    "text": "To group unrelated forms together in a single view.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4990,
  "fields": {
    "question": 998,
    "text": "To create forms that span multiple steps or pages (wizards).",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4991,
  "fields": {
    "question": 999,
    "text": "It handles the saving of form data to the database.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4992,
  "fields": {
    "question": 999,
    "text": "It is a JavaScript component for client-side interactions.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4993,
  "fields": {
    "question": 999,
    "text": "It defines the data type of the form field (e.g., integer, string).",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4994,
  "fields": {
    "question": 999,
    "text": "It performs server-side validation logic.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4995,
  "fields": {
    "question": 999,
    "text": "It represents the HTML input element for a form field.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4996,
  "fields": {
    "question": 1000,
    "text": "By subclassing the field and overriding its <code>render</code> method.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4997,
  "fields": {
    "question": 1000,
    "text": "By setting <code>field.widget_type = &#x27;Textarea&#x27;</code> in the view.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4998,
  "fields": {
    "question": 1000,
    "text": "By adding a <code>widget</code> attribute to the field in the HTML template.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 4999,
  "fields": {
    "question": 1000,
    "text": "By creating a custom template filter named <code>use_widget</code>.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5000,
  "fields": {
    "question": 1000,
    "text": "By passing the desired widget class to the <code>widget</code> argument of the form field definition. e.g., <code>forms.CharField(widget=forms.Textarea)</code>.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5001,
  "fields": {
    "question": 1001,
    "text": "<code>{% if form.subject.has_error %} Error! {% endif %}</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5002,
  "fields": {
    "question": 1001,
    "text": "<code>{{ errors.subject }}</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5003,
  "fields": {
    "question": 1001,
    "text": "<code>{{ form.errors.subject }}</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5004,
  "fields": {
    "question": 1001,
    "text": "<code>{{ form.get_error('subject') }}</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5005,
  "fields": {
    "question": 1001,
    "text": "<code>{{ form.subject.validation_error }}</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5006,
  "fields": {
    "question": 1002,
    "text": "The <code>django-extensions</code> package's <code>shell_plus</code>.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5007,
  "fields": {
    "question": 1002,
    "text": "The Django administration interface.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5008,
  "fields": {
    "question": 1002,
    "text": "Python's built-in debugger (pdb).",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5009,
  "fields": {
    "question": 1002,
    "text": "The browser's developer tools (specifically the Network tab).",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5010,
  "fields": {
    "question": 1002,
    "text": "Running Django's <code>check</code> management command.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5011,
  "fields": {
    "question": 1003,
    "text": "In the project's main <code>settings.py</code> file.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5012,
  "fields": {
    "question": 1003,
    "text": "In a dedicated <code>forms.py</code> file within the application's directory.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5013,
  "fields": {
    "question": 1003,
    "text": "Directly inside the <code>views.py</code> file where the form is used.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5014,
  "fields": {
    "question": 1003,
    "text": "Within the <code>models.py</code> file alongside the related model.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5015,
  "fields": {
    "question": 1003,
    "text": "In a separate <code>validators.py</code> file.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5016,
  "fields": {
    "question": 1004,
    "text": "It integrates directly with front-end frameworks like React or Vue.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5017,
  "fields": {
    "question": 1004,
    "text": "It automatically creates form fields corresponding to model fields, reducing redundant code.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5018,
  "fields": {
    "question": 1004,
    "text": "It provides better security features out-of-the-box.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5019,
  "fields": {
    "question": 1004,
    "text": "It allows for more complex custom validation logic.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5020,
  "fields": {
    "question": 1004,
    "text": "It bypasses the need for CSRF protection.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5021,
  "fields": {
    "question": 1005,
    "text": "It saves the form data to a temporary file instead of the database.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5022,
  "fields": {
    "question": 1005,
    "text": "It performs validation but does not save the data.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5023,
  "fields": {
    "question": 1005,
    "text": "It raises a <code>CommitFalseError</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5024,
  "fields": {
    "question": 1005,
    "text": "It deletes the corresponding model instance from the database.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5025,
  "fields": {
    "question": 1005,
    "text": "It creates a model instance from the form data but does not yet save it to the database, allowing modification before saving.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5026,
  "fields": {
    "question": 1006,
    "text": "Using the <code>|safe</code> filter on the variable.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5027,
  "fields": {
    "question": 1006,
    "text": "Using the <code>escape='off'</code> attribute on a variable.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5028,
  "fields": {
    "question": 1006,
    "text": "Using the <code>{% noescape %} ... {% endnoescape %}</code> tags.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5029,
  "fields": {
    "question": 1006,
    "text": "Using the <code>{% raw %} ... {% endraw %}</code> tags.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5030,
  "fields": {
    "question": 1006,
    "text": "Using the <code>{% autoescape off %} ... {% endautoescape %}</code> tags.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5031,
  "fields": {
    "question": 1007,
    "text": "<code>|safe</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5032,
  "fields": {
    "question": 1007,
    "text": "<code>|raw</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5033,
  "fields": {
    "question": 1007,
    "text": "<code>|noescape</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5034,
  "fields": {
    "question": 1007,
    "text": "<code>|escapeoff</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5035,
  "fields": {
    "question": 1007,
    "text": "<code>|render_html</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5036,
  "fields": {
    "question": 1008,
    "text": "It is prepended to the child block's content.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5037,
  "fields": {
    "question": 1008,
    "text": "It is appended to the child block's content.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5038,
  "fields": {
    "question": 1008,
    "text": "It causes a template rendering error.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5039,
  "fields": {
    "question": 1008,
    "text": "It is ignored, and only the child block's content is rendered.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5040,
  "fields": {
    "question": 1008,
    "text": "It is completely replaced by the child block's content.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5041,
  "fields": {
    "question": 1009,
    "text": "A utility for validating the data passed to templates.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5042,
  "fields": {
    "question": 1009,
    "text": "A Python function that takes an HttpRequest object and returns a dictionary to be added to the template context for all requests.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5043,
  "fields": {
    "question": 1009,
    "text": "A function that preprocesses template syntax before rendering.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5044,
  "fields": {
    "question": 1009,
    "text": "A middleware component for handling template exceptions.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5045,
  "fields": {
    "question": 1009,
    "text": "A custom template tag for processing context variables.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5046,
  "fields": {
    "question": 1010,
    "text": "<code>|format_date</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5047,
  "fields": {
    "question": 1010,
    "text": "<code>|strftime</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5048,
  "fields": {
    "question": 1010,
    "text": "<code>|datetime</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5049,
  "fields": {
    "question": 1010,
    "text": "<code>|date</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5050,
  "fields": {
    "question": 1010,
    "text": "<code>|datefmt</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5051,
  "fields": {
    "question": 1011,
    "text": "<code>templatetags/</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5052,
  "fields": {
    "question": 1011,
    "text": "<code>customtags/</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5053,
  "fields": {
    "question": 1011,
    "text": "<code>filters/</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5054,
  "fields": {
    "question": 1011,
    "text": "<code>static/</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5055,
  "fields": {
    "question": 1011,
    "text": "<code>templates/</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5056,
  "fields": {
    "question": 1012,
    "text": "Django Template Language (DTL)",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5057,
  "fields": {
    "question": 1012,
    "text": "Mako",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5058,
  "fields": {
    "question": 1012,
    "text": "Jinja2",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5059,
  "fields": {
    "question": 1012,
    "text": "Mustache",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5060,
  "fields": {
    "question": 1012,
    "text": "Handlebars",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5061,
  "fields": {
    "question": 1013,
    "text": "<code>{% route %}</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5062,
  "fields": {
    "question": 1013,
    "text": "<code>{% path %}</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5063,
  "fields": {
    "question": 1013,
    "text": "<code>{% href %}</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5064,
  "fields": {
    "question": 1013,
    "text": "<code>{% url %}</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5065,
  "fields": {
    "question": 1013,
    "text": "<code>{% link %}</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5066,
  "fields": {
    "question": 1014,
    "text": "<code>{% iterate item over my_list %}</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5067,
  "fields": {
    "question": 1014,
    "text": "<code>{% loop item in my_list %}</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5068,
  "fields": {
    "question": 1014,
    "text": "<code>{% for item in my_list %}</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5069,
  "fields": {
    "question": 1014,
    "text": "<code>{% while item in my_list %}</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5070,
  "fields": {
    "question": 1014,
    "text": "<code>{% foreach item in my_list %}</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5071,
  "fields": {
    "question": 1015,
    "text": "<code>{% filter lower my_var %}</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5072,
  "fields": {
    "question": 1015,
    "text": "<code>{{ lower(my_var) }}</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5073,
  "fields": {
    "question": 1015,
    "text": "<code>{{ my_var lower }}</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5074,
  "fields": {
    "question": 1015,
    "text": "<code>{{ my_var.lower }}</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5075,
  "fields": {
    "question": 1015,
    "text": "<code>{{ my_var|lower }}</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5076,
  "fields": {
    "question": 1016,
    "text": "Using square brackets: <code>[variable_name]</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5077,
  "fields": {
    "question": 1016,
    "text": "Using parentheses: <code>(variable_name)</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5078,
  "fields": {
    "question": 1016,
    "text": "Using double curly braces: <code>{{ variable_name }}</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5079,
  "fields": {
    "question": 1016,
    "text": "Using single curly braces: <code>{variable_name}</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5080,
  "fields": {
    "question": 1016,
    "text": "Using angle brackets: <code>&lt;variable_name&gt;</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5081,
  "fields": {
    "question": 1017,
    "text": "<code>[[ tag_name ]]</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5082,
  "fields": {
    "question": 1017,
    "text": "<code>{# tag_name #}</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5083,
  "fields": {
    "question": 1017,
    "text": "<code>(( tag_name ))</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5084,
  "fields": {
    "question": 1017,
    "text": "<code>{% tag_name %}</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5085,
  "fields": {
    "question": 1017,
    "text": "<code>{{ tag_name }}</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5086,
  "fields": {
    "question": 1018,
    "text": "Generating the user interface and presenting data.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5087,
  "fields": {
    "question": 1018,
    "text": "Processing user requests and returning responses.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5088,
  "fields": {
    "question": 1018,
    "text": "Defining the data structure and relationships.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5089,
  "fields": {
    "question": 1018,
    "text": "Handling database interactions and data logic.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5090,
  "fields": {
    "question": 1018,
    "text": "Managing URL routing and dispatching views.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5091,
  "fields": {
    "question": 1019,
    "text": "Use deeply nested <code>{% include %}</code> tags, spanning many levels.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5092,
  "fields": {
    "question": 1019,
    "text": "Write very long template files instead of breaking them down.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5093,
  "fields": {
    "question": 1019,
    "text": "Put as much logic as possible into the template using custom tags.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5094,
  "fields": {
    "question": 1019,
    "text": "Keep templates focused on presentation; minimize complex logic within them.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5095,
  "fields": {
    "question": 1019,
    "text": "Avoid using template inheritance to keep each template self-contained.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5096,
  "fields": {
    "question": 1020,
    "text": "To automatically fix template syntax errors.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5097,
  "fields": {
    "question": 1020,
    "text": "To manage user authentication during development.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5098,
  "fields": {
    "question": 1020,
    "text": "To replace the standard Django administration interface.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5099,
  "fields": {
    "question": 1020,
    "text": "To test database migrations.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5100,
  "fields": {
    "question": 1020,
    "text": "To provide a set of panels displaying debug information about the current request/response, including template context and rendering times.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5101,
  "fields": {
    "question": 1021,
    "text": "<code>{% include %}</code> must be the first tag, while <code>{% extends %}</code> can be anywhere.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5102,
  "fields": {
    "question": 1021,
    "text": "<code>{% include %}</code> requires a context variable, while <code>{% extends %}</code> does not.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5103,
  "fields": {
    "question": 1021,
    "text": "<code>{% extends %}</code> defines replaceable blocks, while <code>{% include %}</code> inserts content directly.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5104,
  "fields": {
    "question": 1021,
    "text": "There is no significant difference; they are interchangeable.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5105,
  "fields": {
    "question": 1021,
    "text": "<code>{% extends %}</code> is for inheriting Python classes, while <code>{% include %}</code> is for templates.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5106,
  "fields": {
    "question": 1022,
    "text": "<code>{% render 'partial.html' %}</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5107,
  "fields": {
    "question": 1022,
    "text": "<code>{% insert 'partial.html' %}</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5108,
  "fields": {
    "question": 1022,
    "text": "<code>{% extends 'partial.html' %}</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5109,
  "fields": {
    "question": 1022,
    "text": "<code>{% load 'partial.html' %}</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5110,
  "fields": {
    "question": 1022,
    "text": "<code>{% include 'partial.html' %}</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5111,
  "fields": {
    "question": 1023,
    "text": "They enforce a strict structure for all templates.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5112,
  "fields": {
    "question": 1023,
    "text": "They allow adding common data to the context of every template without explicitly passing it in each view.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5113,
  "fields": {
    "question": 1023,
    "text": "They optimize database queries made from templates.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5114,
  "fields": {
    "question": 1023,
    "text": "They provide a way to write Python logic within templates.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5115,
  "fields": {
    "question": 1023,
    "text": "They automatically generate HTML forms based on models.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5116,
  "fields": {
    "question": 1024,
    "text": "By configuring them in <code>urls.py</code>.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5117,
  "fields": {
    "question": 1024,
    "text": "Using the <code>{% import %}</code> template tag.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5118,
  "fields": {
    "question": 1024,
    "text": "They are automatically available if placed in the correct directory.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5119,
  "fields": {
    "question": 1024,
    "text": "Using the <code>{% load %}</code> template tag.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5120,
  "fields": {
    "question": 1024,
    "text": "By adding them to the <code>INSTALLED_APPS</code> setting.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5121,
  "fields": {
    "question": 1025,
    "text": "<code>@register.simple_tag</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5122,
  "fields": {
    "question": 1025,
    "text": "<code>@register.block_tag</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5123,
  "fields": {
    "question": 1025,
    "text": "<code>@register.filter</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5124,
  "fields": {
    "question": 1025,
    "text": "<code>@register.inclusion_tag</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5125,
  "fields": {
    "question": 1025,
    "text": "<code>@register.custom_tag</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5126,
  "fields": {
    "question": 1026,
    "text": "Implementing template fragment caching.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5127,
  "fields": {
    "question": 1026,
    "text": "Using more complex custom template tags.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5128,
  "fields": {
    "question": 1026,
    "text": "Increasing the number of variables passed in the context.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5129,
  "fields": {
    "question": 1026,
    "text": "Embedding inline styles instead of using external CSS.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5130,
  "fields": {
    "question": 1026,
    "text": "Avoiding the use of context processors.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5131,
  "fields": {
    "question": 1027,
    "text": "Pass only the necessary data required by the template, keeping the context lean.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5132,
  "fields": {
    "question": 1027,
    "text": "Include large, complex objects directly in the context even if only a few attributes are needed.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5133,
  "fields": {
    "question": 1027,
    "text": "Use very short, abbreviated variable names to save typing.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5134,
  "fields": {
    "question": 1027,
    "text": "Mix presentation logic heavily within the context dictionary creation.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5135,
  "fields": {
    "question": 1027,
    "text": "Pass dozens of individual variables to keep things simple.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5136,
  "fields": {
    "question": 1028,
    "text": "\n        <pre><code class=\"language-django\">\n{% if user.is_authenticated %}\n  Welcome, {{ user.username }}\n{% else %}\n  Please log in.\n{% endif %}</code></pre>\n      ",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5137,
  "fields": {
    "question": 1028,
    "text": "\n        <pre><code class=\"language-django\">\n{{ if user.is_authenticated }}\n  Welcome, {{ user.username }}\n{{ else }}\n  Please log in.\n{{ endif }}</code></pre>\n      ",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5138,
  "fields": {
    "question": 1028,
    "text": "\n        <pre><code class=\"language-django\">\n&lt;if condition=\"user.is_authenticated\"&gt;\n  Welcome, {{ user.username }}\n&lt;else&gt;\n  Please log in.\n&lt;/if&gt;</code></pre>\n      ",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5139,
  "fields": {
    "question": 1028,
    "text": "\n        <pre><code class=\"language-django\">\n(if user.is_authenticated)\n  Welcome, {{ user.username }}\n(else)\n  Please log in.\n(endif)</code></pre>\n      ",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5140,
  "fields": {
    "question": 1028,
    "text": "\n        <pre><code class=\"language-django\">\n{% check user.is_authenticated %}\n  Welcome, {{ user.username }}\n{% otherwise %}\n  Please log in.\n{% endcheck %}</code></pre>\n      ",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5141,
  "fields": {
    "question": 1029,
    "text": "Ignore the error and attempt to render the rest of the page.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5142,
  "fields": {
    "question": 1029,
    "text": "Show a user-friendly error page (e.g., 500.html) and log the detailed error for administrators.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5143,
  "fields": {
    "question": 1029,
    "text": "Redirect the user to a random page.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5144,
  "fields": {
    "question": 1029,
    "text": "Display the full traceback to the end-user.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5145,
  "fields": {
    "question": 1029,
    "text": "Crash the web server process.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5146,
  "fields": {
    "question": 1030,
    "text": "To cache database query results.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5147,
  "fields": {
    "question": 1030,
    "text": "To enable browser-side caching of template assets.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5148,
  "fields": {
    "question": 1030,
    "text": "To pre-compile templates into Python bytecode.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5149,
  "fields": {
    "question": 1030,
    "text": "To cache specific fragments of a template for a given duration and vary parameters.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5150,
  "fields": {
    "question": 1030,
    "text": "To cache the entire HTTP response.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5151,
  "fields": {
    "question": 1031,
    "text": "Nothing, it must be an empty file.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5152,
  "fields": {
    "question": 1031,
    "text": "A list of all custom tags.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5153,
  "fields": {
    "question": 1031,
    "text": "Import statements for all model classes.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5154,
  "fields": {
    "question": 1031,
    "text": "The Django version information.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5155,
  "fields": {
    "question": 1031,
    "text": "The <code>register = template.Library()</code> instance.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5156,
  "fields": {
    "question": 1032,
    "text": "<code>ERROR_REPORTING</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5157,
  "fields": {
    "question": 1032,
    "text": "<code>DEBUG</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5158,
  "fields": {
    "question": 1032,
    "text": "<code>DEVELOPMENT_MODE</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5159,
  "fields": {
    "question": 1032,
    "text": "<code>SHOW_ERRORS</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5160,
  "fields": {
    "question": 1032,
    "text": "<code>TEMPLATE_DEBUG</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5161,
  "fields": {
    "question": 1033,
    "text": "Within custom template tags specifically designed for each library.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5162,
  "fields": {
    "question": 1033,
    "text": "Directly within the Django view functions.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5163,
  "fields": {
    "question": 1033,
    "text": "Inline within the main content block of each child template.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5164,
  "fields": {
    "question": 1033,
    "text": "In the `` for CSS and just before the closing `` tag for JavaScript, typically within the base template.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5165,
  "fields": {
    "question": 1033,
    "text": "Inside `{% comment %}` blocks to avoid rendering.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5166,
  "fields": {
    "question": 1034,
    "text": "<code>{% include 'base.html' %}</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5167,
  "fields": {
    "question": 1034,
    "text": "<code>{% extends 'base.html' %}</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5168,
  "fields": {
    "question": 1034,
    "text": "<code>{% parent 'base.html' %}</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5169,
  "fields": {
    "question": 1034,
    "text": "<code>{% inherit 'base.html' %}</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5170,
  "fields": {
    "question": 1034,
    "text": "<code>{% block 'base.html' %}</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5171,
  "fields": {
    "question": 1035,
    "text": "Using HTTP session variables exclusively.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5172,
  "fields": {
    "question": 1035,
    "text": "Embedding the data directly within the template file using Python code.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5173,
  "fields": {
    "question": 1035,
    "text": "By setting global variables in settings.py.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5174,
  "fields": {
    "question": 1035,
    "text": "Storing data in cookies and reading them in the template.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5175,
  "fields": {
    "question": 1035,
    "text": "By passing a dictionary (context) as an argument to the render function.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5176,
  "fields": {
    "question": 1036,
    "text": "To execute complex Python functions.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5177,
  "fields": {
    "question": 1036,
    "text": "To include other templates.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5178,
  "fields": {
    "question": 1036,
    "text": "To define the structure of the template.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5179,
  "fields": {
    "question": 1036,
    "text": "To control the flow of logic like loops and conditionals.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5180,
  "fields": {
    "question": 1036,
    "text": "To modify the display of variables.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5181,
  "fields": {
    "question": 1037,
    "text": "To automatically generate CSS styles based on template structure.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5182,
  "fields": {
    "question": 1037,
    "text": "To embed Python code directly into templates.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5183,
  "fields": {
    "question": 1037,
    "text": "To pass complex data structures from views to templates.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5184,
  "fields": {
    "question": 1037,
    "text": "To speed up template rendering by pre-compiling templates.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5185,
  "fields": {
    "question": 1037,
    "text": "To create reusable base templates and override specific sections in child templates (DRY principle).",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5186,
  "fields": {
    "question": 1038,
    "text": "<code>{% asset %}</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5187,
  "fields": {
    "question": 1038,
    "text": "<code>{% url %}</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5188,
  "fields": {
    "question": 1038,
    "text": "<code>{% file %}</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5189,
  "fields": {
    "question": 1038,
    "text": "<code>{% media %}</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5190,
  "fields": {
    "question": 1038,
    "text": "<code>{% static %}</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5191,
  "fields": {
    "question": 1039,
    "text": "Serving completely different templates based on the user agent string.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5192,
  "fields": {
    "question": 1039,
    "text": "Designing primarily for desktop users and ignoring mobile.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5193,
  "fields": {
    "question": 1039,
    "text": "Embedding all styles directly into HTML elements using the <code>style</code> attribute.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5194,
  "fields": {
    "question": 1039,
    "text": "Employing fluid grids, flexible images, and media queries to adapt the layout to different screen sizes.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5195,
  "fields": {
    "question": 1039,
    "text": "Using fixed-width layouts for all screen sizes.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5196,
  "fields": {
    "question": 1040,
    "text": "To bypass the need for context processors.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5197,
  "fields": {
    "question": 1040,
    "text": "To extend the functionality of the template system with custom logic and formatting beyond built-in capabilities.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5198,
  "fields": {
    "question": 1040,
    "text": "To execute arbitrary Python code unsuitable for views directly in templates.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5199,
  "fields": {
    "question": 1040,
    "text": "To directly interact with the operating system from templates.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5200,
  "fields": {
    "question": 1040,
    "text": "To replace the default Django template engine.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5201,
  "fields": {
    "question": 1041,
    "text": "It makes it easier for developers to understand the structure and override specific sections correctly across different templates.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5202,
  "fields": {
    "question": 1041,
    "text": "It is required by the Django template engine to parse the template.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5203,
  "fields": {
    "question": 1041,
    "text": "It automatically generates documentation for the templates.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5204,
  "fields": {
    "question": 1041,
    "text": "It improves template rendering speed.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5205,
  "fields": {
    "question": 1041,
    "text": "It reduces the number of context variables needed.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5206,
  "fields": {
    "question": 1042,
    "text": "To escape special Python characters in the template code.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5207,
  "fields": {
    "question": 1042,
    "text": "To automatically convert variable names to lowercase.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5208,
  "fields": {
    "question": 1042,
    "text": "To automatically include common template blocks.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5209,
  "fields": {
    "question": 1042,
    "text": "To remove whitespace from the rendered HTML output.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5210,
  "fields": {
    "question": 1042,
    "text": "To prevent Cross-Site Scripting (XSS) attacks by escaping HTML characters in variable output.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5211,
  "fields": {
    "question": 1043,
    "text": "Incorrect syntax within the template file.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5212,
  "fields": {
    "question": 1043,
    "text": "A missing variable in the template context.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5213,
  "fields": {
    "question": 1043,
    "text": "Failure to load static files.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5214,
  "fields": {
    "question": 1043,
    "text": "An error within a custom template tag.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5215,
  "fields": {
    "question": 1043,
    "text": "Django cannot find the template file specified in the view or tag (e.g., wrong path, app not configured correctly).",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5216,
  "fields": {
    "question": 1044,
    "text": "Run <code>python manage.py collectstatic</code>.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5217,
  "fields": {
    "question": 1044,
    "text": "Install the <code>django-staticfiles</code> package.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5218,
  "fields": {
    "question": 1044,
    "text": "Define a <code>STATICFILES_DIRS</code> setting.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5219,
  "fields": {
    "question": 1044,
    "text": "Set <code>DEBUG=True</code>.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5220,
  "fields": {
    "question": 1044,
    "text": "Add `{% load static %}` at the top of the template.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5221,
  "fields": {
    "question": 1045,
    "text": "<code>{% parent.content %}</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5222,
  "fields": {
    "question": 1045,
    "text": "<code>{{ block.parent }}</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5223,
  "fields": {
    "question": 1045,
    "text": "<code>{{ block.super }}</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5224,
  "fields": {
    "question": 1045,
    "text": "<code>{% include parent_block %}</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5225,
  "fields": {
    "question": 1045,
    "text": "<code>{% super() %}</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5226,
  "fields": {
    "question": 1046,
    "text": "Permissions defined directly within the model's class definition.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5227,
  "fields": {
    "question": 1046,
    "text": "Permissions related to Python objects in memory.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5228,
  "fields": {
    "question": 1046,
    "text": "Permissions that apply only to specific instances of a model, not the model type itself.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5229,
  "fields": {
    "question": 1046,
    "text": "Permissions automatically granted to the object's creator.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5230,
  "fields": {
    "question": 1046,
    "text": "Permissions managed by JavaScript on the frontend.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5231,
  "fields": {
    "question": 1047,
    "text": "<code>django-guardian</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5232,
  "fields": {
    "question": 1047,
    "text": "<code>django-allauth</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5233,
  "fields": {
    "question": 1047,
    "text": "<code>django-crispy-forms</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5234,
  "fields": {
    "question": 1047,
    "text": "<code>django-rest-framework</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5235,
  "fields": {
    "question": 1047,
    "text": "<code>django-debug-toolbar</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5236,
  "fields": {
    "question": 1048,
    "text": "The configured <code>AUTHENTICATION_BACKENDS</code> in <code>settings.py</code>.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5237,
  "fields": {
    "question": 1048,
    "text": "The <code>STATIC_URL</code> setting.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5238,
  "fields": {
    "question": 1048,
    "text": "The database connection pooling configuration.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5239,
  "fields": {
    "question": 1048,
    "text": "The admin site registration for the User model.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5240,
  "fields": {
    "question": 1048,
    "text": "The <code>TEMPLATE_DIRS</code> setting.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5241,
  "fields": {
    "question": 1049,
    "text": "<code>SessionView</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5242,
  "fields": {
    "question": 1049,
    "text": "<code>AuthView</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5243,
  "fields": {
    "question": 1049,
    "text": "<code>AuthenticateView</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5244,
  "fields": {
    "question": 1049,
    "text": "<code>LoginView</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5245,
  "fields": {
    "question": 1049,
    "text": "<code>UserLoginView</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5246,
  "fields": {
    "question": 1050,
    "text": "<code>django.contrib.auth.hash_password()</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5247,
  "fields": {
    "question": 1050,
    "text": "<code>django.contrib.auth.login()</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5248,
  "fields": {
    "question": 1050,
    "text": "<code>django.contrib.auth.authenticate()</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5249,
  "fields": {
    "question": 1050,
    "text": "<code>django.contrib.auth.get_user()</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5250,
  "fields": {
    "question": 1050,
    "text": "<code>User.objects.check_password()</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5251,
  "fields": {
    "question": 1051,
    "text": "By hardcoding permission checks in every view.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5252,
  "fields": {
    "question": 1051,
    "text": "By creating a Group, assigning permissions to the Group, and adding users to that Group.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5253,
  "fields": {
    "question": 1051,
    "text": "By using signals to grant permissions upon user creation.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5254,
  "fields": {
    "question": 1051,
    "text": "By creating a custom User model for each permission set.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5255,
  "fields": {
    "question": 1051,
    "text": "By assigning permissions individually to each user.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5256,
  "fields": {
    "question": 1052,
    "text": "<code>add</code>, <code>change</code>, <code>delete</code> (and <code>view</code> in newer versions)",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5257,
  "fields": {
    "question": 1052,
    "text": "<code>admin_access</code>, <code>staff_access</code>, <code>user_access</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5258,
  "fields": {
    "question": 1052,
    "text": "<code>create</code>, <code>update</code>, <code>delete</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5259,
  "fields": {
    "question": 1052,
    "text": "<code>login</code>, <code>logout</code>, <code>register</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5260,
  "fields": {
    "question": 1052,
    "text": "<code>read</code>, <code>write</code>, <code>execute</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5261,
  "fields": {
    "question": 1053,
    "text": "<code>login()</code> and <code>logout()</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5262,
  "fields": {
    "question": 1053,
    "text": "<code>check_password()</code> and <code>set_password()</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5263,
  "fields": {
    "question": 1053,
    "text": "<code>has_perm()</code> and <code>get_group_permissions()</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5264,
  "fields": {
    "question": 1053,
    "text": "<code>create_user()</code> and <code>get_permissions()</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5265,
  "fields": {
    "question": 1053,
    "text": "<code>authenticate()</code> and <code>get_user()</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5266,
  "fields": {
    "question": 1054,
    "text": "<code>BaseUser</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5267,
  "fields": {
    "question": 1054,
    "text": "<code>CustomUser</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5268,
  "fields": {
    "question": 1054,
    "text": "<code>models.Model</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5269,
  "fields": {
    "question": 1054,
    "text": "<code>AbstractUser</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5270,
  "fields": {
    "question": 1054,
    "text": "<code>AbstractBaseUser</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5271,
  "fields": {
    "question": 1055,
    "text": "Mocking the entire <code>request.user</code> object.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5272,
  "fields": {
    "question": 1055,
    "text": "Disabling the authentication middleware temporarily.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5273,
  "fields": {
    "question": 1055,
    "text": "Creating a test user in the test database.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5274,
  "fields": {
    "question": 1055,
    "text": "Overriding the <code>LOGIN_URL</code> setting.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5275,
  "fields": {
    "question": 1055,
    "text": "Running tests with <code>DEBUG=True</code>.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5276,
  "fields": {
    "question": 1056,
    "text": "Set it in the <code>__init__.py</code> file of the user app.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5277,
  "fields": {
    "question": 1056,
    "text": "It's optional and only needed for complex authentication.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5278,
  "fields": {
    "question": 1056,
    "text": "Set it only after creating several migrations.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5279,
  "fields": {
    "question": 1056,
    "text": "Set it at the beginning of the project, before the first migration.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5280,
  "fields": {
    "question": 1056,
    "text": "Set it after deploying the application to production.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5281,
  "fields": {
    "question": 1057,
    "text": "To define database-level access controls.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5282,
  "fields": {
    "question": 1057,
    "text": "To control what actions authenticated users are allowed to perform.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5283,
  "fields": {
    "question": 1057,
    "text": "To encrypt user passwords securely.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5284,
  "fields": {
    "question": 1057,
    "text": "To manage which external services can access the Django API.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5285,
  "fields": {
    "question": 1057,
    "text": "To control which users can log in to the application.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5286,
  "fields": {
    "question": 1058,
    "text": "<code>django-crispy-forms</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5287,
  "fields": {
    "question": 1058,
    "text": "<code>django-rest-framework</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5288,
  "fields": {
    "question": 1058,
    "text": "<code>django-guardian</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5289,
  "fields": {
    "question": 1058,
    "text": "<code>django-debug-toolbar</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5290,
  "fields": {
    "question": 1058,
    "text": "<code>django-allauth</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5291,
  "fields": {
    "question": 1059,
    "text": "They are interchangeable terms for the same security process.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5292,
  "fields": {
    "question": 1059,
    "text": "Authorization verifies user identity, Authentication verifies user permissions.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5293,
  "fields": {
    "question": 1059,
    "text": "Authentication verifies user identity, Authorization verifies user permissions.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5294,
  "fields": {
    "question": 1059,
    "text": "Authorization prevents CSRF attacks, Authentication prevents XSS attacks.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5295,
  "fields": {
    "question": 1059,
    "text": "Authentication encrypts data, Authorization decrypts data.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5296,
  "fields": {
    "question": 1060,
    "text": "Keeping Django and its dependencies (including security-related packages) up-to-date.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5297,
  "fields": {
    "question": 1060,
    "text": "Constantly changing the visual theme.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5298,
  "fields": {
    "question": 1060,
    "text": "Rewriting the login view every month.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5299,
  "fields": {
    "question": 1060,
    "text": "Frequently clearing the server logs.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5300,
  "fields": {
    "question": 1060,
    "text": "Adding more custom fields to the User model regularly.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5301,
  "fields": {
    "question": 1061,
    "text": "To encrypt the password before hashing.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5302,
  "fields": {
    "question": 1061,
    "text": "To add extra flavour text to the password.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5303,
  "fields": {
    "question": 1061,
    "text": "To ensure that identical passwords hash to different values, preventing rainbow table attacks.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5304,
  "fields": {
    "question": 1061,
    "text": "To link the password hash to the user's email address.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5305,
  "fields": {
    "question": 1061,
    "text": "To make the password shorter.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5306,
  "fields": {
    "question": 1062,
    "text": "A password manager like KeePass.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5307,
  "fields": {
    "question": 1062,
    "text": "An authenticator app like Google Authenticator or Authy.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5308,
  "fields": {
    "question": 1062,
    "text": "A web browser's incognito mode.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5309,
  "fields": {
    "question": 1062,
    "text": "A code editor like VS Code.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5310,
  "fields": {
    "question": 1062,
    "text": "A database client like DBeaver.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5311,
  "fields": {
    "question": 1063,
    "text": "To integrate a new template engine.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5312,
  "fields": {
    "question": 1063,
    "text": "To change the default admin site theme.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5313,
  "fields": {
    "question": 1063,
    "text": "To add extra profile fields like date of birth or profile picture.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5314,
  "fields": {
    "question": 1063,
    "text": "To change the database engine used by Django.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5315,
  "fields": {
    "question": 1063,
    "text": "To disable password hashing.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5316,
  "fields": {
    "question": 1064,
    "text": "Validate data length before displaying.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5317,
  "fields": {
    "question": 1064,
    "text": "Store all user data in a separate, isolated database.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5318,
  "fields": {
    "question": 1064,
    "text": "Only allow users to submit data via POST requests.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5319,
  "fields": {
    "question": 1064,
    "text": "Always store user data in lowercase.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5320,
  "fields": {
    "question": 1064,
    "text": "Escape HTML special characters in the data before rendering (Django templates do this by default).",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5321,
  "fields": {
    "question": 1065,
    "text": "By listing the backend classes in the <code>AUTHENTICATION_BACKENDS</code> setting in <code>settings.py</code>.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5322,
  "fields": {
    "question": 1065,
    "text": "By registering them in the <code>admin.py</code> file.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5323,
  "fields": {
    "question": 1065,
    "text": "By adding them to the <code>MIDDLEWARE</code> setting in <code>settings.py</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5324,
  "fields": {
    "question": 1065,
    "text": "By setting the <code>AUTH_BACKENDS</code> variable in <code>models.py</code>.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5325,
  "fields": {
    "question": 1065,
    "text": "By using a special template tag in the login form.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5326,
  "fields": {
    "question": 1066,
    "text": "<code>user.can('app_label.codename')</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5327,
  "fields": {
    "question": 1066,
    "text": "<code>user.check_permission('app_label.codename')</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5328,
  "fields": {
    "question": 1066,
    "text": "<code>user.has_perm('app_label.codename')</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5329,
  "fields": {
    "question": 1066,
    "text": "<code>user.is_allowed('app_label.codename')</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5330,
  "fields": {
    "question": 1066,
    "text": "<code>user.has_permission('app_label.codename')</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5331,
  "fields": {
    "question": 1067,
    "text": "The <code>groups</code> and <code>user_permissions</code> fields.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5332,
  "fields": {
    "question": 1067,
    "text": "Fields for <code>first_name</code> and <code>last_name</code>.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5333,
  "fields": {
    "question": 1067,
    "text": "Methods for <code>login()</code> and <code>logout()</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5334,
  "fields": {
    "question": 1067,
    "text": "Only the <code>password</code> field.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5335,
  "fields": {
    "question": 1067,
    "text": "A unique identifier field (like email or username), required fields, and the <code>USERNAME_FIELD</code> attribute.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5336,
  "fields": {
    "question": 1068,
    "text": "To handle password reset emails.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5337,
  "fields": {
    "question": 1068,
    "text": "To define the structure of the User model.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5338,
  "fields": {
    "question": 1068,
    "text": "To define how users are verified (e.g., checking password, checking an external source).",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5339,
  "fields": {
    "question": 1068,
    "text": "To manage user sessions and cookies.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5340,
  "fields": {
    "question": 1068,
    "text": "To render login and logout templates.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5341,
  "fields": {
    "question": 1069,
    "text": "<code>CsrfViewMiddleware</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5342,
  "fields": {
    "question": 1069,
    "text": "<code>MessageMiddleware</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5343,
  "fields": {
    "question": 1069,
    "text": "<code>AuthenticationMiddleware</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5344,
  "fields": {
    "question": 1069,
    "text": "<code>SecurityMiddleware</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5345,
  "fields": {
    "question": 1069,
    "text": "<code>SessionMiddleware</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5346,
  "fields": {
    "question": 1070,
    "text": "Insecure Direct Object References (IDOR)",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5347,
  "fields": {
    "question": 1070,
    "text": "Cross-Site Scripting (XSS)",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5348,
  "fields": {
    "question": 1070,
    "text": "SQL Injection",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5349,
  "fields": {
    "question": 1070,
    "text": "Cross-Site Request Forgery (CSRF)",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5350,
  "fields": {
    "question": 1070,
    "text": "Denial of Service (DoS)",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5351,
  "fields": {
    "question": 1071,
    "text": "<code>@login_required</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5352,
  "fields": {
    "question": 1071,
    "text": "<code>@user_passes_test(lambda u: u.is_staff)</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5353,
  "fields": {
    "question": 1071,
    "text": "<code>@permission_required('app_label.permission_codename')</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5354,
  "fields": {
    "question": 1071,
    "text": "<code>@check_permission('app_label.permission_codename')</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5355,
  "fields": {
    "question": 1071,
    "text": "<code>@allowed_groups(['group_name'])</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5356,
  "fields": {
    "question": 1072,
    "text": "<code>&lt;input type=\"hidden\" name=\"csrf\" value=\"{{ csrf_value }}\"&gt;</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5357,
  "fields": {
    "question": 1072,
    "text": "<code>{{ form.csrf_token }}</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5358,
  "fields": {
    "question": 1072,
    "text": "<code>{% csrf_token %}</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5359,
  "fields": {
    "question": 1072,
    "text": "<code>&lt;meta name=\"csrf-token\" content=\"{{ csrf_token }}\"&gt;</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5360,
  "fields": {
    "question": 1072,
    "text": "It's included automatically without any template tags.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5361,
  "fields": {
    "question": 1073,
    "text": "In <code>admin.py</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5362,
  "fields": {
    "question": 1073,
    "text": "In <code>urls.py</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5363,
  "fields": {
    "question": 1073,
    "text": "In <code>settings.py</code> using the <code>AUTH_USER_MODEL</code> setting",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5364,
  "fields": {
    "question": 1073,
    "text": "In <code>models.py</code> using a specific model option",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5365,
  "fields": {
    "question": 1073,
    "text": "In <code>views.py</code> using a specific decorator",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5366,
  "fields": {
    "question": 1074,
    "text": "Using a strong hashing algorithm with salting (like PBKDF2, bcrypt, or Argon2)",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5367,
  "fields": {
    "question": 1074,
    "text": "Plain text",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5368,
  "fields": {
    "question": 1074,
    "text": "Using simple MD5 hashing",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5369,
  "fields": {
    "question": 1074,
    "text": "Base64 encoded",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5370,
  "fields": {
    "question": 1074,
    "text": "Using a reversible encryption algorithm like AES",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5371,
  "fields": {
    "question": 1075,
    "text": "<code>request.session.set_user()</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5372,
  "fields": {
    "question": 1075,
    "text": "<code>django.contrib.auth.authenticate()</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5373,
  "fields": {
    "question": 1075,
    "text": "<code>django.contrib.auth.logout()</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5374,
  "fields": {
    "question": 1075,
    "text": "<code>django.contrib.auth.login()</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5375,
  "fields": {
    "question": 1075,
    "text": "<code>user.save()</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5376,
  "fields": {
    "question": 1076,
    "text": "Using computationally intensive hashing algorithms (key stretching) like PBKDF2.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5377,
  "fields": {
    "question": 1076,
    "text": "Storing passwords in a separate encrypted file.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5378,
  "fields": {
    "question": 1076,
    "text": "Requiring passwords to be changed daily.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5379,
  "fields": {
    "question": 1076,
    "text": "Using very short salt values.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5380,
  "fields": {
    "question": 1076,
    "text": "Limiting password length to 8 characters.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5381,
  "fields": {
    "question": 1077,
    "text": "Integration with social media logins.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5382,
  "fields": {
    "question": 1077,
    "text": "Encryption of the username field.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5383,
  "fields": {
    "question": 1077,
    "text": "Automatic password rotation.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5384,
  "fields": {
    "question": 1077,
    "text": "A requirement for longer passwords.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5385,
  "fields": {
    "question": 1077,
    "text": "An additional verification step beyond just the password (e.g., a code from an app or SMS).",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5386,
  "fields": {
    "question": 1078,
    "text": "Compressing static files more effectively.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5387,
  "fields": {
    "question": 1078,
    "text": "Encrypting communication between the user's browser and the server, protecting sensitive data like passwords.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5388,
  "fields": {
    "question": 1078,
    "text": "Improving database query performance.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5389,
  "fields": {
    "question": 1078,
    "text": "Automatically handling user permissions.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5390,
  "fields": {
    "question": 1078,
    "text": "Making your website rank higher in search results only.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5391,
  "fields": {
    "question": 1079,
    "text": "It redirects anonymous users to the login page defined in <code>settings.LOGIN_URL</code>.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5392,
  "fields": {
    "question": 1079,
    "text": "It checks if the user has staff permissions.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5393,
  "fields": {
    "question": 1079,
    "text": "It checks for specific group membership.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5394,
  "fields": {
    "question": 1079,
    "text": "It logs the user out automatically after accessing the view.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5395,
  "fields": {
    "question": 1079,
    "text": "It requires the user to enter their password again.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5396,
  "fields": {
    "question": 1080,
    "text": "Manually set session cookies in the request headers.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5397,
  "fields": {
    "question": 1080,
    "text": "Modify the <code>request.user</code> attribute within the test.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5398,
  "fields": {
    "question": 1080,
    "text": "Decorate the test method with <code>@login_required</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5399,
  "fields": {
    "question": 1080,
    "text": "Use the <code>client.login(username=&#x27;testuser&#x27;, password=&#x27;password&#x27;)</code> method.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5400,
  "fields": {
    "question": 1080,
    "text": "Create a user and set <code>user.is_authenticated = True</code> directly.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5401,
  "fields": {
    "question": 1081,
    "text": "It enables social authentication features.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5402,
  "fields": {
    "question": 1081,
    "text": "It adds the necessary fields and methods for handling Django's built-in permissions and groups.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5403,
  "fields": {
    "question": 1081,
    "text": "It provides methods for password hashing.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5404,
  "fields": {
    "question": 1081,
    "text": "It integrates the user model with the Django admin site.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5405,
  "fields": {
    "question": 1081,
    "text": "It automatically adds <code>is_staff</code> and <code>is_superuser</code> fields.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5406,
  "fields": {
    "question": 1082,
    "text": "<code>full_name</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5407,
  "fields": {
    "question": 1082,
    "text": "<code>user_id</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5408,
  "fields": {
    "question": 1082,
    "text": "<code>email</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5409,
  "fields": {
    "question": 1082,
    "text": "<code>username</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5410,
  "fields": {
    "question": 1082,
    "text": "<code>pk</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5411,
  "fields": {
    "question": 1083,
    "text": "<code>path('auth/', include('django.auth.urls'))</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5412,
  "fields": {
    "question": 1083,
    "text": "You must define each auth URL pattern manually.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5413,
  "fields": {
    "question": 1083,
    "text": "<code>path('users/', include('django.contrib.auth.views'))</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5414,
  "fields": {
    "question": 1083,
    "text": "<code>url(r'^accounts/', include('django.contrib.auth.urls'))</code> (Using <code>url</code>)",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5415,
  "fields": {
    "question": 1083,
    "text": "<code>path('accounts/', include('django.contrib.auth.urls'))</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5416,
  "fields": {
    "question": 1084,
    "text": "<code>django.contrib.admin</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5417,
  "fields": {
    "question": 1084,
    "text": "<code>django.contrib.auth</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5418,
  "fields": {
    "question": 1084,
    "text": "<code>django.contrib.messages</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5419,
  "fields": {
    "question": 1084,
    "text": "<code>django.contrib.sites</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5420,
  "fields": {
    "question": 1084,
    "text": "<code>django.contrib.sessions</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5421,
  "fields": {
    "question": 1085,
    "text": "It logs a message to the JavaScript console.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5422,
  "fields": {
    "question": 1085,
    "text": "It can be styled using CSS to change the appearance of the element (e.g., make it semi-transparent, show a spinner background).",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5423,
  "fields": {
    "question": 1085,
    "text": "It sends a notification to the user.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5424,
  "fields": {
    "question": 1085,
    "text": "It prevents further user interaction with the element.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5425,
  "fields": {
    "question": 1085,
    "text": "It automatically displays a browser-native loading spinner.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5426,
  "fields": {
    "question": 1086,
    "text": "<code>beforeend</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5427,
  "fields": {
    "question": 1086,
    "text": "<code>outerHTML</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5428,
  "fields": {
    "question": 1086,
    "text": "<code>afterend</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5429,
  "fields": {
    "question": 1086,
    "text": "<code>innerHTML</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5430,
  "fields": {
    "question": 1086,
    "text": "<code>beforebegin</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5431,
  "fields": {
    "question": 1087,
    "text": "Check <code>request.META.get(&#x27;HTTP_X_REQUESTED_WITH&#x27;) == &#x27;XMLHttpRequest&#x27;</code>.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5432,
  "fields": {
    "question": 1087,
    "text": "Check for a query parameter <code>?htmx=true</code>.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5433,
  "fields": {
    "question": 1087,
    "text": "Check <code>request.content_type == &#x27;application/htmx&#x27;</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5434,
  "fields": {
    "question": 1087,
    "text": "Check if <code>request.META.get(&#x27;HTTP_HX_REQUEST&#x27;)</code> is 'true'.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5435,
  "fields": {
    "question": 1087,
    "text": "It's impossible without the <code>django-htmx</code> library.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5436,
  "fields": {
    "question": 1088,
    "text": "To allow access to modern browser features directly from HTML attributes (like AJAX, CSS Transitions, WebSockets).",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5437,
  "fields": {
    "question": 1088,
    "text": "To provide a full JavaScript framework like React or Vue.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5438,
  "fields": {
    "question": 1088,
    "text": "To enforce strict data typing in HTML.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5439,
  "fields": {
    "question": 1088,
    "text": "To automatically convert Django templates to JavaScript.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5440,
  "fields": {
    "question": 1088,
    "text": "To replace server-side rendering entirely.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5441,
  "fields": {
    "question": 1089,
    "text": "<code>innerHTML</code> (default)",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5442,
  "fields": {
    "question": 1089,
    "text": "<code>outerHTML</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5443,
  "fields": {
    "question": 1089,
    "text": "<code>delete</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5444,
  "fields": {
    "question": 1089,
    "text": "<code>beforeend</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5445,
  "fields": {
    "question": 1089,
    "text": "<code>afterbegin</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5446,
  "fields": {
    "question": 1090,
    "text": "<code>hx-target=\".\"</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5447,
  "fields": {
    "question": 1090,
    "text": "<code>hx-target=\"this\"</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5448,
  "fields": {
    "question": 1090,
    "text": "<code>hx-target=\"self\"</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5449,
  "fields": {
    "question": 1090,
    "text": "<code>hx-target=\"element\"</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5450,
  "fields": {
    "question": 1090,
    "text": "<code>hx-target=\"#this\"</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5451,
  "fields": {
    "question": 1091,
    "text": "By utilizing custom HTML attributes (e.g., <code>hx-get</code>, <code>hx-post</code>).",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5452,
  "fields": {
    "question": 1091,
    "text": "By relying on browser extensions.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5453,
  "fields": {
    "question": 1091,
    "text": "Through special HTML comments interpreted by the browser.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5454,
  "fields": {
    "question": 1091,
    "text": "By using WebAssembly modules.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5455,
  "fields": {
    "question": 1091,
    "text": "By automatically generating JavaScript based on server responses.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5456,
  "fields": {
    "question": 1092,
    "text": "<code>afterend</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5457,
  "fields": {
    "question": 1092,
    "text": "<code>outerHTML</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5458,
  "fields": {
    "question": 1092,
    "text": "<code>innerHTML</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5459,
  "fields": {
    "question": 1092,
    "text": "<code>beforebegin</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5460,
  "fields": {
    "question": 1092,
    "text": "<code>none</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5461,
  "fields": {
    "question": 1093,
    "text": "By manually adding the CSRF token as a query parameter to every HTMX request URL.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5462,
  "fields": {
    "question": 1093,
    "text": "By ensuring the CSRF token cookie is set and HTMX sends the <code>X-CSRFToken</code> header (often handled automatically or via metadata).",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5463,
  "fields": {
    "question": 1093,
    "text": "By adding the <code>{% csrf_token %}</code> tag within every HTMX attribute.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5464,
  "fields": {
    "question": 1093,
    "text": "By disabling CSRF protection in Django settings.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5465,
  "fields": {
    "question": 1093,
    "text": "HTMX automatically handles CSRF without configuration.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5466,
  "fields": {
    "question": 1094,
    "text": "<code>hx-get</code>, <code>hx-trigger=\"keyup changed delay:300ms\"</code>, <code>hx-target=\"#results-list\"</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5467,
  "fields": {
    "question": 1094,
    "text": "<code>hx-load</code>, <code>hx-target=\"#results-list\"</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5468,
  "fields": {
    "question": 1094,
    "text": "<code>hx-post</code>, <code>hx-target=\"#search-input\"</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5469,
  "fields": {
    "question": 1094,
    "text": "<code>hx-delete</code>, <code>hx-trigger=\"change\"</code>, <code>hx-target=\"#results-list\"</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5470,
  "fields": {
    "question": 1094,
    "text": "<code>hx-get</code>, <code>hx-trigger=\"submit\"</code>, <code>hx-target=\"#results-list\"</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5471,
  "fields": {
    "question": 1095,
    "text": "<code>{% block %}</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5472,
  "fields": {
    "question": 1095,
    "text": "<code>{% csrf_token %}</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5473,
  "fields": {
    "question": 1095,
    "text": "<code>{% include %}</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5474,
  "fields": {
    "question": 1095,
    "text": "<code>{% load %}</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5475,
  "fields": {
    "question": 1095,
    "text": "<code>{% url %}</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5476,
  "fields": {
    "question": 1096,
    "text": "<code>htmx-request</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5477,
  "fields": {
    "question": 1096,
    "text": "<code>htmx-swapping</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5478,
  "fields": {
    "question": 1096,
    "text": "<code>htmx-active</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5479,
  "fields": {
    "question": 1096,
    "text": "<code>htmx-loading</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5480,
  "fields": {
    "question": 1096,
    "text": "<code>htmx-pending</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5481,
  "fields": {
    "question": 1097,
    "text": "Application / Storage",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5482,
  "fields": {
    "question": 1097,
    "text": "Sources",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5483,
  "fields": {
    "question": 1097,
    "text": "Elements / Inspector",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5484,
  "fields": {
    "question": 1097,
    "text": "Console",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5485,
  "fields": {
    "question": 1097,
    "text": "Network",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5486,
  "fields": {
    "question": 1098,
    "text": "By manually inspecting server logs during test runs.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5487,
  "fields": {
    "question": 1098,
    "text": "By using the Django test client to make requests, simulating an HTMX request by setting the <code>HTTP_HX_REQUEST</code> header to 'true', and asserting the content of <code>response.content</code>.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5488,
  "fields": {
    "question": 1098,
    "text": "It's not possible; only full page renders can be tested.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5489,
  "fields": {
    "question": 1098,
    "text": "By using a separate testing library specifically for HTMX.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5490,
  "fields": {
    "question": 1098,
    "text": "By mocking the <code>render</code> function to check arguments.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5491,
  "fields": {
    "question": 1099,
    "text": "Run a specific Django management command.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5492,
  "fields": {
    "question": 1099,
    "text": "Add a simple element with an <code>hx-get</code> attribute and check if the request is made in the browser's Network tab.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5493,
  "fields": {
    "question": 1099,
    "text": "Check the Django server logs for a \"HTMX loaded\" message.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5494,
  "fields": {
    "question": 1099,
    "text": "Both 2 and 3 are valid verification methods.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5495,
  "fields": {
    "question": 1099,
    "text": "Look for the <code>htmx</code> object in the browser's JavaScript console.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5496,
  "fields": {
    "question": 1100,
    "text": "The CSS transition effect to use during swap.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5497,
  "fields": {
    "question": 1100,
    "text": "The target element for the response.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5498,
  "fields": {
    "question": 1100,
    "text": "The event or condition that causes the HTMX request to be sent.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5499,
  "fields": {
    "question": 1100,
    "text": "The delay before swapping the content.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5500,
  "fields": {
    "question": 1100,
    "text": "The HTTP method used for the request.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5501,
  "fields": {
    "question": 1101,
    "text": "<code>hx-trigger=\"load\"</code>, <code>hx-target=\"#modal-content\"</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5502,
  "fields": {
    "question": 1101,
    "text": "<code>hx-get</code>, <code>hx-target=\"#modal-body\"</code>, <code>hx-swap=\"innerHTML\"</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5503,
  "fields": {
    "question": 1101,
    "text": "<code>hx-load</code>, <code>hx-target=\"#modal\"</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5504,
  "fields": {
    "question": 1101,
    "text": "<code>hx-put</code>, <code>hx-indicator=\"#modal-spinner\"</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5505,
  "fields": {
    "question": 1101,
    "text": "<code>hx-post</code>, <code>hx-target=\"#modal-body\"</code>, <code>hx-swap=\"outerHTML\"</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5506,
  "fields": {
    "question": 1102,
    "text": "By checking if <code>request.headers[&#x27;HX-Request&#x27;]</code> exists and is 'true'.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5507,
  "fields": {
    "question": 1102,
    "text": "By inspecting <code>request.GET.get(&#x27;is_htmx&#x27;)</code>.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5508,
  "fields": {
    "question": 1102,
    "text": "By checking the boolean attribute <code>request.htmx</code>.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5509,
  "fields": {
    "question": 1102,
    "text": "By calling <code>htmx.is_htmx_request(request)</code>.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5510,
  "fields": {
    "question": 1102,
    "text": "By checking <code>request.method == &#x27;HTMX&#x27;</code>.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5511,
  "fields": {
    "question": 1103,
    "text": "It bypasses the Django View layer entirely for faster responses.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5512,
  "fields": {
    "question": 1103,
    "text": "It requires using a different templating engine instead of Django's default.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5513,
  "fields": {
    "question": 1103,
    "text": "It replaces the Template layer with a JavaScript rendering engine.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5514,
  "fields": {
    "question": 1103,
    "text": "It automatically converts Django Models into client-side JavaScript objects.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5515,
  "fields": {
    "question": 1103,
    "text": "It allows Django Views to return HTML fragments, leveraging the existing Template layer for partial updates.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5516,
  "fields": {
    "question": 1104,
    "text": "An empty <code>HttpResponse</code> with status 204 No Content.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5517,
  "fields": {
    "question": 1104,
    "text": "An <code>HttpResponseRedirect</code> to the same page.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5518,
  "fields": {
    "question": 1104,
    "text": "A JSON response containing the data to be rendered.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5519,
  "fields": {
    "question": 1104,
    "text": "An <code>HttpResponse</code> containing only the HTML fragment needed for the update.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5520,
  "fields": {
    "question": 1104,
    "text": "A full HTML document using the base template.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5521,
  "fields": {
    "question": 1105,
    "text": "<code>hx-trigger=\"input\"</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5522,
  "fields": {
    "question": 1105,
    "text": "<code>hx-trigger=\"change\"</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5523,
  "fields": {
    "question": 1105,
    "text": "<code>hx-trigger=\"keyup\"</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5524,
  "fields": {
    "question": 1105,
    "text": "<code>hx-trigger=\"keypress\"</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5525,
  "fields": {
    "question": 1105,
    "text": "<code>hx-trigger=\"value_changed\"</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5526,
  "fields": {
    "question": 1106,
    "text": "Add <code>hx-get</code> to the pagination links, targeting the list container (e.g., <code>#item-list</code>), potentially with <code>hx-swap=&quot;innerHTML&quot;</code>.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5527,
  "fields": {
    "question": 1106,
    "text": "Write custom JavaScript to handle the pagination logic.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5528,
  "fields": {
    "question": 1106,
    "text": "Use standard <code>&lt;a&gt;</code> tags with full page reloads.</a>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5529,
  "fields": {
    "question": 1106,
    "text": "Add <code>hx-post</code> to the pagination links targeting the list container.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5530,
  "fields": {
    "question": 1106,
    "text": "Use <code>hx-trigger=&quot;load&quot;</code> on the list container itself.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5531,
  "fields": {
    "question": 1107,
    "text": "Context data cannot be passed to partial templates.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5532,
  "fields": {
    "question": 1107,
    "text": "It must be manually serialized to JSON.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5533,
  "fields": {
    "question": 1107,
    "text": "It's passed as part of the URL query string.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5534,
  "fields": {
    "question": 1107,
    "text": "HTMX automatically extracts it from the original page's context.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5535,
  "fields": {
    "question": 1107,
    "text": "The same way it's passed to a full template render, using the context dictionary argument in Django's <code>render</code> function.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5536,
  "fields": {
    "question": 1108,
    "text": "<code>init</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5537,
  "fields": {
    "question": 1108,
    "text": "<code>click</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5538,
  "fields": {
    "question": 1108,
    "text": "<code>change</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5539,
  "fields": {
    "question": 1108,
    "text": "<code>submit</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5540,
  "fields": {
    "question": 1108,
    "text": "<code>load</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5541,
  "fields": {
    "question": 1109,
    "text": "To perform a standard HTTP 302 redirect on the server side.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5542,
  "fields": {
    "question": 1109,
    "text": "To redirect the request to a different Django view internally.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5543,
  "fields": {
    "question": 1109,
    "text": "To embed the target page content directly within the current page without a full reload.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5544,
  "fields": {
    "question": 1109,
    "text": "To return a response with a special <code>HX-Redirect</code> header that tells the HTMX library on the client-side to navigate to a new page.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5545,
  "fields": {
    "question": 1109,
    "text": "To return a JavaScript snippet that performs <code>window.location.href</code>.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5546,
  "fields": {
    "question": 1110,
    "text": "<code>hx-trigger=\"keyup delay:500ms\"</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5547,
  "fields": {
    "question": 1110,
    "text": "<code>hx-trigger=\"keyup changed delay:500ms\"</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5548,
  "fields": {
    "question": 1110,
    "text": "<code>hx-trigger=\"change delay:0.5s\"</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5549,
  "fields": {
    "question": 1110,
    "text": "<code>hx-trigger=\"typeend:500ms\"</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5550,
  "fields": {
    "question": 1110,
    "text": "<code>hx-trigger=\"keyup\" hx-delay=\"500\"</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5551,
  "fields": {
    "question": 1111,
    "text": "The HTTP method to use (GET, POST, etc.).",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5552,
  "fields": {
    "question": 1111,
    "text": "The URL to send the request to.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5553,
  "fields": {
    "question": 1111,
    "text": "The CSS selector of the element whose content will be updated by the response.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5554,
  "fields": {
    "question": 1111,
    "text": "The data to be sent with the request.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5555,
  "fields": {
    "question": 1111,
    "text": "The event that triggers the request (e.g., click, change).",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5556,
  "fields": {
    "question": 1112,
    "text": "<code>self.assertRedirects()</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5557,
  "fields": {
    "question": 1112,
    "text": "<code>self.assertTemplateUsed()</code> (while useful, doesn't check specific content within)",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5558,
  "fields": {
    "question": 1112,
    "text": "<code>self.assertJSONEqual()</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5559,
  "fields": {
    "question": 1112,
    "text": "<code>self.assertEqual(response.status_code, 200)</code> (checks status, not content)",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5560,
  "fields": {
    "question": 1112,
    "text": "<code>self.assertContains(response, \"expected text or html\")</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5561,
  "fields": {
    "question": 1113,
    "text": "Exclusively using WebSockets for all client-server communication.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5562,
  "fields": {
    "question": 1113,
    "text": "Using client-side JavaScript to manage all application state and rendering.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5563,
  "fields": {
    "question": 1113,
    "text": "Building APIs that return only JSON data.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5564,
  "fields": {
    "question": 1113,
    "text": "Embedding multimedia content like video and audio using specific HTML5 tags.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5565,
  "fields": {
    "question": 1113,
    "text": "Having the server return HTML fragments to update parts of the user interface directly.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5566,
  "fields": {
    "question": 1114,
    "text": "Compiling it from source code.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5567,
  "fields": {
    "question": 1114,
    "text": "Writing custom JavaScript to replicate HTMX functionality.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5568,
  "fields": {
    "question": 1114,
    "text": "Using a Python package manager like pip.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5569,
  "fields": {
    "question": 1114,
    "text": "Downloading the library and manually embedding it in every HTML file.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5570,
  "fields": {
    "question": 1114,
    "text": "Including it via a Content Delivery Network (CDN) link in the base template.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5571,
  "fields": {
    "question": 1115,
    "text": "<code>delete</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5572,
  "fields": {
    "question": 1115,
    "text": "<code>beforeend</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5573,
  "fields": {
    "question": 1115,
    "text": "<code>outerHTML</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5574,
  "fields": {
    "question": 1115,
    "text": "<code>afterbegin</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5575,
  "fields": {
    "question": 1115,
    "text": "<code>innerHTML</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5576,
  "fields": {
    "question": 1116,
    "text": "No, the partial template should only contain the specific fragment of HTML needed for the update.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5577,
  "fields": {
    "question": 1116,
    "text": "Yes, always, to maintain consistency.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5578,
  "fields": {
    "question": 1116,
    "text": "Yes, but only the specific block being replaced should be defined.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5579,
  "fields": {
    "question": 1116,
    "text": "Only if the base template contains critical JavaScript needed by the fragment.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5580,
  "fields": {
    "question": 1116,
    "text": "It depends on the <code>hx-swap</code> strategy being used.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5581,
  "fields": {
    "question": 1117,
    "text": "A boolean flag <code>has_errors=True</code>.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5582,
  "fields": {
    "question": 1117,
    "text": "The original <code>request.POST</code> data.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5583,
  "fields": {
    "question": 1117,
    "text": "A dictionary of errors separate from the form.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5584,
  "fields": {
    "question": 1117,
    "text": "An empty, unbound form instance.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5585,
  "fields": {
    "question": 1117,
    "text": "The bound form instance (<code>form = MyForm(request.POST)</code>) which now contains the errors.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5586,
  "fields": {
    "question": 1118,
    "text": "To specify the target element for the response.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5587,
  "fields": {
    "question": 1118,
    "text": "To set the duration of the loading indicator display.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5588,
  "fields": {
    "question": 1118,
    "text": "To point to a *different* element (using a CSS selector) that should have the <code>htmx-request</code> class applied during the request.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5589,
  "fields": {
    "question": 1118,
    "text": "To trigger a specific JavaScript function during the request.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5590,
  "fields": {
    "question": 1118,
    "text": "To define the CSS class used for loading states.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5591,
  "fields": {
    "question": 1119,
    "text": "Return a partial HTML snippet showing a success message, or perhaps an updated list including the new item, or trigger a client-side redirect.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5592,
  "fields": {
    "question": 1119,
    "text": "Raise a custom <code>FormSuccess</code> exception.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5593,
  "fields": {
    "question": 1119,
    "text": "Return an HTTP 204 No Content response.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5594,
  "fields": {
    "question": 1119,
    "text": "Always return the original empty form partial.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5595,
  "fields": {
    "question": 1119,
    "text": "Return a JSON object `{ \"success\": true }`.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5596,
  "fields": {
    "question": 1120,
    "text": "It automatically secures the application against all web vulnerabilities.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5597,
  "fields": {
    "question": 1120,
    "text": "It requires learning a complex new client-side state management library.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5598,
  "fields": {
    "question": 1120,
    "text": "It eliminates the need to write any Python code.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5599,
  "fields": {
    "question": 1120,
    "text": "It allows them to leverage their existing Django templating and view logic skills for dynamic UIs.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5600,
  "fields": {
    "question": 1120,
    "text": "It forces the use of NoSQL databases.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5601,
  "fields": {
    "question": 1121,
    "text": "By overriding the relevant HTTP method handler (e.g., <code>get</code>, <code>post</code>) and checking <code>self.request.htmx</code>.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5602,
  "fields": {
    "question": 1121,
    "text": "In the <code>__init__</code> method.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5603,
  "fields": {
    "question": 1121,
    "text": "In the URL configuration (<code>urls.py</code>).",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5604,
  "fields": {
    "question": 1121,
    "text": "In the model associated with the view.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5605,
  "fields": {
    "question": 1121,
    "text": "In a custom middleware applied only to that view.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5606,
  "fields": {
    "question": 1122,
    "text": "By returning a JSON response with error messages.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5607,
  "fields": {
    "question": 1122,
    "text": "By raising a Django <code>ValidationError</code> in the view, which HTMX catches.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5608,
  "fields": {
    "question": 1122,
    "text": "HTMX automatically displays errors if the server returns a 400 status code.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5609,
  "fields": {
    "question": 1122,
    "text": "The Django view should re-render the form template (as a partial) with the bound form containing errors, and HTMX swaps this partial into the page.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5610,
  "fields": {
    "question": 1122,
    "text": "By using JavaScript on the client-side to validate the form before submission.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5611,
  "fields": {
    "question": 1123,
    "text": "To create reusable template snippets (e.g., for list items, form rows) that can be rendered within a larger partial or a full page.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5612,
  "fields": {
    "question": 1123,
    "text": "To replace the `{% block %}` tag for defining content areas.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5613,
  "fields": {
    "question": 1123,
    "text": "To conditionally load CSS based on the request type.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5614,
  "fields": {
    "question": 1123,
    "text": "To include the entire base template within the partial.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5615,
  "fields": {
    "question": 1123,
    "text": "To include JavaScript files directly into the template.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5616,
  "fields": {
    "question": 1124,
    "text": "<code>hx-request=\"GET\"</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5617,
  "fields": {
    "question": 1124,
    "text": "<code>hx-url</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5618,
  "fields": {
    "question": 1124,
    "text": "<code>hx-get</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5619,
  "fields": {
    "question": 1124,
    "text": "<code>hx-post</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5620,
  "fields": {
    "question": 1124,
    "text": "<code>hx-target-get</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5621,
  "fields": {
    "question": 1125,
    "text": "SPAs require Django Channels, while HTMX does not.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5622,
  "fields": {
    "question": 1125,
    "text": "HTMX primarily relies on the server sending HTML fragments to update the UI, whereas SPAs typically fetch data (e.g., JSON) and render/update the UI on the client-side using JavaScript.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5623,
  "fields": {
    "question": 1125,
    "text": "HTMX uses a virtual DOM, while SPAs manipulate the real DOM directly.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5624,
  "fields": {
    "question": 1125,
    "text": "SPAs use HTML attributes for logic, while HTMX uses JavaScript functions.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5625,
  "fields": {
    "question": 1125,
    "text": "HTMX requires full page reloads for all updates, unlike SPAs.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5626,
  "fields": {
    "question": 1126,
    "text": "It enables swapping multiple targets using SSE.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5627,
  "fields": {
    "question": 1126,
    "text": "It indicates the name of the SSE event that should trigger the swap defined by <code>hx-swap</code>.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5628,
  "fields": {
    "question": 1126,
    "text": "It forces the SSE connection to close after the first message.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5629,
  "fields": {
    "question": 1126,
    "text": "It defines which swap method (innerHTML, outerHTML, etc.) to use for messages received *without* a specific event name.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5630,
  "fields": {
    "question": 1126,
    "text": "It specifies the URL for the SSE connection.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5631,
  "fields": {
    "question": 1127,
    "text": "HTMX does not support the POST method required for file uploads.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5632,
  "fields": {
    "question": 1127,
    "text": "HTMX encrypts file data, making it unreadable on the server.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5633,
  "fields": {
    "question": 1127,
    "text": "File uploads inherently require a full page refresh by browser design.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5634,
  "fields": {
    "question": 1127,
    "text": "Standard XMLHttpRequest (used by HTMX) cannot easily handle <code>multipart/form-data</code> submission for partial swaps without workarounds like using an iframe.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5635,
  "fields": {
    "question": 1127,
    "text": "Django views cannot process <code>request.FILES</code> from HTMX requests.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5636,
  "fields": {
    "question": 1128,
    "text": "Using <code>hx-include</code> to pull content from another part of the page into the modal.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5637,
  "fields": {
    "question": 1128,
    "text": "Employing WebSockets to push modal content from the server.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5638,
  "fields": {
    "question": 1128,
    "text": "Attaching <code>hx-get</code> to a button, targeting a modal container div, and having the view return the HTML content for the modal body.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5639,
  "fields": {
    "question": 1128,
    "text": "Pre-rendering all modals as hidden divs and using CSS to show them.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5640,
  "fields": {
    "question": 1128,
    "text": "Using <code>hx-on:click</code> to call a JavaScript function that builds the modal.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5641,
  "fields": {
    "question": 1129,
    "text": "Caching is handled automatically by the HTMX JavaScript library.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5642,
  "fields": {
    "question": 1129,
    "text": "Yes, but it requires custom middleware specifically for HTMX caching.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5643,
  "fields": {
    "question": 1129,
    "text": "No, caching only works for full page loads.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5644,
  "fields": {
    "question": 1129,
    "text": "Only if the HTMX request uses the GET method.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5645,
  "fields": {
    "question": 1129,
    "text": "Yes, caching can be applied to HTMX views just like regular views, potentially caching the generated HTML fragments.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5646,
  "fields": {
    "question": 1130,
    "text": "SSE requires HTTP/2, while WebSockets work over HTTP/1.1.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5647,
  "fields": {
    "question": 1130,
    "text": "Both are strictly client-to-server communication methods.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5648,
  "fields": {
    "question": 1130,
    "text": "There is no fundamental difference; they are interchangeable.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5649,
  "fields": {
    "question": 1130,
    "text": "SSE is client-to-server only; WebSockets are server-to-client only.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5650,
  "fields": {
    "question": 1130,
    "text": "SSE is primarily server-to-client; WebSockets allow bidirectional communication (client-to-server and server-to-client).",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5651,
  "fields": {
    "question": 1131,
    "text": "<code>hx-bidirectional</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5652,
  "fields": {
    "question": 1131,
    "text": "<code>hx-socket</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5653,
  "fields": {
    "question": 1131,
    "text": "<code>hx-connect</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5654,
  "fields": {
    "question": 1131,
    "text": "<code>hx-ws</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5655,
  "fields": {
    "question": 1131,
    "text": "<code>hx-sse</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5656,
  "fields": {
    "question": 1132,
    "text": "Check the <code>response.headers[&#x27;HX-Swap-OOB&#x27;]</code>.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5657,
  "fields": {
    "question": 1132,
    "text": "The test client provides a specific <code>response.oob_content</code> attribute.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5658,
  "fields": {
    "question": 1132,
    "text": "It's automatically included in <code>response.content</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5659,
  "fields": {
    "question": 1132,
    "text": "You need to parse the full <code>response.content</code> HTML and look for elements with the <code>hx-swap-oob</code> attribute.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5660,
  "fields": {
    "question": 1132,
    "text": "Out-of-band content cannot be easily tested with the standard test client.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5661,
  "fields": {
    "question": 1133,
    "text": "Only validating data if the request method is POST.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5662,
  "fields": {
    "question": 1133,
    "text": "Trusting the data because HTMX sanitizes it on the client-side.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5663,
  "fields": {
    "question": 1133,
    "text": "Assuming data is safe if the request includes a valid CSRF token.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5664,
  "fields": {
    "question": 1133,
    "text": "Performing thorough input validation and sanitization on the server-side using Django forms or other validation techniques.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5665,
  "fields": {
    "question": 1133,
    "text": "Disabling validation for partial requests to improve speed.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5666,
  "fields": {
    "question": 1134,
    "text": "<code>htmx:beforeRequest</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5667,
  "fields": {
    "question": 1134,
    "text": "<code>htmx:responseError</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5668,
  "fields": {
    "question": 1134,
    "text": "<code>htmx:sendError</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5669,
  "fields": {
    "question": 1134,
    "text": "<code>htmx:afterSwap</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5670,
  "fields": {
    "question": 1134,
    "text": "<code>htmx:beforeSwap</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5671,
  "fields": {
    "question": 1135,
    "text": "It allows targeting specific elements for updates anywhere on the page, even outside the main target, keeping the primary response focused and potentially smaller.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5672,
  "fields": {
    "question": 1135,
    "text": "It bypasses the standard HTMX swapping mechanism for faster updates.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5673,
  "fields": {
    "question": 1135,
    "text": "It automatically handles JavaScript initialization for the swapped content.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5674,
  "fields": {
    "question": 1135,
    "text": "It forces a full page reload, ensuring consistency.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5675,
  "fields": {
    "question": 1135,
    "text": "It encrypts the data being swapped for security.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5676,
  "fields": {
    "question": 1136,
    "text": "It eliminates the need for Django template tags.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5677,
  "fields": {
    "question": 1136,
    "text": "It allows returning just the updated fragment of HTML, reducing payload size and improving maintainability.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5678,
  "fields": {
    "question": 1136,
    "text": "It forces the use of Class-Based Views.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5679,
  "fields": {
    "question": 1136,
    "text": "It automatically adds caching to the included templates.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5680,
  "fields": {
    "question": 1136,
    "text": "It significantly reduces the number of views needed.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5681,
  "fields": {
    "question": 1137,
    "text": "Immediately on every keyup event.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5682,
  "fields": {
    "question": 1137,
    "text": "Only when the element loses focus after a keyup event.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5683,
  "fields": {
    "question": 1137,
    "text": "500ms after the last keyup event if the input value has changed since the last event.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5684,
  "fields": {
    "question": 1137,
    "text": "Only after the input value has changed, ignoring the delay.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5685,
  "fields": {
    "question": 1137,
    "text": "500ms after every keyup event.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5686,
  "fields": {
    "question": 1138,
    "text": "When the application requires basic CRUD operations.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5687,
  "fields": {
    "question": 1138,
    "text": "When the goal is to minimize the amount of JavaScript written.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5688,
  "fields": {
    "question": 1138,
    "text": "For applications with extremely complex, highly interactive, and stateful client-side interfaces where managing state in JS is beneficial, or for native-like app experiences.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5689,
  "fields": {
    "question": 1138,
    "text": "When the development team prefers writing Python over JavaScript.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5690,
  "fields": {
    "question": 1138,
    "text": "When SEO is the absolute top priority and server-rendered HTML is essential.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5691,
  "fields": {
    "question": 1139,
    "text": "To specify the event that triggers the main HTMX request (similar to <code>hx-trigger</code>).",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5692,
  "fields": {
    "question": 1139,
    "text": "To conditionally trigger requests based on JS expressions.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5693,
  "fields": {
    "question": 1139,
    "text": "To execute inline JavaScript code in response to standard browser events or HTMX lifecycle events.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5694,
  "fields": {
    "question": 1139,
    "text": "To turn on or off HTMX processing for an element.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5695,
  "fields": {
    "question": 1139,
    "text": "To define custom server-side event handlers.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5696,
  "fields": {
    "question": 1140,
    "text": "It pushes the URL of the target element into the browser's history.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5697,
  "fields": {
    "question": 1140,
    "text": "It forces a full page reload to the requested URL.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5698,
  "fields": {
    "question": 1140,
    "text": "It pushes the URL of the request into the browser's history stack.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5699,
  "fields": {
    "question": 1140,
    "text": "It prevents the URL from changing in the browser bar.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5700,
  "fields": {
    "question": 1140,
    "text": "It replaces the current history entry with the new URL.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5701,
  "fields": {
    "question": 1141,
    "text": "Every 5 seconds, continuously.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5702,
  "fields": {
    "question": 1141,
    "text": "This is not a valid HTMX trigger format.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5703,
  "fields": {
    "question": 1141,
    "text": "Only once, 5 seconds after the page loads.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5704,
  "fields": {
    "question": 1141,
    "text": "5 seconds after the previous request completes.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5705,
  "fields": {
    "question": 1141,
    "text": "Only when the element gains focus, then every 5 seconds.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5706,
  "fields": {
    "question": 1142,
    "text": "To bypass the Django templating engine.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5707,
  "fields": {
    "question": 1142,
    "text": "To define new custom attributes that encapsulate specific client-side behaviors or interactions related to HTMX requests.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5708,
  "fields": {
    "question": 1142,
    "text": "To automatically secure HTMX endpoints.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5709,
  "fields": {
    "question": 1142,
    "text": "To create alternative server communication protocols.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5710,
  "fields": {
    "question": 1142,
    "text": "To replace the need for Django views.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5711,
  "fields": {
    "question": 1143,
    "text": "Using Django sessions or database models to persist state across requests.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5712,
  "fields": {
    "question": 1143,
    "text": "Using client-side cookies manipulated by JavaScript.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5713,
  "fields": {
    "question": 1143,
    "text": "Using JavaScript's <code>localStorage</code> or <code>sessionStorage</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5714,
  "fields": {
    "question": 1143,
    "text": "Storing state in hidden input fields within the HTML returned by HTMX.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5715,
  "fields": {
    "question": 1143,
    "text": "Passing state via URL query parameters updated by <code>hx-push-url</code>.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5716,
  "fields": {
    "question": 1144,
    "text": "Django Channels for managing drag state.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5717,
  "fields": {
    "question": 1144,
    "text": "WebSockets for real-time position updates.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5718,
  "fields": {
    "question": 1144,
    "text": "Server-Sent Events (SSE) for tracking drop positions.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5719,
  "fields": {
    "question": 1144,
    "text": "Pure CSS animations.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5720,
  "fields": {
    "question": 1144,
    "text": "A JavaScript library (like SortableJS or native JS drag events) to handle the actual dragging interaction, while HTMX handles server communication on drop.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5721,
  "fields": {
    "question": 1145,
    "text": "<code>hx-update-extra</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5722,
  "fields": {
    "question": 1145,
    "text": "<code>hx-target-multiple</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5723,
  "fields": {
    "question": 1145,
    "text": "<code>hx-select-oob</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5724,
  "fields": {
    "question": 1145,
    "text": "<code>hx-multi-swap</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5725,
  "fields": {
    "question": 1145,
    "text": "<code>hx-swap-oob=\"true\"</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5726,
  "fields": {
    "question": 1146,
    "text": "Require a full form submission to process removals.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5727,
  "fields": {
    "question": 1146,
    "text": "Have a \"remove\" button trigger an HTMX request (e.g., DELETE or POST) to a view that processes the removal, often returning an empty response or a confirmation message, and use <code>hx-target</code> on the row itself with <code>hx-swap=&quot;delete&quot;</code> or swap outerHTML.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5728,
  "fields": {
    "question": 1146,
    "text": "Send a WebSocket message to the server to indicate removal.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5729,
  "fields": {
    "question": 1146,
    "text": "Use JavaScript to hide the row and update a hidden counter.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5730,
  "fields": {
    "question": 1146,
    "text": "Use <code>hx-select</code> to remove the row directly from the DOM without server interaction.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5731,
  "fields": {
    "question": 1147,
    "text": "By using JavaScript to clone an existing form row and update its indices.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5732,
  "fields": {
    "question": 1147,
    "text": "HTMX cannot handle formsets directly; a full page refresh is required.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5733,
  "fields": {
    "question": 1147,
    "text": "By having a button with an <code>hx-post</code> attribute that calls a Django view, which returns the HTML for a new, empty form row with the correct prefix/index.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5734,
  "fields": {
    "question": 1147,
    "text": "By using <code>hx-swap-oob</code> to insert a pre-rendered row from a hidden template tag.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5735,
  "fields": {
    "question": 1147,
    "text": "By using <code>hx-select</code> to extract a new form row from the current page's HTML.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5736,
  "fields": {
    "question": 1148,
    "text": "To synchronize requests across multiple different elements.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5737,
  "fields": {
    "question": 1148,
    "text": "To control how HTMX handles concurrent requests issued from the same element.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5738,
  "fields": {
    "question": 1148,
    "text": "To ensure CSS transitions are synchronized with content swaps.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5739,
  "fields": {
    "question": 1148,
    "text": "To synchronize data between the client and server automatically.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5740,
  "fields": {
    "question": 1148,
    "text": "To push the current URL to the browser's history stack.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5741,
  "fields": {
    "question": 1149,
    "text": "A full HTML login page.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5742,
  "fields": {
    "question": 1149,
    "text": "A 204 No Content response.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5743,
  "fields": {
    "question": 1149,
    "text": "A 500 Internal Server Error.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5744,
  "fields": {
    "question": 1149,
    "text": "An empty 200 OK response.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5745,
  "fields": {
    "question": 1149,
    "text": "A 403 Forbidden status code, possibly with a minimal error message suitable for swapping into the target area, or trigger a client-side redirect via <code>HX-Redirect</code>.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5746,
  "fields": {
    "question": 1150,
    "text": "Channels replaces the need for HTMX when implementing real-time features.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5747,
  "fields": {
    "question": 1150,
    "text": "Channels is a JavaScript library that connects HTMX to the server.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5748,
  "fields": {
    "question": 1150,
    "text": "Channels provides the underlying asynchronous infrastructure needed for Django to handle persistent connections like SSE and WebSockets.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5749,
  "fields": {
    "question": 1150,
    "text": "Channels automatically converts standard Django views into real-time endpoints.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5750,
  "fields": {
    "question": 1150,
    "text": "Channels directly generates HTMX attributes for real-time updates.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5751,
  "fields": {
    "question": 1151,
    "text": "Mocking the HTMX JavaScript library effectively.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5752,
  "fields": {
    "question": 1151,
    "text": "Ensuring correct status codes are returned.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5753,
  "fields": {
    "question": 1151,
    "text": "Verifying that the intermediate and final DOM states are as expected after each step in the sequence.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5754,
  "fields": {
    "question": 1151,
    "text": "Setting the correct <code>HX-Trigger</code> header in tests.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5755,
  "fields": {
    "question": 1151,
    "text": "Testing performance bottlenecks in the Django ORM.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5756,
  "fields": {
    "question": 1152,
    "text": "It pushes the specified URL onto the browser's history stack, similar to <code>hx-push-url=&quot;true&quot;</code>.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5757,
  "fields": {
    "question": 1152,
    "text": "It prevents the current URL from being pushed to history.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5758,
  "fields": {
    "question": 1152,
    "text": "It has no effect unless <code>hx-push-url</code> is also set on the client.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5759,
  "fields": {
    "question": 1152,
    "text": "It redirects the browser immediately to that URL.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5760,
  "fields": {
    "question": 1152,
    "text": "It triggers a JavaScript alert with the URL.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5761,
  "fields": {
    "question": 1153,
    "text": "The database will receive more write operations.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5762,
  "fields": {
    "question": 1153,
    "text": "The server CPU usage might increase significantly.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5763,
  "fields": {
    "question": 1153,
    "text": "Different users might receive the same cached partial, potentially leaking data or showing incorrect information if the content is user-specific.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5764,
  "fields": {
    "question": 1153,
    "text": "The cache might expire too quickly.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5765,
  "fields": {
    "question": 1153,
    "text": "HTMX might refuse to swap the cached content.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5766,
  "fields": {
    "question": 1154,
    "text": "Partial responses might inadvertently include sensitive data (e.g., user IDs, internal comments, data the current user shouldn't see) within the HTML fragment.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5767,
  "fields": {
    "question": 1154,
    "text": "Using <code>hx-swap-oob</code> can leak data between different users.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5768,
  "fields": {
    "question": 1154,
    "text": "The <code>hx-select</code> attribute can be exploited to request sensitive server files.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5769,
  "fields": {
    "question": 1154,
    "text": "There are no significant information disclosure risks specific to HTMX partials.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5770,
  "fields": {
    "question": 1154,
    "text": "HTMX might accidentally expose browser history.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5771,
  "fields": {
    "question": 1155,
    "text": "<code>htmx:responseError</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5772,
  "fields": {
    "question": 1155,
    "text": "<code>htmx:load</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5773,
  "fields": {
    "question": 1155,
    "text": "<code>htmx:beforeRequest</code> (by calling <code>event.preventDefault()</code>)",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5774,
  "fields": {
    "question": 1155,
    "text": "<code>htmx:afterSwap</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5775,
  "fields": {
    "question": 1155,
    "text": "<code>htmx:configRequest</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5776,
  "fields": {
    "question": 1156,
    "text": "<code>hx-ws</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5777,
  "fields": {
    "question": 1156,
    "text": "<code>hx-event-stream</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5778,
  "fields": {
    "question": 1156,
    "text": "<code>hx-sse</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5779,
  "fields": {
    "question": 1156,
    "text": "<code>hx-json-enc</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5780,
  "fields": {
    "question": 1156,
    "text": "<code>hx-realtime</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5781,
  "fields": {
    "question": 1157,
    "text": "Choose which element triggers the request.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5782,
  "fields": {
    "question": 1157,
    "text": "Select which HTTP method to use (GET, POST, etc.).",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5783,
  "fields": {
    "question": 1157,
    "text": "Extract only a specific part of the HTML response (using a CSS selector) before swapping it into the DOM.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5784,
  "fields": {
    "question": 1157,
    "text": "Prefetch content before the user clicks.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5785,
  "fields": {
    "question": 1157,
    "text": "Select the target element for the swap dynamically.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5786,
  "fields": {
    "question": 1158,
    "text": "They are used instead of Django templates.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5787,
  "fields": {
    "question": 1158,
    "text": "They provide complex server-side rendering capabilities.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5788,
  "fields": {
    "question": 1158,
    "text": "They replace HTMX for server communication.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5789,
  "fields": {
    "question": 1158,
    "text": "They handle purely client-side interactivity (like dropdowns, modals, toggles) within HTML fragments loaded by HTMX.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5790,
  "fields": {
    "question": 1158,
    "text": "They manage backend database interactions.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5791,
  "fields": {
    "question": 1159,
    "text": "Often stored in the Django session on the server-side or passed via hidden fields in subsequent forms.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5792,
  "fields": {
    "question": 1159,
    "text": "HTMX automatically manages multi-step form state.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5793,
  "fields": {
    "question": 1159,
    "text": "In HTML5 <code>localStorage</code> exclusively.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5794,
  "fields": {
    "question": 1159,
    "text": "Entirely within the client-side JavaScript variables.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5795,
  "fields": {
    "question": 1159,
    "text": "Directly in the browser's URL using <code>hx-push-url</code>.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5796,
  "fields": {
    "question": 1160,
    "text": "Always return the full HTML page and let HTMX select the relevant part.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5797,
  "fields": {
    "question": 1160,
    "text": "Embed all data as JSON within the HTML response.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5798,
  "fields": {
    "question": 1160,
    "text": "Use <code>hx-select</code> on the client-side to trim down large responses.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5799,
  "fields": {
    "question": 1160,
    "text": "Design Django views to return only the necessary minimal HTML fragment required for the update, possibly using separate partial templates.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5800,
  "fields": {
    "question": 1160,
    "text": "Compress the entire HTML response using gzip.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5801,
  "fields": {
    "question": 1161,
    "text": "Projects where the team primarily consists of frontend JavaScript specialists.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5802,
  "fields": {
    "question": 1161,
    "text": "Enhancing existing server-rendered Django applications with dynamic UI updates without requiring a full rewrite or heavy JavaScript framework.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5803,
  "fields": {
    "question": 1161,
    "text": "Applications that need to render graphics using WebGL.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5804,
  "fields": {
    "question": 1161,
    "text": "Building complex, offline-first progressive web applications (PWAs).",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5805,
  "fields": {
    "question": 1161,
    "text": "Applications requiring heavy, real-time, client-side state management across many components.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5806,
  "fields": {
    "question": 1162,
    "text": "Requiring users to have modern browsers that fully support HTMX.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5807,
  "fields": {
    "question": 1162,
    "text": "The application provides core functionality using standard HTML forms and links (working without JavaScript/HTMX), and HTMX is layered on top to enhance the user experience.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5808,
  "fields": {
    "question": 1162,
    "text": "Using the very latest HTMX features for all interactions.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5809,
  "fields": {
    "question": 1162,
    "text": "Building the application entirely with JavaScript first, then adding HTMX.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5810,
  "fields": {
    "question": 1162,
    "text": "The application only works if both JavaScript and HTMX are enabled.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5811,
  "fields": {
    "question": 1163,
    "text": "Using <code>hx-target</code> to target smaller elements.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5812,
  "fields": {
    "question": 1163,
    "text": "The <code>delay</code> or <code>throttle</code> modifiers within the <code>hx-trigger</code> attribute.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5813,
  "fields": {
    "question": 1163,
    "text": "Setting <code>hx-boost=&quot;true&quot;</code> on parent elements.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5814,
  "fields": {
    "question": 1163,
    "text": "<code>hx-swap</code> with a long transition time.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5815,
  "fields": {
    "question": 1163,
    "text": "Using <code>hx-push-url</code> extensively.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5816,
  "fields": {
    "question": 1164,
    "text": "<code>Accept: application/json</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5817,
  "fields": {
    "question": 1164,
    "text": "<code>X-Requested-With: XMLHttpRequest</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5818,
  "fields": {
    "question": 1164,
    "text": "<code>HX-Request: true</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5819,
  "fields": {
    "question": 1164,
    "text": "<code>Content-Type: text/html-partial</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5820,
  "fields": {
    "question": 1164,
    "text": "<code>User-Agent: HTMX TestClient</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5821,
  "fields": {
    "question": 1165,
    "text": "Using pip install and importing in settings.py.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5822,
  "fields": {
    "question": 1165,
    "text": "Via an iframe and using a browser extension.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5823,
  "fields": {
    "question": 1165,
    "text": "Using a CDN link in the HTML or including it as a static file.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5824,
  "fields": {
    "question": 1165,
    "text": "Compiling it with Webpack and embedding it in the base template.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5825,
  "fields": {
    "question": 1165,
    "text": "Via a direct database connection and through Django middleware.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5826,
  "fields": {
    "question": 1166,
    "text": "Only if combined directly with HTMX validation attributes.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5827,
  "fields": {
    "question": 1166,
    "text": "No, input masking requires server-side logic.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5828,
  "fields": {
    "question": 1166,
    "text": "Input masking is exclusively a CSS feature.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5829,
  "fields": {
    "question": 1166,
    "text": "Yes, but only through the Alpine.js DevTools extension.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5830,
  "fields": {
    "question": 1166,
    "text": "Yes, using directives like <code>x-model</code> and potentially custom functions within <code>x-data</code> or <code>x-init</code> to format the input value.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5831,
  "fields": {
    "question": 1167,
    "text": "<code>x-data</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5832,
  "fields": {
    "question": 1167,
    "text": "<code>x-html</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5833,
  "fields": {
    "question": 1167,
    "text": "<code>x-on</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5834,
  "fields": {
    "question": 1167,
    "text": "<code>x-text</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5835,
  "fields": {
    "question": 1167,
    "text": "<code>x-bind</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5836,
  "fields": {
    "question": 1168,
    "text": "To handle the logic for toggling the menu's visibility (open/closed state) on button click.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5837,
  "fields": {
    "question": 1168,
    "text": "To fetch the menu items from the server dynamically based on screen size.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5838,
  "fields": {
    "question": 1168,
    "text": "To authenticate the user before showing the menu.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5839,
  "fields": {
    "question": 1168,
    "text": "To manage the server-side routing for each menu link.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5840,
  "fields": {
    "question": 1168,
    "text": "To define the responsive CSS breakpoints for the menu.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5841,
  "fields": {
    "question": 1169,
    "text": "Check the Django server logs for an \"Alpine Initialized\" message.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5842,
  "fields": {
    "question": 1169,
    "text": "Inspect the network tab for a specific handshake request from Alpine.js.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5843,
  "fields": {
    "question": 1169,
    "text": "Look for a global JavaScript variable named <code>Alpine</code> in the browser console.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5844,
  "fields": {
    "question": 1169,
    "text": "Add a simple directive like <code>x-data</code> and check if its associated behavior works (e.g., using <code>x-text</code> or <code>x-show</code>).",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5845,
  "fields": {
    "question": 1169,
    "text": "Run a specific command like <code>python manage.py check_alpine</code>.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5846,
  "fields": {
    "question": 1170,
    "text": "Checking if the username already exists in the database.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5847,
  "fields": {
    "question": 1170,
    "text": "Generating a CSRF token for the form.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5848,
  "fields": {
    "question": 1170,
    "text": "Performing the final server-side validation.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5849,
  "fields": {
    "question": 1170,
    "text": "Indicating password strength visually based on input length or complexity.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5850,
  "fields": {
    "question": 1170,
    "text": "Saving the form data to the server prematurely.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5851,
  "fields": {
    "question": 1171,
    "text": "Browser Developer Tools (specifically, inspecting the element and its associated data or using the Console).",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5852,
  "fields": {
    "question": 1171,
    "text": "The web server's access logs.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5853,
  "fields": {
    "question": 1171,
    "text": "Django debug toolbar.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5854,
  "fields": {
    "question": 1171,
    "text": "Writing state to <code>console.log</code> within Django views.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5855,
  "fields": {
    "question": 1171,
    "text": "Python's <code>pdb</code> debugger.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5856,
  "fields": {
    "question": 1172,
    "text": "To prevent the HTMX request from firing.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5857,
  "fields": {
    "question": 1172,
    "text": "To send additional data along with the HTMX request.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5858,
  "fields": {
    "question": 1172,
    "text": "To display a loading indicator element while the HTMX request is in progress.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5859,
  "fields": {
    "question": 1172,
    "text": "To replace the HTMX event handling mechanism.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5860,
  "fields": {
    "question": 1172,
    "text": "To directly update the server database based on the HTMX event.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5861,
  "fields": {
    "question": 1173,
    "text": "<code>x-bind:value</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5862,
  "fields": {
    "question": 1173,
    "text": "<code>x-content</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5863,
  "fields": {
    "question": 1173,
    "text": "<code>x-text</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5864,
  "fields": {
    "question": 1173,
    "text": "<code>x-html</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5865,
  "fields": {
    "question": 1173,
    "text": "<code>x-data</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5866,
  "fields": {
    "question": 1174,
    "text": "<code>x-data</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5867,
  "fields": {
    "question": 1174,
    "text": "<code>x-if</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5868,
  "fields": {
    "question": 1174,
    "text": "<code>x-model</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5869,
  "fields": {
    "question": 1174,
    "text": "<code>x-bind</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5870,
  "fields": {
    "question": 1174,
    "text": "<code>x-on:init</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5871,
  "fields": {
    "question": 1175,
    "text": "They are functionally identical, but <code>x-if</code> is preferred for performance.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5872,
  "fields": {
    "question": 1175,
    "text": "<code>x-if</code> uses CSS <code>visibility: hidden;</code>, while <code>x-show</code> removes/adds the element from/to the DOM.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5873,
  "fields": {
    "question": 1175,
    "text": "<code>x-show</code> only works on <code>&lt;template&gt;</code> tags, while <code>x-if</code> works on any element.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5874,
  "fields": {
    "question": 1175,
    "text": "<code>x-show</code> uses CSS <code>display: none;</code>, while <code>x-if</code> removes/adds the element from/to the DOM.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5875,
  "fields": {
    "question": 1175,
    "text": "<code>x-if</code> requires <code>x-data</code> on the same element, while <code>x-show</code> does not.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5876,
  "fields": {
    "question": 1176,
    "text": "It's a server-side templating engine for Python.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5877,
  "fields": {
    "question": 1176,
    "text": "It's a CSS preprocessor similar to SASS or LESS.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5878,
  "fields": {
    "question": 1176,
    "text": "It's a full-stack framework for building complex single-page applications.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5879,
  "fields": {
    "question": 1176,
    "text": "It's a lightweight, declarative JavaScript framework primarily for adding behavior to existing HTML.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5880,
  "fields": {
    "question": 1176,
    "text": "It's a database management tool.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5881,
  "fields": {
    "question": 1177,
    "text": "<code>&amp;click</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5882,
  "fields": {
    "question": 1177,
    "text": "<code>$click</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5883,
  "fields": {
    "question": 1177,
    "text": "<code>#click</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5884,
  "fields": {
    "question": 1177,
    "text": "<code>@click</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5885,
  "fields": {
    "question": 1177,
    "text": "<code>:click</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5886,
  "fields": {
    "question": 1178,
    "text": "It automatically generates HTMX attributes based on Django models.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5887,
  "fields": {
    "question": 1178,
    "text": "It handles server-side routing more efficiently than Django.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5888,
  "fields": {
    "question": 1178,
    "text": "It replaces the need for Django templates entirely.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5889,
  "fields": {
    "question": 1178,
    "text": "It provides complex state management features superior to React or Vue.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5890,
  "fields": {
    "question": 1178,
    "text": "It allows adding client-side interactivity with minimal setup and without a complex build process.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5891,
  "fields": {
    "question": 1179,
    "text": "<code>&lt;conditional&gt;</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5892,
  "fields": {
    "question": 1179,
    "text": "<code>&lt;script&gt;</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5893,
  "fields": {
    "question": 1179,
    "text": "<code>&lt;template&gt;</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5894,
  "fields": {
    "question": 1179,
    "text": "<code>&lt;div&gt;</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5895,
  "fields": {
    "question": 1179,
    "text": "<code>&lt;span&gt;</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5896,
  "fields": {
    "question": 1180,
    "text": "No, this requires a heavier framework like React or Vue.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5897,
  "fields": {
    "question": 1180,
    "text": "Yes, directives like <code>x-data</code>, <code>@mouseenter</code>, <code>@mouseleave</code>, and <code>x-show</code> can manage the visibility of such elements.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5898,
  "fields": {
    "question": 1180,
    "text": "No, Alpine.js only works with dynamic, data-driven components.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5899,
  "fields": {
    "question": 1180,
    "text": "Only if the tooltips are loaded via HTMX requests.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5900,
  "fields": {
    "question": 1180,
    "text": "Tooltips and popovers are exclusively CSS functionalities.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5901,
  "fields": {
    "question": 1181,
    "text": "Difficulty accessing expected state variables or unexpected behavior due to scope conflicts.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5902,
  "fields": {
    "question": 1181,
    "text": "Automatic integration with parent component state.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5903,
  "fields": {
    "question": 1181,
    "text": "Automatic conversion of nested components into Web Components.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5904,
  "fields": {
    "question": 1181,
    "text": "Enhanced security by isolating components.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5905,
  "fields": {
    "question": 1181,
    "text": "Improved performance due to data sharing.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5906,
  "fields": {
    "question": 1182,
    "text": "To execute JavaScript code once when a component is initialized.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5907,
  "fields": {
    "question": 1182,
    "text": "To handle click events on an element.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5908,
  "fields": {
    "question": 1182,
    "text": "To conditionally render an element.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5909,
  "fields": {
    "question": 1182,
    "text": "To bind an HTML attribute to component data.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5910,
  "fields": {
    "question": 1182,
    "text": "To define the initial data state for a component.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5911,
  "fields": {
    "question": 1183,
    "text": "In separate large JavaScript files organized by feature.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5912,
  "fields": {
    "question": 1183,
    "text": "Compiled into WebAssembly modules.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5913,
  "fields": {
    "question": 1183,
    "text": "Within Django view functions on the server.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5914,
  "fields": {
    "question": 1183,
    "text": "In external Web Component definitions.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5915,
  "fields": {
    "question": 1183,
    "text": "Directly within the HTML markup it affects.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5916,
  "fields": {
    "question": 1184,
    "text": "<code>x-data</code>, <code>x-bind</code>, and <code>x-text</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5917,
  "fields": {
    "question": 1184,
    "text": "<code>x-ref</code>, <code>x-cloak</code>, and <code>x-teleport</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5918,
  "fields": {
    "question": 1184,
    "text": "<code>x-transition</code>, <code>x-for</code>, and <code>x-effect</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5919,
  "fields": {
    "question": 1184,
    "text": "<code>x-data</code>, <code>x-on:click</code>, and <code>x-show</code> (or <code>x-if</code>)",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5920,
  "fields": {
    "question": 1184,
    "text": "<code>x-init</code>, <code>x-html</code>, and <code>x-model</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5921,
  "fields": {
    "question": 1185,
    "text": "<code>x-on:class=\"isOpen ? 'active' : ''\"</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5922,
  "fields": {
    "question": 1185,
    "text": "<code>class=\"alpine-active[isOpen]\"</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5923,
  "fields": {
    "question": 1185,
    "text": "<code>x-class:active=\"isOpen\"</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5924,
  "fields": {
    "question": 1185,
    "text": "<code>x-style=\"if (isOpen) return 'active';\"</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5925,
  "fields": {
    "question": 1185,
    "text": "<code>x-bind:class=\"{ 'active': isOpen }\"</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5926,
  "fields": {
    "question": 1186,
    "text": "Alpine.js generates the necessary HTMX attributes dynamically.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5927,
  "fields": {
    "question": 1186,
    "text": "Alpine.js primarily handles purely client-side UI state and enhancements (like toggles, dropdown states, loading indicators) while HTMX manages server communication.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5928,
  "fields": {
    "question": 1186,
    "text": "Alpine.js handles the server-side rendering part, and HTMX updates the DOM.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5929,
  "fields": {
    "question": 1186,
    "text": "Alpine.js replaces HTMX for making server requests.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5930,
  "fields": {
    "question": 1186,
    "text": "HTMX depends on Alpine.js for its core functionality.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5931,
  "fields": {
    "question": 1187,
    "text": "It makes the code easier for developers to understand, maintain, and debug.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5932,
  "fields": {
    "question": 1187,
    "text": "It reduces the final HTML output size.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5933,
  "fields": {
    "question": 1187,
    "text": "It's required by the Alpine.js parser.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5934,
  "fields": {
    "question": 1187,
    "text": "It improves JavaScript execution performance significantly.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5935,
  "fields": {
    "question": 1187,
    "text": "It allows Django to pre-compile Alpine components.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5936,
  "fields": {
    "question": 1188,
    "text": "Alpine.js and React/Vue serve identical purposes and are fully interchangeable.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5937,
  "fields": {
    "question": 1188,
    "text": "Alpine.js offers a virtual DOM implementation similar to React.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5938,
  "fields": {
    "question": 1188,
    "text": "Alpine.js requires a mandatory build step, unlike Vue or React.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5939,
  "fields": {
    "question": 1188,
    "text": "Alpine.js is much larger and more feature-rich.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5940,
  "fields": {
    "question": 1188,
    "text": "Alpine.js is significantly lighter and designed for \"sprinkling\" interactivity, whereas Vue/React often manage larger parts of the UI.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5941,
  "fields": {
    "question": 1189,
    "text": "When the data you want to display contains HTML markup that should be rendered.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5942,
  "fields": {
    "question": 1189,
    "text": "When displaying numbers instead of strings.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5943,
  "fields": {
    "question": 1189,
    "text": "When the text content needs to be fetched asynchronously.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5944,
  "fields": {
    "question": 1189,
    "text": "When binding to form input values.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5945,
  "fields": {
    "question": 1189,
    "text": "<code>x-html</code> is deprecated; <code>x-text</code> should always be used.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5946,
  "fields": {
    "question": 1190,
    "text": "<code>x-on:load</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5947,
  "fields": {
    "question": 1190,
    "text": "<code>x-if</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5948,
  "fields": {
    "question": 1190,
    "text": "<code>x-init</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5949,
  "fields": {
    "question": 1190,
    "text": "<code>x-bind:class</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5950,
  "fields": {
    "question": 1190,
    "text": "<code>x-text</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5951,
  "fields": {
    "question": 1191,
    "text": "Alpine directives must be added via JavaScript after the page loads.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5952,
  "fields": {
    "question": 1191,
    "text": "Directly add the <code>x-*</code> attributes to the HTML elements within your Django template files.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5953,
  "fields": {
    "question": 1191,
    "text": "By wrapping the entire Django template in an <code>x-django</code> directive.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5954,
  "fields": {
    "question": 1191,
    "text": "Configure Alpine.js in <code>settings.py</code> to automatically detect elements.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5955,
  "fields": {
    "question": 1191,
    "text": "By using special Django template tags like `{% alpine %}`.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5956,
  "fields": {
    "question": 1192,
    "text": "It provides a dedicated panel in the browser's developer tools to easily inspect component state and structure.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5957,
  "fields": {
    "question": 1192,
    "text": "It allows editing Django templates directly in the browser.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5958,
  "fields": {
    "question": 1192,
    "text": "It analyzes the performance impact of Alpine.js on the Django server.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5959,
  "fields": {
    "question": 1192,
    "text": "It replaces the need for the standard browser developer tools.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5960,
  "fields": {
    "question": 1192,
    "text": "It automatically fixes bugs in Alpine code.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5961,
  "fields": {
    "question": 1193,
    "text": "Alpine automatically detects Django context variables.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5962,
  "fields": {
    "question": 1193,
    "text": "Fetch the data using HTMX and then pass it to Alpine.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5963,
  "fields": {
    "question": 1193,
    "text": "Use a special <code>x-django-context</code> directive.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5964,
  "fields": {
    "question": 1193,
    "text": "Store the context in browser cookies for Alpine to read.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5965,
  "fields": {
    "question": 1193,
    "text": "Embed the Django context variable (often JSON-serialized) directly into the <code>x-data</code> attribute string within the template.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5966,
  "fields": {
    "question": 1194,
    "text": "Use only <code>x-bind:class</code> to toggle visibility classes.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5967,
  "fields": {
    "question": 1194,
    "text": "Rely entirely on CSS hover effects.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5968,
  "fields": {
    "question": 1194,
    "text": "Use <code>x-model</code> to bind the dropdown's visibility.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5969,
  "fields": {
    "question": 1194,
    "text": "Use <code>x-data</code> for open state, <code>@click</code> on the trigger to toggle state, and <code>x-show</code> on the menu content.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5970,
  "fields": {
    "question": 1194,
    "text": "Fetch the dropdown content using HTMX on every click.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5971,
  "fields": {
    "question": 1195,
    "text": "A complex 3D rendering engine.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5972,
  "fields": {
    "question": 1195,
    "text": "Server-side user authentication logic.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5973,
  "fields": {
    "question": 1195,
    "text": "Database schema migration.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5974,
  "fields": {
    "question": 1195,
    "text": "Real-time collaborative text editing.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5975,
  "fields": {
    "question": 1195,
    "text": "A simple client-side accordion or set of tabs.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5976,
  "fields": {
    "question": 1196,
    "text": "<code>x-listen</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5977,
  "fields": {
    "question": 1196,
    "text": "<code>x-bind</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5978,
  "fields": {
    "question": 1196,
    "text": "<code>x-on</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5979,
  "fields": {
    "question": 1196,
    "text": "<code>x-event</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5980,
  "fields": {
    "question": 1196,
    "text": "<code>x-trigger</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5981,
  "fields": {
    "question": 1197,
    "text": "Alpine cannot interact with elements modified by HTMX.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5982,
  "fields": {
    "question": 1197,
    "text": "Using <code>x-if</code> to remove the button entirely during the request.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5983,
  "fields": {
    "question": 1197,
    "text": "By adding a specific HTMX attribute like <code>hx-disable-during-request</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5984,
  "fields": {
    "question": 1197,
    "text": "Using <code>x-text</code> to change the button text to \"Loading...\".",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5985,
  "fields": {
    "question": 1197,
    "text": "Using <code>x-bind:disabled</code> linked to an Alpine state variable that's toggled during HTMX events.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5986,
  "fields": {
    "question": 1198,
    "text": "Validation of the item data on the server.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5987,
  "fields": {
    "question": 1198,
    "text": "The database query to fetch the item data.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5988,
  "fields": {
    "question": 1198,
    "text": "Local UI state specific to that item, like whether its details section is expanded or collapsed.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5989,
  "fields": {
    "question": 1198,
    "text": "The server-side rendering of the item template.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5990,
  "fields": {
    "question": 1198,
    "text": "The HTTP request headers for the HTMX call.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5991,
  "fields": {
    "question": 1199,
    "text": "<code>\\*attribute</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5992,
  "fields": {
    "question": 1199,
    "text": "<code>#attribute</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5993,
  "fields": {
    "question": 1199,
    "text": "<code>&amp;attribute</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5994,
  "fields": {
    "question": 1199,
    "text": "<code>:attribute</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5995,
  "fields": {
    "question": 1199,
    "text": "<code>@attribute</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5996,
  "fields": {
    "question": 1200,
    "text": "By binding <code>hx-disabled</code> attribute with Alpine state",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5997,
  "fields": {
    "question": 1200,
    "text": "In the Django view handling the POST",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5998,
  "fields": {
    "question": 1200,
    "text": "Using the <code>htmx:validate</code> event (which doesn't exist)",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 5999,
  "fields": {
    "question": 1200,
    "text": "Within an <code>x-effect</code> watching the form data",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6000,
  "fields": {
    "question": 1200,
    "text": "Inside an Alpine event handler (e.g., <code>x-on:submit</code>) that conditionally triggers the HTMX request or prevents form submission",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6001,
  "fields": {
    "question": 1201,
    "text": "Browser incompatibility issues",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6002,
  "fields": {
    "question": 1201,
    "text": "Maintaining code clarity and understanding the flow of control between the different layers (server-rendered, HTMX updates, Alpine reactivity)",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6003,
  "fields": {
    "question": 1201,
    "text": "Conflicts between CSS frameworks",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6004,
  "fields": {
    "question": 1201,
    "text": "Inability to use template inheritance",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6005,
  "fields": {
    "question": 1201,
    "text": "Performance degradation due to too many libraries",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6006,
  "fields": {
    "question": 1202,
    "text": "It offers built-in offline capabilities comparable to PWAs",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6007,
  "fields": {
    "question": 1202,
    "text": "It replaces the need for a database",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6008,
  "fields": {
    "question": 1202,
    "text": "It provides a way to build modern, interactive UIs while keeping much of the rendering logic and state management closer to the server (Django) compared to full SPAs",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6009,
  "fields": {
    "question": 1202,
    "text": "It eliminates the need for any JavaScript",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6010,
  "fields": {
    "question": 1202,
    "text": "It strictly enforces a component-based architecture like React",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6011,
  "fields": {
    "question": 1203,
    "text": "<code>x-if</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6012,
  "fields": {
    "question": 1203,
    "text": "<code>x-model</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6013,
  "fields": {
    "question": 1203,
    "text": "<code>x-show</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6014,
  "fields": {
    "question": 1203,
    "text": "<code>x-for</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6015,
  "fields": {
    "question": 1203,
    "text": "<code>x-bind</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6016,
  "fields": {
    "question": 1204,
    "text": "<code>Alpine.store</code> and `$dispatch`",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6017,
  "fields": {
    "question": 1204,
    "text": "<code>x-ref</code> and `$el`",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6018,
  "fields": {
    "question": 1204,
    "text": "<code>x-for</code> and <code>x-transition</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6019,
  "fields": {
    "question": 1204,
    "text": "<code>x-model</code> (for binding inputs) and <code>x-effect</code> or `$watch` (for reacting to changes and running validation rules)",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6020,
  "fields": {
    "question": 1204,
    "text": "<code>x-cloak</code> and <code>x-init</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6021,
  "fields": {
    "question": 1205,
    "text": "<code>x-style</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6022,
  "fields": {
    "question": 1205,
    "text": "<code>x-transition:class</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6023,
  "fields": {
    "question": 1205,
    "text": "<code>x-static-class</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6024,
  "fields": {
    "question": 1205,
    "text": "<code>x-show</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6025,
  "fields": {
    "question": 1205,
    "text": "<code>x-bind:class</code> or shorthand <code>:class</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6026,
  "fields": {
    "question": 1206,
    "text": "You must add <code>x-init</code> to the swapped container element",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6027,
  "fields": {
    "question": 1206,
    "text": "You must manually call <code>Alpine.start()</code> on the new content",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6028,
  "fields": {
    "question": 1206,
    "text": "You need to use the <code>htmx:alpine-init</code> event",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6029,
  "fields": {
    "question": 1206,
    "text": "Initialization only happens on full page loads",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6030,
  "fields": {
    "question": 1206,
    "text": "Alpine.js automatically detects and initializes new components within the swapped content",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6031,
  "fields": {
    "question": 1207,
    "text": "<code>htmx:configRequest</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6032,
  "fields": {
    "question": 1207,
    "text": "<code>htmx:sendError</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6033,
  "fields": {
    "question": 1207,
    "text": "<code>htmx:load</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6034,
  "fields": {
    "question": 1207,
    "text": "<code>htmx:afterSwap</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6035,
  "fields": {
    "question": 1207,
    "text": "<code>htmx:beforeRequest</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6036,
  "fields": {
    "question": 1208,
    "text": "The version of Django being used",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6037,
  "fields": {
    "question": 1208,
    "text": "The availability of Alpine.js plugins",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6038,
  "fields": {
    "question": 1208,
    "text": "The user experience impact (responsiveness vs. server load) and complexity of state management",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6039,
  "fields": {
    "question": 1208,
    "text": "The number of lines of JavaScript code",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6040,
  "fields": {
    "question": 1208,
    "text": "Whether the logic involves database access (always server-side)",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6041,
  "fields": {
    "question": 1209,
    "text": "Dispatch an event that HTMX listens for, e.g., `$el.dispatchEvent(new Event('click'))` or `$el.dispatchEvent(new Event('htmx:trigger'))`",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6042,
  "fields": {
    "question": 1209,
    "text": "Use `$el.click()` if the trigger is <code>click</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6043,
  "fields": {
    "question": 1209,
    "text": "Call `htmx.request($el)`",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6044,
  "fields": {
    "question": 1209,
    "text": "Modify the <code>hx-trigger</code> attribute to <code>load</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6045,
  "fields": {
    "question": 1209,
    "text": "Set an Alpine state variable bound to <code>hx-trigger</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6046,
  "fields": {
    "question": 1210,
    "text": "Avoiding Django template includes",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6047,
  "fields": {
    "question": 1210,
    "text": "Storing all application state within <code>Alpine.store</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6048,
  "fields": {
    "question": 1210,
    "text": "Clearly separating concerns: Django for backend logic/initial render, HTMX for server interactions/partials, Alpine for client-side interactivity and complex UI state",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6049,
  "fields": {
    "question": 1210,
    "text": "Using HTMX for all DOM manipulations, even simple toggles",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6050,
  "fields": {
    "question": 1210,
    "text": "Writing all Alpine logic inline within <code>x-data</code> attributes",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6051,
  "fields": {
    "question": 1211,
    "text": "Using <code>x-ref</code> on the external script tag",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6052,
  "fields": {
    "question": 1211,
    "text": "Alpine components are completely isolated and cannot communicate externally",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6053,
  "fields": {
    "question": 1211,
    "text": "Using standard browser mechanisms like Custom Events dispatched/listened to on <code>window</code> or a shared DOM element",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6054,
  "fields": {
    "question": 1211,
    "text": "Modifying <code>Alpine.store</code> from the external JavaScript",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6055,
  "fields": {
    "question": 1211,
    "text": "Directly calling Alpine functions like <code>Alpine.data()</code> from external JS",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6056,
  "fields": {
    "question": 1212,
    "text": "To apply CSS transitions",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6057,
  "fields": {
    "question": 1212,
    "text": "To conditionally render an element",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6058,
  "fields": {
    "question": 1212,
    "text": "To iterate over a list of items",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6059,
  "fields": {
    "question": 1212,
    "text": "To access the underlying DOM element directly",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6060,
  "fields": {
    "question": 1212,
    "text": "To establish two-way data binding between an input element and component state",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6061,
  "fields": {
    "question": 1213,
    "text": "Implementing proper ARIA attributes (e.g., <code>aria-expanded</code>, <code>aria-hidden</code>) and managing keyboard navigation (e.g., focus trapping, Escape key closure)",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6062,
  "fields": {
    "question": 1213,
    "text": "Minimizing the use of <code>x-ref</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6063,
  "fields": {
    "question": 1213,
    "text": "Using bright colors for visibility",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6064,
  "fields": {
    "question": 1213,
    "text": "Using <code>x-transition</code> for smooth animations",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6065,
  "fields": {
    "question": 1213,
    "text": "Storing all state in <code>Alpine.store</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6066,
  "fields": {
    "question": 1214,
    "text": "<code>x-for</code> and <code>x-ref</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6067,
  "fields": {
    "question": 1214,
    "text": "<code>x-model</code> and <code>x-bind</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6068,
  "fields": {
    "question": 1214,
    "text": "<code>x-show</code> and <code>x-if</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6069,
  "fields": {
    "question": 1214,
    "text": "<code>x-data</code> and <code>x-init</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6070,
  "fields": {
    "question": 1214,
    "text": "<code>x-on</code> and <code>x-effect</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6071,
  "fields": {
    "question": 1215,
    "text": "This requires custom JavaScript outside of Alpine/HTMX",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6072,
  "fields": {
    "question": 1215,
    "text": "Using <code>x-effect</code> to modify the DOM directly",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6073,
  "fields": {
    "question": 1215,
    "text": "Using <code>hx-vars</code> attribute",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6074,
  "fields": {
    "question": 1215,
    "text": "Setting <code>htmx.config.defaultUrl</code> in Alpine",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6075,
  "fields": {
    "question": 1215,
    "text": "Using <code>x-bind:hx-get=\"variableContainingUrl\"</code> or <code>:hx-post=\"anotherUrlVar\"</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6076,
  "fields": {
    "question": 1216,
    "text": "To disable an Alpine component temporarily",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6077,
  "fields": {
    "question": 1216,
    "text": "To apply a visual cloak effect using CSS",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6078,
  "fields": {
    "question": 1216,
    "text": "To hide elements until Alpine.js has finished initializing, preventing a \"flash\" of unstyled/uninitialized content",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6079,
  "fields": {
    "question": 1216,
    "text": "To encrypt sensitive data within the component",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6080,
  "fields": {
    "question": 1216,
    "text": "To prevent HTMX requests from firing too quickly",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6081,
  "fields": {
    "question": 1217,
    "text": "Using only inline expressions for all logic",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6082,
  "fields": {
    "question": 1217,
    "text": "Putting all state into <code>Alpine.store</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6083,
  "fields": {
    "question": 1217,
    "text": "Breaking down the UI into smaller, nested components with localized state",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6084,
  "fields": {
    "question": 1217,
    "text": "Avoiding state management altogether",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6085,
  "fields": {
    "question": 1217,
    "text": "Storing all state in HTML data attributes",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6086,
  "fields": {
    "question": 1218,
    "text": "Making UI updates using CSS transitions triggered by HTMX",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6087,
  "fields": {
    "question": 1218,
    "text": "Assuming the server request will fail and showing an error state immediately",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6088,
  "fields": {
    "question": 1218,
    "text": "Deferring UI updates until the next browser animation frame",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6089,
  "fields": {
    "question": 1218,
    "text": "Updating the UI in Alpine immediately as if the HTMX request was successful, then confirming or reverting based on the actual server response",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6090,
  "fields": {
    "question": 1218,
    "text": "Updating the UI only after receiving explicit confirmation from the server",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6091,
  "fields": {
    "question": 1219,
    "text": "Whenever you need to make AJAX requests",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6092,
  "fields": {
    "question": 1219,
    "text": "For simple CRUD applications with basic forms",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6093,
  "fields": {
    "question": 1219,
    "text": "If you prefer writing Python code",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6094,
  "fields": {
    "question": 1219,
    "text": "When building highly interactive, state-intensive single-page applications (SPAs) with complex offline requirements or real-time features beyond simple polling/SSE",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6095,
  "fields": {
    "question": 1219,
    "text": "For applications requiring server-side rendering",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6096,
  "fields": {
    "question": 1220,
    "text": "To execute a piece of code whenever one of its dependent reactive properties changes",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6097,
  "fields": {
    "question": 1220,
    "text": "To run code only once when the component initializes",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6098,
  "fields": {
    "question": 1220,
    "text": "To handle user input events like clicks",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6099,
  "fields": {
    "question": 1220,
    "text": "To define the initial state of the component",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6100,
  "fields": {
    "question": 1220,
    "text": "To bind component data to HTML attributes",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6101,
  "fields": {
    "question": 1221,
    "text": "<code>window.dispatchEvent('user-updated')</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6102,
  "fields": {
    "question": 1221,
    "text": "<code>Alpine.dispatch('user-updated')</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6103,
  "fields": {
    "question": 1221,
    "text": "<code>this.emit('user-updated')</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6104,
  "fields": {
    "question": 1221,
    "text": "<code>$event('user-updated')</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6105,
  "fields": {
    "question": 1221,
    "text": "<code>$dispatch('user-updated')</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6106,
  "fields": {
    "question": 1222,
    "text": "Let HTMX handle the chart updates directly",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6107,
  "fields": {
    "question": 1222,
    "text": "This integration is not feasible",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6108,
  "fields": {
    "question": 1222,
    "text": "Bind Alpine data directly to the chart's configuration using <code>x-model</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6109,
  "fields": {
    "question": 1222,
    "text": "Use <code>x-init</code> to initialize the chart library on a specific element (maybe using <code>x-ref</code>) and use <code>x-effect</code> or `$watch` to update the chart when Alpine data changes",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6110,
  "fields": {
    "question": 1222,
    "text": "Embed the chart's script tag inside an <code>x-for</code> loop",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6111,
  "fields": {
    "question": 1223,
    "text": "<code>$watch</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6112,
  "fields": {
    "question": 1223,
    "text": "<code>$el</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6113,
  "fields": {
    "question": 1223,
    "text": "<code>$data</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6114,
  "fields": {
    "question": 1223,
    "text": "<code>$refs</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6115,
  "fields": {
    "question": 1223,
    "text": "<code>$store</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6116,
  "fields": {
    "question": 1224,
    "text": "Using the <code>$el</code> magic property for all elements",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6117,
  "fields": {
    "question": 1224,
    "text": "Using the <code>x-bind:ref</code> syntax",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6118,
  "fields": {
    "question": 1224,
    "text": "Using <code>document.querySelector()</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6119,
  "fields": {
    "question": 1224,
    "text": "Using <code>getElementById()</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6120,
  "fields": {
    "question": 1224,
    "text": "Using the <code>x-ref</code> directive on the element and accessing it via <code>$refs</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6121,
  "fields": {
    "question": 1225,
    "text": "<code>$root</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6122,
  "fields": {
    "question": 1225,
    "text": "<code>$event</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6123,
  "fields": {
    "question": 1225,
    "text": "<code>$data</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6124,
  "fields": {
    "question": 1225,
    "text": "<code>$refs</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6125,
  "fields": {
    "question": 1225,
    "text": "<code>$el</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6126,
  "fields": {
    "question": 1226,
    "text": "<code>$watch</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6127,
  "fields": {
    "question": 1226,
    "text": "<code>$on</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6128,
  "fields": {
    "question": 1226,
    "text": "<code>$effect</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6129,
  "fields": {
    "question": 1226,
    "text": "<code>$observe</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6130,
  "fields": {
    "question": 1226,
    "text": "<code>$listen</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6131,
  "fields": {
    "question": 1227,
    "text": "Via custom events dispatched upwards",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6132,
  "fields": {
    "question": 1227,
    "text": "Using <code>Alpine.store</code> exclusively",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6133,
  "fields": {
    "question": 1227,
    "text": "By using <code>x-bind</code> or shorthand <code>:</code> on the child's tag to bind parent data to a child prop defined in <code>x-data</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6134,
  "fields": {
    "question": 1227,
    "text": "Using <code>$parent.data</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6135,
  "fields": {
    "question": 1227,
    "text": "Data is automatically inherited",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6136,
  "fields": {
    "question": 1228,
    "text": "Django Models",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6137,
  "fields": {
    "question": 1228,
    "text": "Django Views",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6138,
  "fields": {
    "question": 1228,
    "text": "Django Middleware",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6139,
  "fields": {
    "question": 1228,
    "text": "Django Forms API",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6140,
  "fields": {
    "question": 1228,
    "text": "Django Template Includes (`{% include %}`)",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6141,
  "fields": {
    "question": 1229,
    "text": "<code>&lt;div x-data x-bind:htmx-after-swap=\"...\"&gt;</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6142,
  "fields": {
    "question": 1229,
    "text": "Using <code>Alpine.store</code> listeners",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6143,
  "fields": {
    "question": 1229,
    "text": "<code>&lt;div x-data @htmx:afterSwap=\"...\"&gt;</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6144,
  "fields": {
    "question": 1229,
    "text": "<code>htmx.on('afterSwap', function() { Alpine.data(...) })</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6145,
  "fields": {
    "question": 1229,
    "text": "<code>&lt;div x-data x-on:htmx:after-swap.window=\"...\"&gt;</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6146,
  "fields": {
    "question": 1230,
    "text": "Persist",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6147,
  "fields": {
    "question": 1230,
    "text": "Intersect",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6148,
  "fields": {
    "question": 1230,
    "text": "Morph",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6149,
  "fields": {
    "question": 1230,
    "text": "Mask",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6150,
  "fields": {
    "question": 1230,
    "text": "Focus",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6151,
  "fields": {
    "question": 1231,
    "text": "Using <code>x-ref</code> to get a direct reference",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6152,
  "fields": {
    "question": 1231,
    "text": "Using <code>Alpine.store</code> to signal changes",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6153,
  "fields": {
    "question": 1231,
    "text": "It's not possible for unrelated components to communicate",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6154,
  "fields": {
    "question": 1231,
    "text": "Using <code>x-on:custom-event-name.window</code> to listen globally on the window object",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6155,
  "fields": {
    "question": 1231,
    "text": "Using <code>x-effect</code> with a shared variable",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6156,
  "fields": {
    "question": 1232,
    "text": "Using a predefined variable, often named <code>item</code> (e.g., <code>&lt;template x-for=\"item in items\"&gt;</code>)",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6157,
  "fields": {
    "question": 1232,
    "text": "Using <code>this.item</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6158,
  "fields": {
    "question": 1232,
    "text": "Using <code>items[index]</code> without declaring an item variable",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6159,
  "fields": {
    "question": 1232,
    "text": "Using <code>x-for.value</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6160,
  "fields": {
    "question": 1232,
    "text": "Using <code>$data.currentItem</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6161,
  "fields": {
    "question": 1233,
    "text": "Defining state in the <code>window</code> object",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6162,
  "fields": {
    "question": 1233,
    "text": "Using <code>Alpine.store()</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6163,
  "fields": {
    "question": 1233,
    "text": "Using browser <code>localStorage</code> directly",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6164,
  "fields": {
    "question": 1233,
    "text": "Passing state through nested component bindings only",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6165,
  "fields": {
    "question": 1233,
    "text": "Using <code>x-effect</code> on the <code>body</code> tag",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6166,
  "fields": {
    "question": 1234,
    "text": "<code>Accept: text/html-partial</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6167,
  "fields": {
    "question": 1234,
    "text": "<code>HTTP_X_CSRFTOKEN: test_token</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6168,
  "fields": {
    "question": 1234,
    "text": "<code>X-Requested-With: XMLHttpRequest</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6169,
  "fields": {
    "question": 1234,
    "text": "<code>HTTP_HX_REQUEST: true</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6170,
  "fields": {
    "question": 1234,
    "text": "<code>Content-Type: application/htmx</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6171,
  "fields": {
    "question": 1235,
    "text": "Django Haystack",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6172,
  "fields": {
    "question": 1235,
    "text": "Django REST Framework",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6173,
  "fields": {
    "question": 1235,
    "text": "Django Admin",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6174,
  "fields": {
    "question": 1235,
    "text": "Django Forms",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6175,
  "fields": {
    "question": 1235,
    "text": "Django Channels",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6176,
  "fields": {
    "question": 1236,
    "text": "Initiated by HTMX GET, Saved by HTMX POST.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6177,
  "fields": {
    "question": 1236,
    "text": "Initiated by a Django form submission, Saved by Alpine.js.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6178,
  "fields": {
    "question": 1236,
    "text": "Entirely managed by Django template tags.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6179,
  "fields": {
    "question": 1236,
    "text": "Initiated by Alpine.js (e.g., toggling visibility of an input), Saved via an HTMX PUT or POST request.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6180,
  "fields": {
    "question": 1236,
    "text": "Initiated and saved purely within Alpine.js local state.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6181,
  "fields": {
    "question": 1237,
    "text": "Deep understanding of database optimization techniques.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6182,
  "fields": {
    "question": 1237,
    "text": "Expertise in frontend framework development like React or Vue.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6183,
  "fields": {
    "question": 1237,
    "text": "Mastery of asynchronous task queues like Celery.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6184,
  "fields": {
    "question": 1237,
    "text": "Proficiency in mobile application development.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6185,
  "fields": {
    "question": 1237,
    "text": "The ability to integrate server-side Django logic with client-side enhancements using HTMX and Alpine.js for modern web applications.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6186,
  "fields": {
    "question": 1238,
    "text": "Alpine.js cannot manage form inputs; only native HTML can.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6187,
  "fields": {
    "question": 1238,
    "text": "By disabling the inputs until the page reloads.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6188,
  "fields": {
    "question": 1238,
    "text": "By storing the state of filters locally using <code>x-data</code> and triggering HTMX requests when the state changes.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6189,
  "fields": {
    "question": 1238,
    "text": "By sending filter state directly to Django Channels.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6190,
  "fields": {
    "question": 1238,
    "text": "By replacing Django forms entirely.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6191,
  "fields": {
    "question": 1239,
    "text": "To store notifications in the database.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6192,
  "fields": {
    "question": 1239,
    "text": "To render the initial HTML for the notification feed.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6193,
  "fields": {
    "question": 1239,
    "text": "To handle standard HTTP requests for notifications.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6194,
  "fields": {
    "question": 1239,
    "text": "To authenticate users before they can view notifications.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6195,
  "fields": {
    "question": 1239,
    "text": "To manage WebSocket or SSE connections and push data (like new notifications) to connected clients.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6196,
  "fields": {
    "question": 1240,
    "text": "Models (e.g., <code>Task</code>), Views (to handle requests and render partials), and URL patterns.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6197,
  "fields": {
    "question": 1240,
    "text": "Middleware and Context Processors only.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6198,
  "fields": {
    "question": 1240,
    "text": "Django REST Framework Serializers and ViewSets.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6199,
  "fields": {
    "question": 1240,
    "text": "Celery and Redis for task management.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6200,
  "fields": {
    "question": 1240,
    "text": "Forms API and Authentication Backends only.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6201,
  "fields": {
    "question": 1241,
    "text": "To define the structure of the Django model.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6202,
  "fields": {
    "question": 1241,
    "text": "To trigger HTMX requests based on server events.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6203,
  "fields": {
    "question": 1241,
    "text": "To initialize a component's local reactive state, like tracking if an item is in editing mode.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6204,
  "fields": {
    "question": 1241,
    "text": "To fetch initial data from the Django backend.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6205,
  "fields": {
    "question": 1241,
    "text": "To replace the need for Django views.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6206,
  "fields": {
    "question": 1242,
    "text": "Storing HTML fragments in the database.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6207,
  "fields": {
    "question": 1242,
    "text": "Breaking down templates into smaller, reusable partials included via Django's <code>{% include %}</code> tag.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6208,
  "fields": {
    "question": 1242,
    "text": "Writing all HTML directly inside Django views.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6209,
  "fields": {
    "question": 1242,
    "text": "Embedding CSS styles directly within template tags.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6210,
  "fields": {
    "question": 1242,
    "text": "Using only one large template file for the entire application.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6211,
  "fields": {
    "question": 1243,
    "text": "<code>hx-post</code> with <code>trigger=\"submit\"</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6212,
  "fields": {
    "question": 1243,
    "text": "<code>hx-get</code> with <code>trigger=\"click\"</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6213,
  "fields": {
    "question": 1243,
    "text": "<code>hx-delete</code> with <code>trigger=\"mouseover\"</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6214,
  "fields": {
    "question": 1243,
    "text": "<code>hx-put</code> with <code>trigger=\"load\"</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6215,
  "fields": {
    "question": 1243,
    "text": "<code>hx-get</code> with <code>trigger=\"keyup changed delay:500ms\"</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6216,
  "fields": {
    "question": 1244,
    "text": "<code>hx-delete</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6217,
  "fields": {
    "question": 1244,
    "text": "<code>hx-put</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6218,
  "fields": {
    "question": 1244,
    "text": "<code>hx-get</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6219,
  "fields": {
    "question": 1244,
    "text": "<code>hx-post</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6220,
  "fields": {
    "question": 1244,
    "text": "<code>hx-patch</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6221,
  "fields": {
    "question": 1245,
    "text": "For rendering large lists of data fetched from the server.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6222,
  "fields": {
    "question": 1245,
    "text": "For managing complex server-side state.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6223,
  "fields": {
    "question": 1245,
    "text": "For handling real-time server communication.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6224,
  "fields": {
    "question": 1245,
    "text": "For handling all form submissions.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6225,
  "fields": {
    "question": 1245,
    "text": "For small, localized client-side interactions and UI state management (e.g., dropdowns, toggles, simple animations).",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6226,
  "fields": {
    "question": 1246,
    "text": "By having pagination links trigger HTMX GET requests that return only the next set of products, updating the product list container.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6227,
  "fields": {
    "question": 1246,
    "text": "Pagination requires full page reloads and cannot be done with HTMX.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6228,
  "fields": {
    "question": 1246,
    "text": "By using WebSockets to stream paginated data.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6229,
  "fields": {
    "question": 1246,
    "text": "By using Django's built-in pagination template tags without any HTMX attributes.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6230,
  "fields": {
    "question": 1246,
    "text": "By using Alpine.js to fetch and render subsequent pages.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6231,
  "fields": {
    "question": 1247,
    "text": "<code>hx-oob</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6232,
  "fields": {
    "question": 1247,
    "text": "<code>hx-boost</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6233,
  "fields": {
    "question": 1247,
    "text": "<code>hx-sse</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6234,
  "fields": {
    "question": 1247,
    "text": "<code>hx-json-enc</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6235,
  "fields": {
    "question": 1247,
    "text": "<code>hx-ws</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6236,
  "fields": {
    "question": 1248,
    "text": "Using HTMX for all client-side logic, replacing JavaScript entirely.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6237,
  "fields": {
    "question": 1248,
    "text": "Replacing Django's ORM with Alpine.js state management.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6238,
  "fields": {
    "question": 1248,
    "text": "Combining Django's server-side rendering strength with HTMX for partial updates and Alpine.js for client-side interactivity.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6239,
  "fields": {
    "question": 1248,
    "text": "Replacing Django templates with HTMX components.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6240,
  "fields": {
    "question": 1248,
    "text": "Using Django primarily as an API for a separate Alpine.js frontend with HTMX bindings.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6241,
  "fields": {
    "question": 1249,
    "text": "<code>hx-trigger</code> and <code>hx-push-url</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6242,
  "fields": {
    "question": 1249,
    "text": "<code>hx-confirm</code> and <code>hx-select</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6243,
  "fields": {
    "question": 1249,
    "text": "<code>hx-indicator</code> and <code>hx-sync</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6244,
  "fields": {
    "question": 1249,
    "text": "<code>hx-vals</code> and <code>hx-headers</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6245,
  "fields": {
    "question": 1249,
    "text": "<code>hx-target</code> and <code>hx-swap</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6246,
  "fields": {
    "question": 1250,
    "text": "Using Django template filters.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6247,
  "fields": {
    "question": 1250,
    "text": "By chaining multiple <code>.filter()</code> calls on the QuerySet or using <code>Q</code> objects.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6248,
  "fields": {
    "question": 1250,
    "text": "Using complex SQL <code>JOIN</code> statements manually.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6249,
  "fields": {
    "question": 1250,
    "text": "Performing separate database queries for each filter criterion.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6250,
  "fields": {
    "question": 1250,
    "text": "Handling all filtering logic within Alpine.js on the client-side.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6251,
  "fields": {
    "question": 1251,
    "text": "Optimizing the application progressively for faster load times.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6252,
  "fields": {
    "question": 1251,
    "text": "Gradually replacing Django components with HTMX and Alpine equivalents.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6253,
  "fields": {
    "question": 1251,
    "text": "Using the latest experimental features of all three technologies.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6254,
  "fields": {
    "question": 1251,
    "text": "The application only works if JavaScript (HTMX/Alpine) is enabled.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6255,
  "fields": {
    "question": 1251,
    "text": "Building a baseline functional application using only Django rendering, then layering HTMX/Alpine for enhanced experiences.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6256,
  "fields": {
    "question": 1252,
    "text": "By making HTMX requests for each filter change.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6257,
  "fields": {
    "question": 1252,
    "text": "By directly manipulating the DOM using standard JavaScript.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6258,
  "fields": {
    "question": 1252,
    "text": "By configuring HTMX swap strategies.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6259,
  "fields": {
    "question": 1252,
    "text": "By defining complex Django model managers.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6260,
  "fields": {
    "question": 1252,
    "text": "Using directives like <code>x-show</code> or <code>x-if</code> to hide/show tasks based on local state (e.g., 'show completed').",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6261,
  "fields": {
    "question": 1253,
    "text": "Performing swaps that happen outside the normal request-response cycle.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6262,
  "fields": {
    "question": 1253,
    "text": "Swapping content that is currently hidden or off-screen.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6263,
  "fields": {
    "question": 1253,
    "text": "Allowing multiple elements to be updated from a single server response using IDs.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6264,
  "fields": {
    "question": 1253,
    "text": "Encrypting the swapped content during transit.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6265,
  "fields": {
    "question": 1253,
    "text": "Swapping content into elements that are not the original target of the request.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6266,
  "fields": {
    "question": 1254,
    "text": "Simpler server-side code as no partial rendering is needed.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6267,
  "fields": {
    "question": 1254,
    "text": "Eliminates the need for any JavaScript on the client-side.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6268,
  "fields": {
    "question": 1254,
    "text": "Reduced data transfer and faster perceived UI updates, leading to a smoother user experience.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6269,
  "fields": {
    "question": 1254,
    "text": "Requires complex state management in the browser's local storage.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6270,
  "fields": {
    "question": 1254,
    "text": "Increased server load due to more requests.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6271,
  "fields": {
    "question": 1255,
    "text": "By handling the server-side logic in Django Channels.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6272,
  "fields": {
    "question": 1255,
    "text": "By replacing the need for HTMX OOB swaps.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6273,
  "fields": {
    "question": 1255,
    "text": "By defining the Notification model in Django.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6274,
  "fields": {
    "question": 1255,
    "text": "By establishing the WebSocket/SSE connection.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6275,
  "fields": {
    "question": 1255,
    "text": "By adding animations (<code>x-transition</code>), handling local read/unread state, or formatting timestamps.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6276,
  "fields": {
    "question": 1256,
    "text": "To force a full page reload after an HTMX request.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6277,
  "fields": {
    "question": 1256,
    "text": "To prevent HTMX from making any requests.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6278,
  "fields": {
    "question": 1256,
    "text": "To update the browser's URL in the history after a successful HTMX GET request, reflecting the current search/filter state.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6279,
  "fields": {
    "question": 1256,
    "text": "To embed the response content within an iframe.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6280,
  "fields": {
    "question": 1256,
    "text": "To send the current URL as a parameter in the HTMX request.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6281,
  "fields": {
    "question": 1257,
    "text": "A load balancer for distributing traffic.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6282,
  "fields": {
    "question": 1257,
    "text": "A persistent storage volume.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6283,
  "fields": {
    "question": 1257,
    "text": "The smallest deployable unit, representing a group of one or more containers sharing storage and network resources.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6284,
  "fields": {
    "question": 1257,
    "text": "A managed database instance.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6285,
  "fields": {
    "question": 1257,
    "text": "A configuration file defining the desired state.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6286,
  "fields": {
    "question": 1258,
    "text": "Serving directly from the application instance (e.g., Gunicorn/App Engine)",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6287,
  "fields": {
    "question": 1258,
    "text": "Cloud Functions",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6288,
  "fields": {
    "question": 1258,
    "text": "Cloud SQL",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6289,
  "fields": {
    "question": 1258,
    "text": "Compute Engine Persistent Disks",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6290,
  "fields": {
    "question": 1258,
    "text": "Google Cloud Storage",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6291,
  "fields": {
    "question": 1259,
    "text": "Cloud SQL",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6292,
  "fields": {
    "question": 1259,
    "text": "Cloud Build",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6293,
  "fields": {
    "question": 1259,
    "text": "Cloud DNS",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6294,
  "fields": {
    "question": 1259,
    "text": "Cloud Storage",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6295,
  "fields": {
    "question": 1259,
    "text": "Cloud Load Balancing",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6296,
  "fields": {
    "question": 1260,
    "text": "By sending email notifications only.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6297,
  "fields": {
    "question": 1260,
    "text": "By deploying the code in the PR to a temporary preview environment for testing and review.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6298,
  "fields": {
    "question": 1260,
    "text": "By automatically merging all pull requests.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6299,
  "fields": {
    "question": 1260,
    "text": "By deleting the corresponding code branch.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6300,
  "fields": {
    "question": 1260,
    "text": "By disabling automated tests for pull requests.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6301,
  "fields": {
    "question": 1261,
    "text": "Log-based metrics",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6302,
  "fields": {
    "question": 1261,
    "text": "Resource utilization monitoring",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6303,
  "fields": {
    "question": 1261,
    "text": "Code profiling",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6304,
  "fields": {
    "question": 1261,
    "text": "Uptime checks",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6305,
  "fields": {
    "question": 1261,
    "text": "Custom metrics",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6306,
  "fields": {
    "question": 1262,
    "text": "Ingress",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6307,
  "fields": {
    "question": 1262,
    "text": "Service",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6308,
  "fields": {
    "question": 1262,
    "text": "PersistentVolumeClaim",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6309,
  "fields": {
    "question": 1262,
    "text": "Deployment",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6310,
  "fields": {
    "question": 1262,
    "text": "ConfigMap",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6311,
  "fields": {
    "question": 1263,
    "text": "Decommissioning the old servers immediately.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6312,
  "fields": {
    "question": 1263,
    "text": "Choosing a new domain name.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6313,
  "fields": {
    "question": 1263,
    "text": "Setting up billing alerts.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6314,
  "fields": {
    "question": 1263,
    "text": "Rewriting the entire application in a different language.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6315,
  "fields": {
    "question": 1263,
    "text": "Assessing the current application architecture, dependencies, and identifying a suitable GCP deployment target (e.g., Compute Engine lift-and-shift, containerization for Cloud Run/GKE).",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6316,
  "fields": {
    "question": 1264,
    "text": "Cloud Load Balancing URL Maps",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6317,
  "fields": {
    "question": 1264,
    "text": "Cloud Audit Logs",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6318,
  "fields": {
    "question": 1264,
    "text": "Cloud DNS Zones",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6319,
  "fields": {
    "question": 1264,
    "text": "IAM Policies",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6320,
  "fields": {
    "question": 1264,
    "text": "VPC Firewall Rules",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6321,
  "fields": {
    "question": 1265,
    "text": "Use default passwords for all services.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6322,
  "fields": {
    "question": 1265,
    "text": "Disable all monitoring and logging to save costs.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6323,
  "fields": {
    "question": 1265,
    "text": "Expose administrative interfaces publicly without authentication.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6324,
  "fields": {
    "question": 1265,
    "text": "Regularly apply security patches to the OS, dependencies (like Django), and review IAM policies and firewall rules.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6325,
  "fields": {
    "question": 1265,
    "text": "Never update dependencies to avoid breaking changes.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6326,
  "fields": {
    "question": 1266,
    "text": "To monitor application uptime.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6327,
  "fields": {
    "question": 1266,
    "text": "To host the production database.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6328,
  "fields": {
    "question": 1266,
    "text": "To manage user authentication and authorization.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6329,
  "fields": {
    "question": 1266,
    "text": "To serve static web content globally.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6330,
  "fields": {
    "question": 1266,
    "text": "To automatically build, test, and deploy the application based on code repository triggers.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6331,
  "fields": {
    "question": 1267,
    "text": "It helps create smaller, more secure final images by separating build-time dependencies from runtime dependencies.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6332,
  "fields": {
    "question": 1267,
    "text": "It eliminates the need for a <code>requirements.txt</code> file.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6333,
  "fields": {
    "question": 1267,
    "text": "It allows running multiple Django instances in one container.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6334,
  "fields": {
    "question": 1267,
    "text": "It increases the number of layers in the final image.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6335,
  "fields": {
    "question": 1267,
    "text": "It automatically configures networking between containers.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6336,
  "fields": {
    "question": 1268,
    "text": "A running GKE cluster.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6337,
  "fields": {
    "question": 1268,
    "text": "A container image of the application pushed to a registry like Artifact Registry or Container Registry.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6338,
  "fields": {
    "question": 1268,
    "text": "A configured <code>app.yaml</code> file.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6339,
  "fields": {
    "question": 1268,
    "text": "A Cloud SQL instance configured within the container.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6340,
  "fields": {
    "question": 1268,
    "text": "A manually provisioned Compute Engine VM.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6341,
  "fields": {
    "question": 1269,
    "text": "Memorystore",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6342,
  "fields": {
    "question": 1269,
    "text": "Cloud SQL",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6343,
  "fields": {
    "question": 1269,
    "text": "Firestore",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6344,
  "fields": {
    "question": 1269,
    "text": "Bigtable",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6345,
  "fields": {
    "question": 1269,
    "text": "Cloud Spanner",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6346,
  "fields": {
    "question": 1270,
    "text": "Reducing database load",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6347,
  "fields": {
    "question": 1270,
    "text": "Automatically scaling down to zero instances",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6348,
  "fields": {
    "question": 1270,
    "text": "Increasing the maximum request timeout",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6349,
  "fields": {
    "question": 1270,
    "text": "Bypassing IAM authentication",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6350,
  "fields": {
    "question": 1270,
    "text": "Performing canary deployments or A/B testing",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6351,
  "fields": {
    "question": 1271,
    "text": "Daily stand-up meeting times.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6352,
  "fields": {
    "question": 1271,
    "text": "The preferred IDE for developers.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6353,
  "fields": {
    "question": 1271,
    "text": "Steps to take to restore service in case of major failures (e.g., region outage, database corruption).",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6354,
  "fields": {
    "question": 1271,
    "text": "The history of Django version upgrades.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6355,
  "fields": {
    "question": 1271,
    "text": "The specific colors used in the application's UI.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6356,
  "fields": {
    "question": 1272,
    "text": "To define the database schema",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6357,
  "fields": {
    "question": 1272,
    "text": "To provide instructions for building a container image containing the application and its dependencies",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6358,
  "fields": {
    "question": 1272,
    "text": "To run database migrations",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6359,
  "fields": {
    "question": 1272,
    "text": "To manage static files",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6360,
  "fields": {
    "question": 1272,
    "text": "To configure DNS settings",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6361,
  "fields": {
    "question": 1273,
    "text": "Deleting old logs frequently",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6362,
  "fields": {
    "question": 1273,
    "text": "Using the smallest possible machine type",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6363,
  "fields": {
    "question": 1273,
    "text": "Configuring automated backups and testing restore procedures",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6364,
  "fields": {
    "question": 1273,
    "text": "Storing passwords in the database itself",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6365,
  "fields": {
    "question": 1273,
    "text": "Disabling all incoming connections",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6366,
  "fields": {
    "question": 1274,
    "text": "Embedding them as base64 strings in the database",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6367,
  "fields": {
    "question": 1274,
    "text": "Storing them directly on the application server's local filesystem",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6368,
  "fields": {
    "question": 1274,
    "text": "Using Google Cloud Storage via libraries like <code>django-storages</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6369,
  "fields": {
    "question": 1274,
    "text": "Saving them directly into the Cloud SQL database",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6370,
  "fields": {
    "question": 1274,
    "text": "Storing them in the application's container image",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6371,
  "fields": {
    "question": 1275,
    "text": "Selecting the geographic region closest to your development team.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6372,
  "fields": {
    "question": 1275,
    "text": "Using only free tier services.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6373,
  "fields": {
    "question": 1275,
    "text": "Deleting all monitoring data to save storage costs.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6374,
  "fields": {
    "question": 1275,
    "text": "Adjusting the CPU, memory, and disk sizes of your instances (VMs, databases, Cloud Run services) to match the actual workload demands, avoiding over-provisioning.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6375,
  "fields": {
    "question": 1275,
    "text": "Choosing the largest available instance types to ensure maximum performance.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6376,
  "fields": {
    "question": 1276,
    "text": "Manually installing the operating system, web server (e.g., Nginx), application server (e.g., Gunicorn), Python, dependencies, and configuring everything.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6377,
  "fields": {
    "question": 1276,
    "text": "Using a pre-built serverless platform.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6378,
  "fields": {
    "question": 1276,
    "text": "Writing an <code>app.yaml</code> configuration file.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6379,
  "fields": {
    "question": 1276,
    "text": "Defining Kubernetes Deployment manifests.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6380,
  "fields": {
    "question": 1276,
    "text": "Pushing a container image to Cloud Run.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6381,
  "fields": {
    "question": 1277,
    "text": "Setting up Cloud SQL",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6382,
  "fields": {
    "question": 1277,
    "text": "Writing a Dockerfile",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6383,
  "fields": {
    "question": 1277,
    "text": "Creating a GCP Project",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6384,
  "fields": {
    "question": 1277,
    "text": "Deploying the application",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6385,
  "fields": {
    "question": 1277,
    "text": "Configuring a domain name",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6386,
  "fields": {
    "question": 1278,
    "text": "Cloud Build",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6387,
  "fields": {
    "question": 1278,
    "text": "Cloud SQL",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6388,
  "fields": {
    "question": 1278,
    "text": "Cloud Functions",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6389,
  "fields": {
    "question": 1278,
    "text": "Cloud Scheduler",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6390,
  "fields": {
    "question": 1278,
    "text": "Cloud Monitoring",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6391,
  "fields": {
    "question": 1279,
    "text": "Less control over the container environment.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6392,
  "fields": {
    "question": 1279,
    "text": "Potential for lower costs due to scale-to-zero capability and per-request billing.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6393,
  "fields": {
    "question": 1279,
    "text": "Supports only Python runtimes.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6394,
  "fields": {
    "question": 1279,
    "text": "Requires manual server provisioning.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6395,
  "fields": {
    "question": 1279,
    "text": "Built-in database included with each service.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6396,
  "fields": {
    "question": 1280,
    "text": "Cloud Logging (formerly Stackdriver Logging)",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6397,
  "fields": {
    "question": 1280,
    "text": "Secret Manager",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6398,
  "fields": {
    "question": 1280,
    "text": "Cloud SQL",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6399,
  "fields": {
    "question": 1280,
    "text": "Cloud Build",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6400,
  "fields": {
    "question": 1280,
    "text": "Cloud Storage",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6401,
  "fields": {
    "question": 1281,
    "text": "Cloud Storage",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6402,
  "fields": {
    "question": 1281,
    "text": "Cloud CDN",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6403,
  "fields": {
    "question": 1281,
    "text": "Cloud Build",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6404,
  "fields": {
    "question": 1281,
    "text": "Identity and Access Management (IAM)",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6405,
  "fields": {
    "question": 1281,
    "text": "Cloud SQL",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6406,
  "fields": {
    "question": 1282,
    "text": "Cloud Console (specifically App Engine dashboard, Logging, Monitoring)",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6407,
  "fields": {
    "question": 1282,
    "text": "Cloud Scheduler",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6408,
  "fields": {
    "question": 1282,
    "text": "Cloud Build",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6409,
  "fields": {
    "question": 1282,
    "text": "Secret Manager",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6410,
  "fields": {
    "question": 1282,
    "text": "Cloud DNS",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6411,
  "fields": {
    "question": 1283,
    "text": "App Engine Flexible",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6412,
  "fields": {
    "question": 1283,
    "text": "Cloud Run",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6413,
  "fields": {
    "question": 1283,
    "text": "Google Kubernetes Engine (GKE)",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6414,
  "fields": {
    "question": 1283,
    "text": "Compute Engine",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6415,
  "fields": {
    "question": 1283,
    "text": "App Engine Standard",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6416,
  "fields": {
    "question": 1284,
    "text": "<code>STATIC_ROOT</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6417,
  "fields": {
    "question": 1284,
    "text": "<code>DEBUG</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6418,
  "fields": {
    "question": 1284,
    "text": "<code>DATABASES</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6419,
  "fields": {
    "question": 1284,
    "text": "<code>CSRF_COOKIE_SECURE</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6420,
  "fields": {
    "question": 1284,
    "text": "<code>ALLOWED_HOSTS</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6421,
  "fields": {
    "question": 1285,
    "text": "Cloud SQL",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6422,
  "fields": {
    "question": 1285,
    "text": "Cloud Storage",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6423,
  "fields": {
    "question": 1285,
    "text": "Cloud Run",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6424,
  "fields": {
    "question": 1285,
    "text": "Google Kubernetes Engine (GKE)",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6425,
  "fields": {
    "question": 1285,
    "text": "Compute Engine",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6426,
  "fields": {
    "question": 1286,
    "text": "To manage database connections",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6427,
  "fields": {
    "question": 1286,
    "text": "To encrypt database data at rest",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6428,
  "fields": {
    "question": 1286,
    "text": "To reduce latency and improve performance by caching content closer to users",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6429,
  "fields": {
    "question": 1286,
    "text": "To automate application deployments",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6430,
  "fields": {
    "question": 1286,
    "text": "To run automated tests",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6431,
  "fields": {
    "question": 1287,
    "text": "By disabling automated backups.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6432,
  "fields": {
    "question": 1287,
    "text": "By utilizing Spot VMs (formerly Preemptible VMs) which offer significant discounts but can be terminated with short notice.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6433,
  "fields": {
    "question": 1287,
    "text": "By hardcoding sensitive data.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6434,
  "fields": {
    "question": 1287,
    "text": "By using only the most expensive machine types.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6435,
  "fields": {
    "question": 1287,
    "text": "By avoiding the use of Managed Instance Groups.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6436,
  "fields": {
    "question": 1288,
    "text": "Standard only supports Python, while Flexible supports multiple languages.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6437,
  "fields": {
    "question": 1288,
    "text": "Standard runs on Compute Engine VMs, while Flexible is serverless.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6438,
  "fields": {
    "question": 1288,
    "text": "Standard supports background tasks, while Flexible does not.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6439,
  "fields": {
    "question": 1288,
    "text": "Standard provides restricted runtimes (sandboxed), while Flexible uses Docker containers allowing more customization.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6440,
  "fields": {
    "question": 1288,
    "text": "Standard requires manual scaling, while Flexible scales automatically.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6441,
  "fields": {
    "question": 1289,
    "text": "<code>Dockerfile</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6442,
  "fields": {
    "question": 1289,
    "text": "<code>settings.py</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6443,
  "fields": {
    "question": 1289,
    "text": "<code>app.yaml</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6444,
  "fields": {
    "question": 1289,
    "text": "<code>requirements.txt</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6445,
  "fields": {
    "question": 1289,
    "text": "<code>cloudbuild.yaml</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6446,
  "fields": {
    "question": 1290,
    "text": "Using environment variables managed by a tool like <code>django-environ</code> or Secret Manager",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6447,
  "fields": {
    "question": 1290,
    "text": "Committing them to the version control system (e.g., Git)",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6448,
  "fields": {
    "question": 1290,
    "text": "Writing them in comments within the code",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6449,
  "fields": {
    "question": 1290,
    "text": "Hardcoding them directly in <code>settings.py</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6450,
  "fields": {
    "question": 1290,
    "text": "Storing them in a public Cloud Storage bucket",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6451,
  "fields": {
    "question": 1291,
    "text": "Granting Project Owner role to all service accounts",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6452,
  "fields": {
    "question": 1291,
    "text": "Disabling IAM entirely",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6453,
  "fields": {
    "question": 1291,
    "text": "Principle of Maximum Privilege",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6454,
  "fields": {
    "question": 1291,
    "text": "Storing service account keys directly in the code repository",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6455,
  "fields": {
    "question": 1291,
    "text": "Principle of Least Privilege (granting only necessary permissions)",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6456,
  "fields": {
    "question": 1292,
    "text": "<code>docker</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6457,
  "fields": {
    "question": 1292,
    "text": "<code>gcloud</code> CLI",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6458,
  "fields": {
    "question": 1292,
    "text": "<code>pip</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6459,
  "fields": {
    "question": 1292,
    "text": "<code>kubectl</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6460,
  "fields": {
    "question": 1292,
    "text": "<code>django-admin</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6461,
  "fields": {
    "question": 1293,
    "text": "<code>INSTALLED_APPS</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6462,
  "fields": {
    "question": 1293,
    "text": "<code>ALLOWED_HOSTS</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6463,
  "fields": {
    "question": 1293,
    "text": "<code>ROOT_URLCONF</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6464,
  "fields": {
    "question": 1293,
    "text": "<code>STATIC_URL</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6465,
  "fields": {
    "question": 1293,
    "text": "<code>DEBUG</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6466,
  "fields": {
    "question": 1294,
    "text": "<code>python manage.py shell</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6467,
  "fields": {
    "question": 1294,
    "text": "<code>python manage.py collectstatic</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6468,
  "fields": {
    "question": 1294,
    "text": "<code>python manage.py migrate</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6469,
  "fields": {
    "question": 1294,
    "text": "<code>python manage.py makemigrations</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6470,
  "fields": {
    "question": 1294,
    "text": "<code>python manage.py runserver</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6471,
  "fields": {
    "question": 1295,
    "text": "Cloud Build",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6472,
  "fields": {
    "question": 1295,
    "text": "Cloud Trace",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6473,
  "fields": {
    "question": 1295,
    "text": "Error Reporting (part of Cloud Operations suite)",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6474,
  "fields": {
    "question": 1295,
    "text": "Cloud Monitoring",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6475,
  "fields": {
    "question": 1295,
    "text": "Cloud Logging",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6476,
  "fields": {
    "question": 1296,
    "text": "Development speed",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6477,
  "fields": {
    "question": 1296,
    "text": "Local testing accuracy",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6478,
  "fields": {
    "question": 1296,
    "text": "High availability and disaster recovery capabilities",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6479,
  "fields": {
    "question": 1296,
    "text": "Code readability",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6480,
  "fields": {
    "question": 1296,
    "text": "Container build times",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6481,
  "fields": {
    "question": 1297,
    "text": "They are served directly by the operating system.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6482,
  "fields": {
    "question": 1297,
    "text": "They need specific URL patterns added to <code>urls.py</code> that use <code>django.conf.urls.static.static</code>.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6483,
  "fields": {
    "question": 1297,
    "text": "They cannot be served during development.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6484,
  "fields": {
    "question": 1297,
    "text": "They are automatically served by <code>runserver</code> without any extra configuration.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6485,
  "fields": {
    "question": 1297,
    "text": "They require running <code>collectmedia</code> first.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6486,
  "fields": {
    "question": 1298,
    "text": "<code>django.contrib.auth.middleware.AuthenticationMiddleware</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6487,
  "fields": {
    "question": 1298,
    "text": "<code>django.middleware.security.SecurityMiddleware</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6488,
  "fields": {
    "question": 1298,
    "text": "<code>django.middleware.common.CommonMiddleware</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6489,
  "fields": {
    "question": 1298,
    "text": "<code>django.contrib.sessions.middleware.SessionMiddleware</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6490,
  "fields": {
    "question": 1298,
    "text": "<code>django.middleware.csrf.CsrfViewMiddleware</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6491,
  "fields": {
    "question": 1299,
    "text": "To manage user sessions.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6492,
  "fields": {
    "question": 1299,
    "text": "To add security-related HTTP headers.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6493,
  "fields": {
    "question": 1299,
    "text": "To handle user authentication.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6494,
  "fields": {
    "question": 1299,
    "text": "To provide protection against Cross-Site Request Forgery attacks.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6495,
  "fields": {
    "question": 1299,
    "text": "To compress HTTP responses.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6496,
  "fields": {
    "question": 1300,
    "text": "It controls which IP addresses are allowed to connect.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6497,
  "fields": {
    "question": 1300,
    "text": "It is used for cryptographic signing (e.g., sessions, password resets) and compromising it can lead to security vulnerabilities.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6498,
  "fields": {
    "question": 1300,
    "text": "It enables or disables static file serving.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6499,
  "fields": {
    "question": 1300,
    "text": "It defines the admin site URL.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6500,
  "fields": {
    "question": 1300,
    "text": "It determines the database connection string.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6501,
  "fields": {
    "question": 1301,
    "text": "<code>list_display</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6502,
  "fields": {
    "question": 1301,
    "text": "<code>slugify_fields</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6503,
  "fields": {
    "question": 1301,
    "text": "<code>readonly_fields</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6504,
  "fields": {
    "question": 1301,
    "text": "<code>prepopulated_fields</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6505,
  "fields": {
    "question": 1301,
    "text": "<code>auto_slug_fields</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6506,
  "fields": {
    "question": 1302,
    "text": "<code>django.db.models.Model</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6507,
  "fields": {
    "question": 1302,
    "text": "<code>django.contrib.auth.models.UserAdmin</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6508,
  "fields": {
    "question": 1302,
    "text": "<code>django.contrib.admin.ModelAdmin</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6509,
  "fields": {
    "question": 1302,
    "text": "<code>django.forms.ModelForm</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6510,
  "fields": {
    "question": 1302,
    "text": "<code>django.views.generic.View</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6511,
  "fields": {
    "question": 1303,
    "text": "<code>PROFILES</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6512,
  "fields": {
    "question": 1303,
    "text": "<code>AUTH_PASSWORD_VALIDATORS</code> and related AUTH settings",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6513,
  "fields": {
    "question": 1303,
    "text": "<code>MIDDLEWARE</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6514,
  "fields": {
    "question": 1303,
    "text": "<code>SECURITY</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6515,
  "fields": {
    "question": 1303,
    "text": "<code>USERS</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6516,
  "fields": {
    "question": 1304,
    "text": "It optimizes CSS and JavaScript files.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6517,
  "fields": {
    "question": 1304,
    "text": "It creates database migrations for static file models.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6518,
  "fields": {
    "question": 1304,
    "text": "It gathers all static files from apps and <code>STATICFILES_DIRS</code> into the <code>STATIC_ROOT</code> directory.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6519,
  "fields": {
    "question": 1304,
    "text": "It starts the development web server.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6520,
  "fields": {
    "question": 1304,
    "text": "It checks the project for potential problems.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6521,
  "fields": {
    "question": 1305,
    "text": "<code>python manage.py shell</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6522,
  "fields": {
    "question": 1305,
    "text": "<code>python manage.py runserver</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6523,
  "fields": {
    "question": 1305,
    "text": "<code>python manage.py interactive</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6524,
  "fields": {
    "question": 1305,
    "text": "<code>python manage.py repl</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6525,
  "fields": {
    "question": 1305,
    "text": "<code>python manage.py console</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6526,
  "fields": {
    "question": 1306,
    "text": "<code>MediaField</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6527,
  "fields": {
    "question": 1306,
    "text": "<code>FileField(upload_to='images/')</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6528,
  "fields": {
    "question": 1306,
    "text": "<code>PictureField</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6529,
  "fields": {
    "question": 1306,
    "text": "<code>PhotoField</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6530,
  "fields": {
    "question": 1306,
    "text": "<code>ImageField</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6531,
  "fields": {
    "question": 1307,
    "text": "<code>django.middleware.common.CommonMiddleware</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6532,
  "fields": {
    "question": 1307,
    "text": "<code>django.contrib.sessions.middleware.SessionMiddleware</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6533,
  "fields": {
    "question": 1307,
    "text": "<code>django.contrib.auth.middleware.AuthenticationMiddleware</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6534,
  "fields": {
    "question": 1307,
    "text": "<code>django.middleware.csrf.CsrfViewMiddleware</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6535,
  "fields": {
    "question": 1307,
    "text": "<code>django.middleware.security.SecurityMiddleware</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6536,
  "fields": {
    "question": 1308,
    "text": "<code>createuser --admin</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6537,
  "fields": {
    "question": 1308,
    "text": "<code>adduser</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6538,
  "fields": {
    "question": 1308,
    "text": "<code>createsuperuser</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6539,
  "fields": {
    "question": 1308,
    "text": "<code>adminuser</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6540,
  "fields": {
    "question": 1308,
    "text": "<code>makemigrations --admin</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6541,
  "fields": {
    "question": 1309,
    "text": "<code>dbaccess</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6542,
  "fields": {
    "question": 1309,
    "text": "<code>shell --db</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6543,
  "fields": {
    "question": 1309,
    "text": "<code>sqlmigrate</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6544,
  "fields": {
    "question": 1309,
    "text": "<code>dbshell</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6545,
  "fields": {
    "question": 1309,
    "text": "<code>query</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6546,
  "fields": {
    "question": 1310,
    "text": "Static File Handling",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6547,
  "fields": {
    "question": 1310,
    "text": "Project Settings (<code>settings.py</code>)",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6548,
  "fields": {
    "question": 1310,
    "text": "Template Tag Logic",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6549,
  "fields": {
    "question": 1310,
    "text": "Django Admin Customization",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6550,
  "fields": {
    "question": 1310,
    "text": "Middleware",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6551,
  "fields": {
    "question": 1311,
    "text": "To serve as the central configuration hub for the entire Django project.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6552,
  "fields": {
    "question": 1311,
    "text": "To define HTML templates.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6553,
  "fields": {
    "question": 1311,
    "text": "To manage database migrations.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6554,
  "fields": {
    "question": 1311,
    "text": "To define URL routing patterns.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6555,
  "fields": {
    "question": 1311,
    "text": "To contain all the view logic for the application.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6556,
  "fields": {
    "question": 1312,
    "text": "<code>ASSETS_URL</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6557,
  "fields": {
    "question": 1312,
    "text": "<code>MEDIA_URL</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6558,
  "fields": {
    "question": 1312,
    "text": "<code>STATIC_ROOT</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6559,
  "fields": {
    "question": 1312,
    "text": "<code>STATIC_URL</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6560,
  "fields": {
    "question": 1312,
    "text": "<code>STATICFILES_DIRS</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6561,
  "fields": {
    "question": 1313,
    "text": "To list the IP addresses of allowed admin users.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6562,
  "fields": {
    "question": 1313,
    "text": "To list the database hosts the application can connect to.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6563,
  "fields": {
    "question": 1313,
    "text": "To define allowed static file sources (CDNs).",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6564,
  "fields": {
    "question": 1313,
    "text": "To configure allowed middleware classes.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6565,
  "fields": {
    "question": 1313,
    "text": "To specify which host/domain names the Django site can serve, protecting against HTTP Host header attacks.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6566,
  "fields": {
    "question": 1314,
    "text": "<code>MEDIA_URL</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6567,
  "fields": {
    "question": 1314,
    "text": "<code>FILE_UPLOAD_PATH</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6568,
  "fields": {
    "question": 1314,
    "text": "<code>ROOT_MEDIA</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6569,
  "fields": {
    "question": 1314,
    "text": "<code>MEDIA_ROOT</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6570,
  "fields": {
    "question": 1314,
    "text": "<code>STATIC_ROOT</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6571,
  "fields": {
    "question": 1315,
    "text": "To manage server deployment configurations.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6572,
  "fields": {
    "question": 1315,
    "text": "To provide a public-facing website for users.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6573,
  "fields": {
    "question": 1315,
    "text": "To handle user authentication and registration exclusively.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6574,
  "fields": {
    "question": 1315,
    "text": "To replace the need for writing custom views.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6575,
  "fields": {
    "question": 1315,
    "text": "To offer a convenient interface for site administrators to manage content.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6576,
  "fields": {
    "question": 1316,
    "text": "Set <code>admin_editable=False</code> in <code>ModelAdmin</code>.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6577,
  "fields": {
    "question": 1316,
    "text": "Set <code>editable=False</code> on the model field.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6578,
  "fields": {
    "question": 1316,
    "text": "Add the fields to the <code>view_only</code> attribute in <code>ModelAdmin</code>.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6579,
  "fields": {
    "question": 1316,
    "text": "Use the <code>disabled_fields</code> attribute in <code>ModelAdmin</code>.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6580,
  "fields": {
    "question": 1316,
    "text": "Use the <code>readonly_fields</code> attribute in <code>ModelAdmin</code>.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6581,
  "fields": {
    "question": 1317,
    "text": "To run the Python Django application, handling multiple requests and interfacing between the web server and Django.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6582,
  "fields": {
    "question": 1317,
    "text": "To manage the database connections directly.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6583,
  "fields": {
    "question": 1317,
    "text": "To compile Django templates into HTML.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6584,
  "fields": {
    "question": 1317,
    "text": "To act as a frontend web server receiving requests directly from users (like Nginx).",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6585,
  "fields": {
    "question": 1317,
    "text": "To serve static files exclusively.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6586,
  "fields": {
    "question": 1318,
    "text": "<code>DATABASES</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6587,
  "fields": {
    "question": 1318,
    "text": "<code>CONNECTIONS</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6588,
  "fields": {
    "question": 1318,
    "text": "<code>DB_CONFIG</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6589,
  "fields": {
    "question": 1318,
    "text": "<code>DATABASE_SETTINGS</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6590,
  "fields": {
    "question": 1318,
    "text": "<code>SQL_CONNECTION</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6591,
  "fields": {
    "question": 1319,
    "text": "<code>python manage.py makemigrations</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6592,
  "fields": {
    "question": 1319,
    "text": "<code>python manage.py createsuperuser</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6593,
  "fields": {
    "question": 1319,
    "text": "<code>python manage.py initadmin</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6594,
  "fields": {
    "question": 1319,
    "text": "<code>python manage.py startadmin</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6595,
  "fields": {
    "question": 1319,
    "text": "<code>python manage.py createadmin</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6596,
  "fields": {
    "question": 1320,
    "text": "Bare metal servers requiring full manual configuration.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6597,
  "fields": {
    "question": 1320,
    "text": "A desktop application for managing Django projects locally.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6598,
  "fields": {
    "question": 1320,
    "text": "An abstracted environment where infrastructure (servers, OS, scaling) is managed, allowing focus on code deployment.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6599,
  "fields": {
    "question": 1320,
    "text": "Managed database services only, without application hosting.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6600,
  "fields": {
    "question": 1320,
    "text": "Only domain name registration services.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6601,
  "fields": {
    "question": 1321,
    "text": "By defining functions decorated with <code>@middleware_hook</code>.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6602,
  "fields": {
    "question": 1321,
    "text": "By inheriting from <code>django.db.models.Model</code> and defining fields.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6603,
  "fields": {
    "question": 1321,
    "text": "By adding configuration to the <code>TEMPLATES</code> setting.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6604,
  "fields": {
    "question": 1321,
    "text": "By creating a class with methods like <code>process_request</code>, <code>process_view</code>, <code>process_template_response</code>, or <code>process_response</code>, or a <code>__call__</code> method.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6605,
  "fields": {
    "question": 1321,
    "text": "By registering functions in the <code>urls.py</code> file.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6606,
  "fields": {
    "question": 1322,
    "text": "<code>list_filter</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6607,
  "fields": {
    "question": 1322,
    "text": "<code>list_display</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6608,
  "fields": {
    "question": 1322,
    "text": "<code>display_columns</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6609,
  "fields": {
    "question": 1322,
    "text": "<code>fields</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6610,
  "fields": {
    "question": 1322,
    "text": "<code>search_fields</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6611,
  "fields": {
    "question": 1323,
    "text": "To define the single directory where all static files are collected for production.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6612,
  "fields": {
    "question": 1323,
    "text": "To disable static file handling.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6613,
  "fields": {
    "question": 1323,
    "text": "To specify the URL prefix for static files.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6614,
  "fields": {
    "question": 1323,
    "text": "To configure the static file storage backend.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6615,
  "fields": {
    "question": 1323,
    "text": "To list additional directories where Django should look for static files (besides app 'static' subdirectories).",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6616,
  "fields": {
    "question": 1324,
    "text": "<code>FILE_UPLOAD_URL</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6617,
  "fields": {
    "question": 1324,
    "text": "<code>STATIC_URL</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6618,
  "fields": {
    "question": 1324,
    "text": "<code>MEDIA_ROOT</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6619,
  "fields": {
    "question": 1324,
    "text": "<code>UPLOAD_URL</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6620,
  "fields": {
    "question": 1324,
    "text": "<code>MEDIA_URL</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6621,
  "fields": {
    "question": 1325,
    "text": "It only works with SQLite databases.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6622,
  "fields": {
    "question": 1325,
    "text": "It uses too much memory compared to production servers.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6623,
  "fields": {
    "question": 1325,
    "text": "It cannot serve static or media files.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6624,
  "fields": {
    "question": 1325,
    "text": "It hasn't undergone security hardening, is single-threaded by default, and doesn't scale well.",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6625,
  "fields": {
    "question": 1325,
    "text": "It requires <code>DEBUG=True</code> to function.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6626,
  "fields": {
    "question": 1326,
    "text": "<code>settings.py</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6627,
  "fields": {
    "question": 1326,
    "text": "<code>urls.py</code> within the relevant app",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6628,
  "fields": {
    "question": 1326,
    "text": "<code>admin.py</code> within the relevant app",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6629,
  "fields": {
    "question": 1326,
    "text": "<code>models.py</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6630,
  "fields": {
    "question": 1326,
    "text": "<code>views.py</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6631,
  "fields": {
    "question": 1327,
    "text": "To write HTML templates.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6632,
  "fields": {
    "question": 1327,
    "text": "To serve the application in production.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6633,
  "fields": {
    "question": 1327,
    "text": "To provide a command-line utility for interacting with the Django project.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6634,
  "fields": {
    "question": 1327,
    "text": "To configure the web server (Nginx/Apache).",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6635,
  "fields": {
    "question": 1327,
    "text": "To define the project's database schema.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6636,
  "fields": {
    "question": 1328,
    "text": "It only matters for custom middleware, not built-in ones.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6637,
  "fields": {
    "question": 1328,
    "text": "The order affects database query performance.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6638,
  "fields": {
    "question": 1328,
    "text": "It determines the order in which middleware processes requests (top-down) and responses (bottom-up), and dependencies often exist.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6639,
  "fields": {
    "question": 1328,
    "text": "It's purely alphabetical for organization.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6640,
  "fields": {
    "question": 1328,
    "text": "Django automatically reorders them based on internal priorities.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6641,
  "fields": {
    "question": 1329,
    "text": "<code>models.py</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6642,
  "fields": {
    "question": 1329,
    "text": "<code>admin.py</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6643,
  "fields": {
    "question": 1329,
    "text": "<code>settings.py</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6644,
  "fields": {
    "question": 1329,
    "text": "<code>views.py</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6645,
  "fields": {
    "question": 1329,
    "text": "The project's root <code>urls.py</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6646,
  "fields": {
    "question": 1330,
    "text": "<code>list_display</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6647,
  "fields": {
    "question": 1330,
    "text": "<code>list_search</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6648,
  "fields": {
    "question": 1330,
    "text": "<code>searchable_fields</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6649,
  "fields": {
    "question": 1330,
    "text": "<code>admin_search</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6650,
  "fields": {
    "question": 1330,
    "text": "<code>search_fields</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6651,
  "fields": {
    "question": 1331,
    "text": "Using dedicated cloud storage services like Amazon S3, Google Cloud Storage, or Azure Blob Storage.",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6652,
  "fields": {
    "question": 1331,
    "text": "Embedding them directly into the database.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6653,
  "fields": {
    "question": 1331,
    "text": "Serving them directly from the application server (e.g., Gunicorn).",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6654,
  "fields": {
    "question": 1331,
    "text": "Using the Django development server (<code>runserver</code>).",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6655,
  "fields": {
    "question": 1331,
    "text": "Storing them directly within the project's code repository.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6656,
  "fields": {
    "question": 1332,
    "text": "Loaded from a publicly accessible configuration file.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6657,
  "fields": {
    "question": 1332,
    "text": "Passed as command-line arguments to the WSGI server.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6658,
  "fields": {
    "question": 1332,
    "text": "Stored securely using environment variables or a secrets management system, accessed by <code>settings.py</code>.",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6659,
  "fields": {
    "question": 1332,
    "text": "Hardcoded directly in <code>settings.py</code> and committed to version control.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6660,
  "fields": {
    "question": 1332,
    "text": "Managed entirely by the web server (Nginx/Apache).",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6661,
  "fields": {
    "question": 1333,
    "text": "<code>django.middleware.csrf.CsrfViewMiddleware</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6662,
  "fields": {
    "question": 1333,
    "text": "<code>django.middleware.security.SecurityMiddleware</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6663,
  "fields": {
    "question": 1333,
    "text": "<code>django.contrib.messages.middleware.MessageMiddleware</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6664,
  "fields": {
    "question": 1333,
    "text": "<code>django.contrib.auth.middleware.AuthenticationMiddleware</code>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6665,
  "fields": {
    "question": 1333,
    "text": "<code>django.contrib.sessions.middleware.SessionMiddleware</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6666,
  "fields": {
    "question": 1334,
    "text": "<code>inspect</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6667,
  "fields": {
    "question": 1334,
    "text": "<code>check</code>",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6668,
  "fields": {
    "question": 1334,
    "text": "<code>verify</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6669,
  "fields": {
    "question": 1334,
    "text": "<code>validate</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6670,
  "fields": {
    "question": 1334,
    "text": "<code>test</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6671,
  "fields": {
    "question": 1335,
    "text": "To list static files that should be excluded from collection.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6672,
  "fields": {
    "question": 1335,
    "text": "To define the URL for static files.",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6673,
  "fields": {
    "question": 1335,
    "text": "To specify directories searched for static files during development.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6674,
  "fields": {
    "question": 1335,
    "text": "To configure the template engine for static files.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6675,
  "fields": {
    "question": 1335,
    "text": "To define the single directory where <code>collectstatic</code> will copy all project static files for deployment.",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6676,
  "fields": {
    "question": 1336,
    "text": "Place them in a public Gist for easy access.",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6677,
  "fields": {
    "question": 1336,
    "text": "Store them in environment variables and load them into <code>settings.py</code> at runtime.",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6678,
  "fields": {
    "question": 1336,
    "text": "Store them in comments within the <code>settings.py</code> file.",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6679,
  "fields": {
    "question": 1336,
    "text": "Email them to the deployment team.",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6680,
  "fields": {
    "question": 1336,
    "text": "Hardcode them directly in <code>settings.py</code> and commit to version control.",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6681,
  "fields": {
    "question": 1337,
    "text": "To prevent static files from being collected during deployment",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6682,
  "fields": {
    "question": 1337,
    "text": "To enable static file compression during local development",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6683,
  "fields": {
    "question": 1337,
    "text": "To create a manifest of all static files for debugging",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6684,
  "fields": {
    "question": 1337,
    "text": "To disable Django's development server static file handling and let Whitenoise handle static files consistently in both development and production",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6685,
  "fields": {
    "question": 1337,
    "text": "To optimize memory usage in the development environment",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6686,
  "fields": {
    "question": 1338,
    "text": "It controls how long the application waits for Cloud SQL to respond",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6687,
  "fields": {
    "question": 1338,
    "text": "It sets the maximum time App Engine will wait before scaling down idle instances",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6688,
  "fields": {
    "question": 1338,
    "text": "It determines the cache timeout for static files",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6689,
  "fields": {
    "question": 1338,
    "text": "It specifies how long database connections can remain idle before being closed",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6690,
  "fields": {
    "question": 1338,
    "text": "It defines how long gunicorn waits for a worker to process a request before killing and restarting it",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6691,
  "fields": {
    "question": 1339,
    "text": "STATIC_ROOT is the filesystem directory where collectstatic gathers files, while STATIC_URL is the URL path where static files are served",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6692,
  "fields": {
    "question": 1339,
    "text": "STATIC_ROOT is managed by App Engine, while STATIC_URL is managed by Django",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6693,
  "fields": {
    "question": 1339,
    "text": "STATIC_ROOT points to Cloud Storage, while STATIC_URL is for local files",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6694,
  "fields": {
    "question": 1339,
    "text": "STATIC_ROOT is for CSS and JavaScript, while STATIC_URL is for images and fonts",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6695,
  "fields": {
    "question": 1339,
    "text": "STATIC_ROOT is for production environments, while STATIC_URL is only for development",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6696,
  "fields": {
    "question": 1340,
    "text": "`gcloud app debug`",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6697,
  "fields": {
    "question": 1340,
    "text": "`gcloud app services check-health`",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6698,
  "fields": {
    "question": 1340,
    "text": "`gcloud app logs tail -s default`",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6699,
  "fields": {
    "question": 1340,
    "text": "`gcloud app describe`",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6700,
  "fields": {
    "question": 1340,
    "text": "`gcloud app instances list`",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6701,
  "fields": {
    "question": 1341,
    "text": "The Cloud SQL instance has been deleted or suspended due to billing issues",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6702,
  "fields": {
    "question": 1341,
    "text": "The database server is undergoing scheduled maintenance",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6703,
  "fields": {
    "question": 1341,
    "text": "Django's ORM is incompatible with the selected database engine",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6704,
  "fields": {
    "question": 1341,
    "text": "The DB_HOST path (/cloudsql/PROJECT_ID:REGION:INSTANCE_ID) is incorrect or the Cloud SQL proxy is not properly enabled in app.yaml",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6705,
  "fields": {
    "question": 1341,
    "text": "The psycopg2-binary package is missing from requirements.txt",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6706,
  "fields": {
    "question": 1342,
    "text": "It defines the computing resources allocated to each App Engine instance, with F1 being the smallest and cheapest option",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6707,
  "fields": {
    "question": 1342,
    "text": "It controls the authentication method used for securing the application",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6708,
  "fields": {
    "question": 1342,
    "text": "It determines which Cloud SQL instance type will be automatically provisioned",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6709,
  "fields": {
    "question": 1342,
    "text": "It sets the geographic region where the application will be deployed",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6710,
  "fields": {
    "question": 1342,
    "text": "It specifies the Python version to be used in the runtime environment",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6711,
  "fields": {
    "question": 1343,
    "text": "The maximum allowed CPU usage per instance before it's automatically restarted",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6712,
  "fields": {
    "question": 1343,
    "text": "The CPU threshold that triggers automatic static file compression",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6713,
  "fields": {
    "question": 1343,
    "text": "The minimum CPU allocation guaranteed for each instance",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6714,
  "fields": {
    "question": 1343,
    "text": "The CPU utilization threshold at which App Engine will add more instances to handle increased load",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6715,
  "fields": {
    "question": 1343,
    "text": "The percentage of CPU resources dedicated to database operations",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6716,
  "fields": {
    "question": 1344,
    "text": "The root user cannot connect from App Engine due to Google Cloud security restrictions",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6717,
  "fields": {
    "question": 1344,
    "text": "Secret Manager cannot store root user credentials",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6718,
  "fields": {
    "question": 1344,
    "text": "It follows the principle of least privilege, where the application only has the specific permissions it needs rather than full administrative access",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6719,
  "fields": {
    "question": 1344,
    "text": "Using the root user incurs additional billing charges in Google Cloud",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6720,
  "fields": {
    "question": 1344,
    "text": "Django's ORM is incompatible with database root users",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6721,
  "fields": {
    "question": 1345,
    "text": "It controls the maximum duration for handling a single request",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6722,
  "fields": {
    "question": 1345,
    "text": "It specifies which language runtime and version App Engine should use, such as python311 for Python 3.11",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6723,
  "fields": {
    "question": 1345,
    "text": "It sets execution time limits for background tasks",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6724,
  "fields": {
    "question": 1345,
    "text": "It specifies the periodic scheduling of maintenance operations",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6725,
  "fields": {
    "question": 1345,
    "text": "It defines how long each instance will run before being recycled",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6726,
  "fields": {
    "question": 1346,
    "text": "They optimize database queries by analyzing ORM usage patterns",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6727,
  "fields": {
    "question": 1346,
    "text": "They scan the application for security vulnerabilities before deployment",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6728,
  "fields": {
    "question": 1346,
    "text": "They automatically detect the application language, install dependencies from requirements.txt, and determine how to run the application",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6729,
  "fields": {
    "question": 1346,
    "text": "They create reusable templates for common application components",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6730,
  "fields": {
    "question": 1346,
    "text": "They compress all application files into a single executable package for faster loading",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6731,
  "fields": {
    "question": 1347,
    "text": "To intercept requests for static files early in the request processing chain, before they reach the Django application code",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6732,
  "fields": {
    "question": 1347,
    "text": "To log access to static files for analytics purposes",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6733,
  "fields": {
    "question": 1347,
    "text": "To generate static file URLs that include CDN paths",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6734,
  "fields": {
    "question": 1347,
    "text": "To compress response data before sending it to the client",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6735,
  "fields": {
    "question": 1347,
    "text": "To validate that all static files exist before processing a request",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6736,
  "fields": {
    "question": 1348,
    "text": "It tells Django which settings file to use, using dot notation to indicate the Python module path",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6737,
  "fields": {
    "question": 1348,
    "text": "It creates a mandatory environment variable required by gunicorn",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6738,
  "fields": {
    "question": 1348,
    "text": "It specifies the entry point for all HTTP requests",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6739,
  "fields": {
    "question": 1348,
    "text": "It sets up a Django task queue for background processing",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6740,
  "fields": {
    "question": 1348,
    "text": "It defines which Django app contains the project's URLs configuration",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6741,
  "fields": {
    "question": 1349,
    "text": "Exclusively for development environments to avoid production security risks",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6742,
  "fields": {
    "question": 1349,
    "text": "Only when setting up custom domains, as standard domains don't require API enabling",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6743,
  "fields": {
    "question": 1349,
    "text": "Never, as Django automatically requests API activation during the deployment process",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6744,
  "fields": {
    "question": 1349,
    "text": "After deployment, to ensure that only the necessary APIs are enabled based on actual usage",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6745,
  "fields": {
    "question": 1349,
    "text": "Before deployment, to activate required Google Cloud services like App Engine, Cloud SQL, Secret Manager, and Cloud Build",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6746,
  "fields": {
    "question": 1350,
    "text": "It's required for App Engine to store deployment logs securely",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6747,
  "fields": {
    "question": 1350,
    "text": "It grants App Engine permission to rotate secret values periodically",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6748,
  "fields": {
    "question": 1350,
    "text": "It enables App Engine to create new secrets during deployment",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6749,
  "fields": {
    "question": 1350,
    "text": "It permits App Engine to modify secrets automatically when they're about to expire",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6750,
  "fields": {
    "question": 1350,
    "text": "It allows the App Engine application to read secret values from Secret Manager during runtime",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6751,
  "fields": {
    "question": 1351,
    "text": "Update code, modify app.yaml if needed, run gcloud app deploy, then run migrations via Cloud SQL Auth Proxy",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6752,
  "fields": {
    "question": 1351,
    "text": "Deploy to a staging version first, run migrations there, then promote to production",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6753,
  "fields": {
    "question": 1351,
    "text": "Run migrations locally, upload the updated database, then deploy the application code",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6754,
  "fields": {
    "question": 1351,
    "text": "Run gcloud app deploy, which automatically detects changes and runs migrations",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6755,
  "fields": {
    "question": 1351,
    "text": "Stop all running instances, deploy the new version, run migrations, then restart instances",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6756,
  "fields": {
    "question": 1352,
    "text": "App Engine Standard supports Python applications, while Cloud Run only supports containerized JavaScript applications",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6757,
  "fields": {
    "question": 1352,
    "text": "App Engine Standard always requires at least one running instance, while Cloud Run can scale to zero",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6758,
  "fields": {
    "question": 1352,
    "text": "App Engine Standard is limited to a single region, while Cloud Run can deploy globally",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6759,
  "fields": {
    "question": 1352,
    "text": "App Engine Standard uses buildpacks and simpler configuration through app.yaml, while Cloud Run requires a Dockerfile and offers more container environment control",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6760,
  "fields": {
    "question": 1352,
    "text": "App Engine Standard is free for low-traffic applications, while Cloud Run always incurs charges",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6761,
  "fields": {
    "question": 1353,
    "text": "To enforce HTTPS by automatically redirecting all HTTP requests to HTTPS",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6762,
  "fields": {
    "question": 1353,
    "text": "To ensure files are encrypted during deployment",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6763,
  "fields": {
    "question": 1353,
    "text": "To restrict access to the application to authenticated users only",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6764,
  "fields": {
    "question": 1353,
    "text": "To enable HTTP Strict Transport Security (HSTS) headers",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6765,
  "fields": {
    "question": 1353,
    "text": "To enable encryption for data stored in Cloud SQL",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6766,
  "fields": {
    "question": 1354,
    "text": "To improve security by using a non-standard port",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6767,
  "fields": {
    "question": 1354,
    "text": "To avoid conflicts with any local database instance that might be running on the default port (5432)",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6768,
  "fields": {
    "question": 1354,
    "text": "To bypass firewall restrictions that might block the default port",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6769,
  "fields": {
    "question": 1354,
    "text": "To enable compatibility with Django's migration system",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6770,
  "fields": {
    "question": 1354,
    "text": "To enable SSL encryption which only works on alternate ports",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6771,
  "fields": {
    "question": 1355,
    "text": "It limits each user to one active session",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6772,
  "fields": {
    "question": 1355,
    "text": "It restricts the application to using a single CPU core",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6773,
  "fields": {
    "question": 1355,
    "text": "It ensures at least one instance is always running, even with no traffic",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6774,
  "fields": {
    "question": 1355,
    "text": "It creates one dedicated database connection per application instance",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6775,
  "fields": {
    "question": 1355,
    "text": "It limits the application to running at most one instance, regardless of traffic",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6776,
  "fields": {
    "question": 1356,
    "text": "App Engine automatically blocks requests with suspicious patterns",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6777,
  "fields": {
    "question": 1356,
    "text": "The Cloud SQL instance is in a different region than the App Engine application",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6778,
  "fields": {
    "question": 1356,
    "text": "The domain making the request isn't included in Django's ALLOWED_HOSTS setting",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6779,
  "fields": {
    "question": 1356,
    "text": "POST requests are disabled by default in App Engine",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6780,
  "fields": {
    "question": 1356,
    "text": "The application has exceeded its quota for request handling",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6781,
  "fields": {
    "question": 1357,
    "text": "It combines multiple static files into a single compressed file to reduce HTTP requests",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6782,
  "fields": {
    "question": 1357,
    "text": "It triggers automatic minification of JavaScript and CSS files",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6783,
  "fields": {
    "question": 1357,
    "text": "It moves all static files to Google Cloud Storage for serving",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6784,
  "fields": {
    "question": 1357,
    "text": "It configures Whitenoise to handle compression of static files and add version hashes to filenames for optimal browser caching",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6785,
  "fields": {
    "question": 1357,
    "text": "It limits static file access to authenticated users only",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6786,
  "fields": {
    "question": 1358,
    "text": "Running database migrations using the Cloud SQL Auth Proxy",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6787,
  "fields": {
    "question": 1358,
    "text": "Running collectstatic on the deployed instance",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6788,
  "fields": {
    "question": 1358,
    "text": "Creating a new version of the application",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6789,
  "fields": {
    "question": 1358,
    "text": "Enabling the Cloud SQL Admin API",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6790,
  "fields": {
    "question": 1358,
    "text": "Restarting the App Engine service",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6791,
  "fields": {
    "question": 1359,
    "text": "It eliminates the need for a production database like Cloud SQL",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6792,
  "fields": {
    "question": 1359,
    "text": "It can scale down to zero instances when there's no traffic, minimizing costs",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6793,
  "fields": {
    "question": 1359,
    "text": "It provides unlimited free tier usage for all Google Cloud services",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6794,
  "fields": {
    "question": 1359,
    "text": "It automatically provisions multiple database instances to handle traffic spikes",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6795,
  "fields": {
    "question": 1359,
    "text": "It automatically runs database migrations during deployment",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6796,
  "fields": {
    "question": 1360,
    "text": "Create a separate private API endpoint that returns the password when needed",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6797,
  "fields": {
    "question": 1360,
    "text": "Store the password in an environment variable on your local machine and let App Engine copy it during deployment",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6798,
  "fields": {
    "question": 1360,
    "text": "Store the value in Secret Manager, grant the App Engine service account access to the secret, and reference the secret in app.yaml",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6799,
  "fields": {
    "question": 1360,
    "text": "Include the password in settings.py but restrict file permissions",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6800,
  "fields": {
    "question": 1360,
    "text": "Hard-code the password in app.yaml but encrypt the file before deployment",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6801,
  "fields": {
    "question": 1361,
    "text": "Network egress for traffic leaving Google's network",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6802,
  "fields": {
    "question": 1361,
    "text": "The App Engine instances themselves, which always keep at least one instance running",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6803,
  "fields": {
    "question": 1361,
    "text": "Storage costs for static files",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6804,
  "fields": {
    "question": 1361,
    "text": "Secret Manager access fees for each request",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6805,
  "fields": {
    "question": 1361,
    "text": "The Cloud SQL database instance, which runs continuously unless manually stopped",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6806,
  "fields": {
    "question": 1362,
    "text": "It ensures all application traffic stays within Google's internal network",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6807,
  "fields": {
    "question": 1362,
    "text": "It's required for Secret Manager but not for the database connection itself",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6808,
  "fields": {
    "question": 1362,
    "text": "It's only required for MySQL databases, not PostgreSQL",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6809,
  "fields": {
    "question": 1362,
    "text": "It reduces latency between the application and database and is required for the App Engine managed SQL proxy to work properly",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6810,
  "fields": {
    "question": 1362,
    "text": "It allows backups to be shared between services",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6811,
  "fields": {
    "question": 1363,
    "text": "It's required for connecting to PostgreSQL databases in the cloud",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6812,
  "fields": {
    "question": 1363,
    "text": "It manages static file compression and serving without using Cloud Storage",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6813,
  "fields": {
    "question": 1363,
    "text": "It automatically handles database migrations during deployment",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6814,
  "fields": {
    "question": 1363,
    "text": "It's a production-ready WSGI HTTP server for running Django, replacing the unsafe development server",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6815,
  "fields": {
    "question": 1363,
    "text": "It's Google's proprietary server framework required for App Engine deployments",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6816,
  "fields": {
    "question": 1364,
    "text": "It provides a safer way to access environment variables, raising clear errors if required variables are missing in production",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6817,
  "fields": {
    "question": 1364,
    "text": "It automatically creates environment variables that don't exist yet",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6818,
  "fields": {
    "question": 1364,
    "text": "It validates that environment variables match a specific format",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6819,
  "fields": {
    "question": 1364,
    "text": "It encrypts sensitive environment variables for added security",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6820,
  "fields": {
    "question": 1364,
    "text": "It synchronizes environment variables between local and cloud environments",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6821,
  "fields": {
    "question": 1365,
    "text": "To allow static files to be served by Whitenoise",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6822,
  "fields": {
    "question": 1365,
    "text": "To reduce billing costs in Google Cloud",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6823,
  "fields": {
    "question": 1365,
    "text": "To improve security and performance by disabling detailed error pages and development features",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6824,
  "fields": {
    "question": 1365,
    "text": "To make Django compatible with gunicorn",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6825,
  "fields": {
    "question": 1365,
    "text": "To enable automatic database backups",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6826,
  "fields": {
    "question": 1366,
    "text": "To encrypt static files for enhanced security",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6827,
  "fields": {
    "question": 1366,
    "text": "To limit which static files are available in the production environment",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6828,
  "fields": {
    "question": 1366,
    "text": "To prevent static files from being deployed with the application code",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6829,
  "fields": {
    "question": 1366,
    "text": "To specify the Cloud Storage bucket where static files will be uploaded",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6830,
  "fields": {
    "question": 1366,
    "text": "To enable compression and add version hashes to filenames for robust browser caching",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6831,
  "fields": {
    "question": 1367,
    "text": "It disables automatic scaling entirely",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6832,
  "fields": {
    "question": 1367,
    "text": "It tells App Engine to maintain at least zero database connections",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6833,
  "fields": {
    "question": 1367,
    "text": "It prevents the application from accepting any traffic until manually scaled",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6834,
  "fields": {
    "question": 1367,
    "text": "It allows App Engine to completely shut down when there's no traffic, saving costs for low-traffic applications",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6835,
  "fields": {
    "question": 1367,
    "text": "It causes the application to restart whenever traffic drops to zero",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6836,
  "fields": {
    "question": 1368,
    "text": "To check for potential conflicts with the App Engine static handlers",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6837,
  "fields": {
    "question": 1368,
    "text": "To gather all static files into a single directory (STATIC_ROOT) so Whitenoise can find and serve them",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6838,
  "fields": {
    "question": 1368,
    "text": "To validate that all required static files exist before deployment",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6839,
  "fields": {
    "question": 1368,
    "text": "To compress all Python files for faster execution in the cloud",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6840,
  "fields": {
    "question": 1368,
    "text": "To register your static files with Cloud Storage",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6841,
  "fields": {
    "question": 1369,
    "text": "It restricts access to the Django admin site",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6842,
  "fields": {
    "question": 1369,
    "text": "It's a security measure that specifies which host/domain names Django can serve, preventing Host header attacks",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6843,
  "fields": {
    "question": 1369,
    "text": "It defines which App Engine regions can run instances of your application",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6844,
  "fields": {
    "question": 1369,
    "text": "It determines which other Google Cloud services can access your application",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6845,
  "fields": {
    "question": 1369,
    "text": "It configures which IP addresses can connect to your Cloud SQL instance",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6846,
  "fields": {
    "question": 1370,
    "text": "To specify which files and directories should NOT be uploaded to App Engine during deployment",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6847,
  "fields": {
    "question": 1370,
    "text": "To exclude specific Django apps from the production environment",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6848,
  "fields": {
    "question": 1370,
    "text": "To prevent certain URLs from being publicly accessible",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6849,
  "fields": {
    "question": 1370,
    "text": "To mark files that should be encrypted during the deployment process",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6850,
  "fields": {
    "question": 1370,
    "text": "To hide sensitive code from developers with limited permissions",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6851,
  "fields": {
    "question": 1371,
    "text": "It controls how static files are processed during deployment",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6852,
  "fields": {
    "question": 1371,
    "text": "It configures how App Engine connects to external services like Cloud SQL",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6853,
  "fields": {
    "question": 1371,
    "text": "It defines how App Engine should route incoming traffic to different versions of the application",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6854,
  "fields": {
    "question": 1371,
    "text": "It establishes security policies for incoming requests",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6855,
  "fields": {
    "question": 1371,
    "text": "It specifies how to start the web server, including binding to the assigned port and configuring worker processes",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6856,
  "fields": {
    "question": 1372,
    "text": "The main Django view function that handles requests",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6857,
  "fields": {
    "question": 1372,
    "text": "The URL path where users will first enter the application",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6858,
  "fields": {
    "question": 1372,
    "text": "The location of static files for serving",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6859,
  "fields": {
    "question": 1372,
    "text": "The Cloud SQL instance connection string",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6860,
  "fields": {
    "question": 1372,
    "text": "The command used to start the web server, typically using gunicorn",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6861,
  "fields": {
    "question": 1373,
    "text": "To serve static files efficiently with proper caching headers directly from Django/gunicorn",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6862,
  "fields": {
    "question": 1373,
    "text": "To minimize HTML output by removing whitespace",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6863,
  "fields": {
    "question": 1373,
    "text": "To encrypt database connections between App Engine and Cloud SQL",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6864,
  "fields": {
    "question": 1373,
    "text": "To generate clean URLs without query parameters",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6865,
  "fields": {
    "question": 1373,
    "text": "To sanitize user inputs and prevent XSS attacks",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6866,
  "fields": {
    "question": 1374,
    "text": "To securely store and access sensitive information like database passwords and the Django SECRET_KEY",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6867,
  "fields": {
    "question": 1374,
    "text": "To encrypt all traffic between App Engine and Cloud SQL",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6868,
  "fields": {
    "question": 1374,
    "text": "To manage API authentication between different Google Cloud services",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6869,
  "fields": {
    "question": 1374,
    "text": "To hide the application source code from potential attackers",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6870,
  "fields": {
    "question": 1374,
    "text": "To automatically generate secure passwords for database users",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6871,
  "fields": {
    "question": 1375,
    "text": "To explicitly enable the Cloud SQL proxy feature for App Engine Standard, making the DB_HOST path work",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6872,
  "fields": {
    "question": 1375,
    "text": "To enable advanced scaling features not available in the standard configuration",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6873,
  "fields": {
    "question": 1375,
    "text": "To configure testing environments separate from production",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6874,
  "fields": {
    "question": 1375,
    "text": "To enable experimental features that might change in future App Engine versions",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6875,
  "fields": {
    "question": 1375,
    "text": "To specify which version of the application should receive beta testing traffic",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6876,
  "fields": {
    "question": 1376,
    "text": "To cache database queries and improve performance",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6877,
  "fields": {
    "question": 1376,
    "text": "To automatically sync your local development database with Cloud SQL",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6878,
  "fields": {
    "question": 1376,
    "text": "To allow public access to your database for debugging purposes",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6879,
  "fields": {
    "question": 1376,
    "text": "To create a secure tunnel to your Cloud SQL instance for running migrations and accessing the database locally",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6880,
  "fields": {
    "question": 1376,
    "text": "To generate database schema documentation",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6881,
  "fields": {
    "question": 1377,
    "text": "Because SQLite cannot handle concurrent connections, which App Engine requires",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6882,
  "fields": {
    "question": 1377,
    "text": "Because SQLite is not compatible with Python 3.x versions",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6883,
  "fields": {
    "question": 1377,
    "text": "Because Django's ORM doesn't support SQLite in production environments",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6884,
  "fields": {
    "question": 1377,
    "text": "Because App Engine's filesystem is read-only/ephemeral, so SQLite data would be lost after each instance restart",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6885,
  "fields": {
    "question": 1377,
    "text": "Because Google Cloud explicitly blocks SQLite for security reasons",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6886,
  "fields": {
    "question": 1378,
    "text": "It's a shorthand reference to a local SQLite database for development",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6887,
  "fields": {
    "question": 1378,
    "text": "It represents the public IP address of the Cloud SQL instance",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6888,
  "fields": {
    "question": 1378,
    "text": "It's a temporary path that gets replaced with the actual hostname during deployment",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6889,
  "fields": {
    "question": 1378,
    "text": "It's a special path that App Engine uses to connect to Cloud SQL via its managed proxy",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6890,
  "fields": {
    "question": 1378,
    "text": "It indicates a read-only database connection for improved security",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6891,
  "fields": {
    "question": 1379,
    "text": "MariaDB, because Google doesn't support it on their platform",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6892,
  "fields": {
    "question": 1379,
    "text": "SQLite, because Cloud Run instances have an ephemeral filesystem and data written directly inside the container is lost when it restarts or scales down",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6893,
  "fields": {
    "question": 1379,
    "text": "MySQL, because it causes security vulnerabilities in Cloud Run",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6894,
  "fields": {
    "question": 1379,
    "text": "PostgreSQL, because it's not compatible with Google Cloud services",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6895,
  "fields": {
    "question": 1379,
    "text": "Any database, as Django applications should use file-based storage instead",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6896,
  "fields": {
    "question": 1380,
    "text": "django-db://USER:PASSWORD@cloudsql/DATABASE",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6897,
  "fields": {
    "question": 1380,
    "text": "postgres://USER:PASSWORD@INSTANCE_IP:5432/DATABASE",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6898,
  "fields": {
    "question": 1380,
    "text": "sql://google/PROJECT/REGION/INSTANCE/DATABASE?user=USER=PASSWORD",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6899,
  "fields": {
    "question": 1380,
    "text": "cloudsql://PROJECT:REGION:INSTANCE/DATABASE/USER/PASSWORD",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6900,
  "fields": {
    "question": 1380,
    "text": "postgresql://USER:PASSWORD@/DATABASE?host=/cloudsql/PROJECT:REGION:INSTANCE",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6901,
  "fields": {
    "question": 1381,
    "text": "RUN python manage.py collectstatic --noinput",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6902,
  "fields": {
    "question": 1381,
    "text": "CMD python manage.py collectstatic --noinput",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6903,
  "fields": {
    "question": 1381,
    "text": "DJANGO collectstatic --noinput",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6904,
  "fields": {
    "question": 1381,
    "text": "ENTRYPOINT [\"python\", \"manage.py\", \"collectstatic\"]",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6905,
  "fields": {
    "question": 1381,
    "text": "EXEC python manage.py collectstatic --noinput",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6906,
  "fields": {
    "question": 1382,
    "text": "It converts Django migrations to SQL-specific syntax",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6907,
  "fields": {
    "question": 1382,
    "text": "It automatically generates the migration files based on your models",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6908,
  "fields": {
    "question": 1382,
    "text": "It provides temporary admin credentials to the database",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6909,
  "fields": {
    "question": 1382,
    "text": "It validates that migrations will work in the cloud environment",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6910,
  "fields": {
    "question": 1382,
    "text": "It creates a secure, authenticated connection tunnel from your local machine to your Cloud SQL instance without requiring firewall rules",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6911,
  "fields": {
    "question": 1383,
    "text": "gunicorn core.wsgi:application --bind 0.0.0.0:8080",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6912,
  "fields": {
    "question": 1383,
    "text": "nginx -c /etc/nginx/django.conf",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6913,
  "fields": {
    "question": 1383,
    "text": "uwsgi --http :8080 --module core.wsgi",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6914,
  "fields": {
    "question": 1383,
    "text": "django-admin start --production --port=8080",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6915,
  "fields": {
    "question": 1383,
    "text": "python manage.py runserver 0.0.0.0:8080",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6916,
  "fields": {
    "question": 1384,
    "text": "It automatically compresses all static files",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6917,
  "fields": {
    "question": 1384,
    "text": "It improves application performance by at least 50%",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6918,
  "fields": {
    "question": 1384,
    "text": "It's required by Google Cloud Run to enable the service",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6919,
  "fields": {
    "question": 1384,
    "text": "It prevents users from accessing the admin interface",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6920,
  "fields": {
    "question": 1384,
    "text": "It's critical for security as it disables detailed error pages and other development helpers that could expose sensitive information",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6921,
  "fields": {
    "question": 1385,
    "text": "Cloud Run will detect and run missing migrations",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6922,
  "fields": {
    "question": 1385,
    "text": "Django will automatically run migrations on the first request",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6923,
  "fields": {
    "question": 1385,
    "text": "Your application will likely show database errors as the schema doesn't exist in Cloud SQL",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6924,
  "fields": {
    "question": 1385,
    "text": "The container will fail to start entirely",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6925,
  "fields": {
    "question": 1385,
    "text": "Your tables will be created but without any constraints or indexes",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6926,
  "fields": {
    "question": 1386,
    "text": "It syncs your local database schema to Cloud SQL",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6927,
  "fields": {
    "question": 1386,
    "text": "It creates a new Cloud SQL instance during deployment",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6928,
  "fields": {
    "question": 1386,
    "text": "It provisions a Cloud SQL Auth Proxy sidecar container that creates a secure connection tunnel to your Cloud SQL instance",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6929,
  "fields": {
    "question": 1386,
    "text": "It grants the Cloud Run service admin privileges to the database",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6930,
  "fields": {
    "question": 1386,
    "text": "It creates a direct public connection to your database",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6931,
  "fields": {
    "question": 1387,
    "text": "It automatically handles database migrations during deployment",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6932,
  "fields": {
    "question": 1387,
    "text": "It integrates natively with Django's development server",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6933,
  "fields": {
    "question": 1387,
    "text": "It provides unlimited free storage for Django applications",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6934,
  "fields": {
    "question": 1387,
    "text": "It eliminates the need to use Docker containers",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6935,
  "fields": {
    "question": 1387,
    "text": "It scales down to zero instances when not in use, saving costs by only charging when requests are being processed",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6936,
  "fields": {
    "question": 1388,
    "text": "It manages database connection pooling",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6937,
  "fields": {
    "question": 1388,
    "text": "It compresses the Django code base to reduce container size",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6938,
  "fields": {
    "question": 1388,
    "text": "It allows the web server to serve static files directly and efficiently, often with better caching behavior",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6939,
  "fields": {
    "question": 1388,
    "text": "It provides a required security layer between Cloud Run and Django",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6940,
  "fields": {
    "question": 1388,
    "text": "It's a required component to access Cloud SQL databases",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6941,
  "fields": {
    "question": 1389,
    "text": "It documents which port the application will listen on inside the container, but does not actually publish the port",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6942,
  "fields": {
    "question": 1389,
    "text": "It tells Cloud Run which port to route traffic to",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6943,
  "fields": {
    "question": 1389,
    "text": "It maps an external port to an internal container port",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6944,
  "fields": {
    "question": 1389,
    "text": "It opens the specified port on the container to the public internet",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6945,
  "fields": {
    "question": 1389,
    "text": "It enables traffic encryption for the specified port",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6946,
  "fields": {
    "question": 1390,
    "text": "CLOUD_RUN_URL",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6947,
  "fields": {
    "question": 1390,
    "text": "SERVICE_URL",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6948,
  "fields": {
    "question": 1390,
    "text": "APP_DOMAIN",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6949,
  "fields": {
    "question": 1390,
    "text": "GOOGLE_SERVICE_DOMAIN",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6950,
  "fields": {
    "question": 1390,
    "text": "DJANGO_HOST",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6951,
  "fields": {
    "question": 1391,
    "text": "run.googleapis.com",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6952,
  "fields": {
    "question": 1391,
    "text": "sqladmin.googleapis.com",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6953,
  "fields": {
    "question": 1391,
    "text": "secretmanager.googleapis.com",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6954,
  "fields": {
    "question": 1391,
    "text": "appengine.googleapis.com",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6955,
  "fields": {
    "question": 1391,
    "text": "cloudbuild.googleapis.com",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6956,
  "fields": {
    "question": 1392,
    "text": "gunicorn with 2-3 workers and 4 threads per worker",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6957,
  "fields": {
    "question": 1392,
    "text": "gunicorn with 32 workers and no threading",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6958,
  "fields": {
    "question": 1392,
    "text": "gunicorn with 1 worker and 1 thread to minimize memory usage",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6959,
  "fields": {
    "question": 1392,
    "text": "Apache with mod_wsgi using 16 processes",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6960,
  "fields": {
    "question": 1392,
    "text": "Django's development server with debug disabled",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6961,
  "fields": {
    "question": 1393,
    "text": "Django's development server cannot run in Docker containers",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6962,
  "fields": {
    "question": 1393,
    "text": "gunicorn is required to connect to Cloud SQL databases",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6963,
  "fields": {
    "question": 1393,
    "text": "The built-in Django development server is not suitable for production as it's insecure and inefficient, while gunicorn is a robust production-grade WSGI server",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6964,
  "fields": {
    "question": 1393,
    "text": "Django's development server doesn't support serving static files in the cloud",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6965,
  "fields": {
    "question": 1393,
    "text": "gunicorn is the only web server compatible with Google Cloud Run",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6966,
  "fields": {
    "question": 1394,
    "text": "It specifies which Docker commands are allowed to run inside the container",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6967,
  "fields": {
    "question": 1394,
    "text": "It tells Docker what not to copy into the container image, keeping the image small, speeding up builds, and avoiding including sensitive files",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6968,
  "fields": {
    "question": 1394,
    "text": "It's required by Google Cloud Build to identify Django applications",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6969,
  "fields": {
    "question": 1394,
    "text": "It tells Cloud Run which files to exclude from logging",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6970,
  "fields": {
    "question": 1394,
    "text": "It defines which files should be backed up before deployment",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6971,
  "fields": {
    "question": 1395,
    "text": "Cloud Run Secret User",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6972,
  "fields": {
    "question": 1395,
    "text": "IAM Security Manager",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6973,
  "fields": {
    "question": 1395,
    "text": "Secret Manager Admin",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6974,
  "fields": {
    "question": 1395,
    "text": "Secret Manager Secret Accessor",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6975,
  "fields": {
    "question": 1395,
    "text": "Storage Object Viewer",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6976,
  "fields": {
    "question": 1396,
    "text": "It enables SSL certificate verification for all outgoing requests",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6977,
  "fields": {
    "question": 1396,
    "text": "It tells Django to trust the X-Forwarded-Proto header from Google's load balancers to correctly identify secure HTTPS requests",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6978,
  "fields": {
    "question": 1396,
    "text": "It forces all HTTP requests to be redirected to HTTPS",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6979,
  "fields": {
    "question": 1396,
    "text": "It disables SSL for development environments only",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6980,
  "fields": {
    "question": 1396,
    "text": "It specifies the path to the SSL certificate files",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6981,
  "fields": {
    "question": 1397,
    "text": "Cloud Run compute resources",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6982,
  "fields": {
    "question": 1397,
    "text": "Container Registry storage",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6983,
  "fields": {
    "question": 1397,
    "text": "Cloud SQL, as the database instance runs continuously even when there is no traffic",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6984,
  "fields": {
    "question": 1397,
    "text": "Secret Manager access fees",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6985,
  "fields": {
    "question": 1397,
    "text": "Cloud Build minutes",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6986,
  "fields": {
    "question": 1398,
    "text": "It prevents Python package conflicts with the container's base image",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6987,
  "fields": {
    "question": 1398,
    "text": "It leverages Docker's layer caching mechanism to speed up subsequent builds if only application code changes",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6988,
  "fields": {
    "question": 1398,
    "text": "It allows Django to validate the requirements before installing the application",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6989,
  "fields": {
    "question": 1398,
    "text": "It ensures Django will start properly since all dependencies are loaded first",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6990,
  "fields": {
    "question": 1398,
    "text": "It's required by Google Cloud Run's security protocols",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6991,
  "fields": {
    "question": 1399,
    "text": "Hardcode it directly in the settings.py file",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6992,
  "fields": {
    "question": 1399,
    "text": "Store it in a file within the Docker image",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6993,
  "fields": {
    "question": 1399,
    "text": "Use Cloud Run's built-in secret service (--django-secret flag)",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6994,
  "fields": {
    "question": 1399,
    "text": "Generate a new one on each container startup",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6995,
  "fields": {
    "question": 1399,
    "text": "Store it in Google Secret Manager and inject it as an environment variable using the --set-secrets flag",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6996,
  "fields": {
    "question": 1400,
    "text": "It prevents Python from generating .pyc compiled files, reducing clutter in the container",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6997,
  "fields": {
    "question": 1400,
    "text": "It prevents Django from writing to the database",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6998,
  "fields": {
    "question": 1400,
    "text": "It disables all file writing operations in Python",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 6999,
  "fields": {
    "question": 1400,
    "text": "It forces Python to compile all code at container startup",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7000,
  "fields": {
    "question": 1400,
    "text": "It forces Django to serve only static files",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7001,
  "fields": {
    "question": 1401,
    "text": "Django's ORM features are limited when using SQLite in production",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7002,
  "fields": {
    "question": 1401,
    "text": "SQLite databases are incompatible with Python when running in containers",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7003,
  "fields": {
    "question": 1401,
    "text": "Cloud Run instances have ephemeral filesystems - any data written to the container is lost when it restarts or scales down",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7004,
  "fields": {
    "question": 1401,
    "text": "Google charges extra fees for file-based databases in Cloud Run",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7005,
  "fields": {
    "question": 1401,
    "text": "SQLite cannot handle more than one concurrent connection",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7006,
  "fields": {
    "question": 1402,
    "text": "It encrypts all environment variables in the container",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7007,
  "fields": {
    "question": 1402,
    "text": "It maps secrets from Secret Manager to environment variables inside the container",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7008,
  "fields": {
    "question": 1402,
    "text": "It creates new secrets in Secret Manager during deployment",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7009,
  "fields": {
    "question": 1402,
    "text": "It sets a password for accessing the Cloud Run service",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7010,
  "fields": {
    "question": 1402,
    "text": "It enables encrypted communication between microservices",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7011,
  "fields": {
    "question": 1403,
    "text": "27017",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7012,
  "fields": {
    "question": 1403,
    "text": "8080",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7013,
  "fields": {
    "question": 1403,
    "text": "3306",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7014,
  "fields": {
    "question": 1403,
    "text": "1433",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7015,
  "fields": {
    "question": 1403,
    "text": "5432",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7016,
  "fields": {
    "question": 1404,
    "text": "It compiles Python code to binary format for faster execution",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7017,
  "fields": {
    "question": 1404,
    "text": "It disables Python's garbage collection to improve performance",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7018,
  "fields": {
    "question": 1404,
    "text": "It limits Python's memory usage in the container",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7019,
  "fields": {
    "question": 1404,
    "text": "It ensures Python output (like logs) is sent straight to the terminal without buffering, making logs immediately visible",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7020,
  "fields": {
    "question": 1404,
    "text": "It tells Django to use asynchronous views only",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7021,
  "fields": {
    "question": 1405,
    "text": "The URL path where the application will be accessible",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7022,
  "fields": {
    "question": 1405,
    "text": "Commands to run during the image build process",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7023,
  "fields": {
    "question": 1405,
    "text": "The list of files to include in the container",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7024,
  "fields": {
    "question": 1405,
    "text": "The maximum memory allocation for the container",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7025,
  "fields": {
    "question": 1405,
    "text": "The command that gets executed when a container starts from the image",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7026,
  "fields": {
    "question": 1406,
    "text": "Gunicorn is optional but whitenoise is required by Cloud Run",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7027,
  "fields": {
    "question": 1406,
    "text": "Gunicorn serves static files while whitenoise handles Python code execution",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7028,
  "fields": {
    "question": 1406,
    "text": "Gunicorn is a development server while whitenoise is a production server",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7029,
  "fields": {
    "question": 1406,
    "text": "Gunicorn manages database connections while whitenoise handles HTTP requests",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7030,
  "fields": {
    "question": 1406,
    "text": "Gunicorn is the WSGI server that runs your Django application, while whitenoise is middleware that efficiently serves static files",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7031,
  "fields": {
    "question": 1407,
    "text": "Automatically by Cloud Run during the deployment",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7032,
  "fields": {
    "question": 1407,
    "text": "Only in development environments as static files are not needed in production",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7033,
  "fields": {
    "question": 1407,
    "text": "After deployment, as part of the container startup process",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7034,
  "fields": {
    "question": 1407,
    "text": "During the Docker image build process (in the Dockerfile) so static files are included in the image",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7035,
  "fields": {
    "question": 1407,
    "text": "On the local machine, with files uploaded to Cloud Storage separately",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7036,
  "fields": {
    "question": 1408,
    "text": "dj-database-url",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7037,
  "fields": {
    "question": 1408,
    "text": "google-db-parser",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7038,
  "fields": {
    "question": 1408,
    "text": "django-environ",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7039,
  "fields": {
    "question": 1408,
    "text": "django-cloud-connector",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7040,
  "fields": {
    "question": 1408,
    "text": "cloud-sql-python",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7041,
  "fields": {
    "question": 1409,
    "text": "postgresql://USER:PASSWORD@PROJECT:REGION:INSTANCE/DATABASE",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7042,
  "fields": {
    "question": 1409,
    "text": "postgresql://cloudsql/USER:PASSWORD@PROJECT:REGION:INSTANCE/DATABASE",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7043,
  "fields": {
    "question": 1409,
    "text": "postgresql://USER@/DATABASE?host=/cloudsql/PROJECT:REGION:INSTANCE",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7044,
  "fields": {
    "question": 1409,
    "text": "postgresql://googlecloud/USER:PASSWORD/DATABASE/PROJECT:REGION:INSTANCE",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7045,
  "fields": {
    "question": 1409,
    "text": "postgresql://USER:PASSWORD@localhost/DATABASE?project=PROJECT=REGION",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7046,
  "fields": {
    "question": 1410,
    "text": "Kubernetes Engine",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7047,
  "fields": {
    "question": 1410,
    "text": "Compute Engine",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7048,
  "fields": {
    "question": 1410,
    "text": "App Engine Flex",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7049,
  "fields": {
    "question": 1410,
    "text": "Container Registry",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7050,
  "fields": {
    "question": 1410,
    "text": "Cloud Build",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7051,
  "fields": {
    "question": 1411,
    "text": "Public IP whitelisting",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7052,
  "fields": {
    "question": 1411,
    "text": "Django's database router",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7053,
  "fields": {
    "question": 1411,
    "text": "A direct VPC network connection",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7054,
  "fields": {
    "question": 1411,
    "text": "Google Cloud Connector plugin",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7055,
  "fields": {
    "question": 1411,
    "text": "The Cloud SQL Auth Proxy sidecar container",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7056,
  "fields": {
    "question": 1412,
    "text": "It enables anonymous admin access to your Django application",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7057,
  "fields": {
    "question": 1412,
    "text": "It makes your service accessible to the public internet without requiring Google account login",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7058,
  "fields": {
    "question": 1412,
    "text": "It permits connections to your database without credentials",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7059,
  "fields": {
    "question": 1412,
    "text": "It allows your service to access other Google Cloud services without authentication",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7060,
  "fields": {
    "question": 1412,
    "text": "It disables all security features in Cloud Run",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7061,
  "fields": {
    "question": 1413,
    "text": "Static files won't be served properly",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7062,
  "fields": {
    "question": 1413,
    "text": "Django will respond with a \"Bad Request (400)\" error when accessed, as it's a security measure against HTTP Host header attacks",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7063,
  "fields": {
    "question": 1413,
    "text": "Only the admin interface will be inaccessible",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7064,
  "fields": {
    "question": 1413,
    "text": "The application will work normally but with reduced security",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7065,
  "fields": {
    "question": 1413,
    "text": "Cloud Run will automatically add the correct hosts during deployment",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7066,
  "fields": {
    "question": 1414,
    "text": "A custom CSRF middleware must be written specifically for Cloud Run",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7067,
  "fields": {
    "question": 1414,
    "text": "CSRF tokens must be stored in Google Cloud Storage instead of cookies",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7068,
  "fields": {
    "question": 1414,
    "text": "CSRF_TRUSTED_ORIGINS needs to include the Cloud Run service URL because Cloud Run sits behind Google's load balancers",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7069,
  "fields": {
    "question": 1414,
    "text": "Cloud Run automatically handles CSRF protection without Django configuration",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7070,
  "fields": {
    "question": 1414,
    "text": "CSRF protection must be disabled entirely on Cloud Run",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7071,
  "fields": {
    "question": 1415,
    "text": "Django will only run from a directory named /app in production environments",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7072,
  "fields": {
    "question": 1415,
    "text": "It automatically creates Django's application structure",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7073,
  "fields": {
    "question": 1415,
    "text": "Google Cloud Run requires the application to be in the /app directory",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7074,
  "fields": {
    "question": 1415,
    "text": "It sets the default directory inside the container, making subsequent paths simpler as all commands will be relative to /app",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7075,
  "fields": {
    "question": 1415,
    "text": "It's required to access Cloud SQL databases from containers",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7076,
  "fields": {
    "question": 1416,
    "text": "Use Google's dependency service instead of pip install",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7077,
  "fields": {
    "question": 1416,
    "text": "Bundle all dependencies directly in the application code to avoid installation",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7078,
  "fields": {
    "question": 1416,
    "text": "Create a separate builder stage that installs dependencies, then copy them to the runtime stage to keep the final image lean",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7079,
  "fields": {
    "question": 1416,
    "text": "Install all dependencies globally in the base system to ensure they're available to all containers",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7080,
  "fields": {
    "question": 1416,
    "text": "Download dependencies at runtime when the container starts",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7081,
  "fields": {
    "question": 1417,
    "text": "It defines the URL pattern that will be used to access static files",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7082,
  "fields": {
    "question": 1417,
    "text": "It disables static file access in production environments",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7083,
  "fields": {
    "question": 1417,
    "text": "It specifies the storage backend for static files, allowing Whitenoise to compress files and add version hashes for improved caching",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7084,
  "fields": {
    "question": 1417,
    "text": "It configures Google Cloud Storage to automatically synchronize with Django",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7085,
  "fields": {
    "question": 1417,
    "text": "It specifies which static files should be excluded from the deployment",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7086,
  "fields": {
    "question": 1418,
    "text": "Environment variables are faster to process than configuration files",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7087,
  "fields": {
    "question": 1418,
    "text": "It follows the 12-Factor App methodology, keeping secrets out of code and allowing Cloud Run to inject settings during deployment",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7088,
  "fields": {
    "question": 1418,
    "text": "Django can only read configuration from environment variables in production",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7089,
  "fields": {
    "question": 1418,
    "text": "It's the only way to override settings in the Django settings.py file",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7090,
  "fields": {
    "question": 1418,
    "text": "Google requires all Cloud Run applications to use environment variables",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7091,
  "fields": {
    "question": 1419,
    "text": "It allows more concurrent connections than larger instances",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7092,
  "fields": {
    "question": 1419,
    "text": "It has built-in Django ORM optimizations",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7093,
  "fields": {
    "question": 1419,
    "text": "It can automatically scale to handle traffic spikes",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7094,
  "fields": {
    "question": 1419,
    "text": "It provides automatic backups that larger instances don't have",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7095,
  "fields": {
    "question": 1419,
    "text": "It significantly reduces the ongoing cost while still providing sufficient performance for low-traffic applications",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7096,
  "fields": {
    "question": 1420,
    "text": "It allows Django to run without a WSGI server",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7097,
  "fields": {
    "question": 1420,
    "text": "It automatically optimizes your Django code to run 3x faster",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7098,
  "fields": {
    "question": 1420,
    "text": "It provides full administrative access to Google Cloud Platform",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7099,
  "fields": {
    "question": 1420,
    "text": "It eliminates the need for a database in Django applications",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7100,
  "fields": {
    "question": 1420,
    "text": "It ensures consistent packaging of the application and all its dependencies across different environments",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7101,
  "fields": {
    "question": 1421,
    "text": "Redirect to the login page so they can enter their credentials",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7102,
  "fields": {
    "question": 1421,
    "text": "Set a success message using the messages framework",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7103,
  "fields": {
    "question": 1421,
    "text": "Log the user in immediately using login(request, user)",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7104,
  "fields": {
    "question": 1421,
    "text": "Create a default profile linked to the user account",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7105,
  "fields": {
    "question": 1421,
    "text": "Send a verification email to activate their account",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7106,
  "fields": {
    "question": 1422,
    "text": "DEFAULT_REDIRECT_URL",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7107,
  "fields": {
    "question": 1422,
    "text": "LOGIN_REDIRECT_URL",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7108,
  "fields": {
    "question": 1422,
    "text": "SUCCESS_URL",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7109,
  "fields": {
    "question": 1422,
    "text": "AFTER_LOGIN_PATH",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7110,
  "fields": {
    "question": 1422,
    "text": "AUTH_REDIRECT",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7111,
  "fields": {
    "question": 1423,
    "text": "They are redirected to their profile page",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7112,
  "fields": {
    "question": 1423,
    "text": "They are redirected to the homepage",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7113,
  "fields": {
    "question": 1423,
    "text": "They are redirected back to the original page they were trying to access",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7114,
  "fields": {
    "question": 1423,
    "text": "They are redirected to the URL specified in LOGIN_REDIRECT_URL setting",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7115,
  "fields": {
    "question": 1423,
    "text": "They remain on the login success page",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7116,
  "fields": {
    "question": 1424,
    "text": "Because AuthenticationMiddleware depends on session data being loaded to retrieve user authentication information",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7117,
  "fields": {
    "question": 1424,
    "text": "Middleware order doesn't matter; it's just a convention in Django",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7118,
  "fields": {
    "question": 1424,
    "text": "Because Django processes middleware in reverse order during request processing",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7119,
  "fields": {
    "question": 1424,
    "text": "Because SessionMiddleware must create new sessions for users who log in through AuthenticationMiddleware",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7120,
  "fields": {
    "question": 1424,
    "text": "Because AuthenticationMiddleware needs to save user data to the session after authentication",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7121,
  "fields": {
    "question": 1425,
    "text": "The decorator logs the attempt and lets the view execute normally",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7122,
  "fields": {
    "question": 1425,
    "text": "The view returns None and the request continues to the next matching URL pattern",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7123,
  "fields": {
    "question": 1425,
    "text": "The user is redirected to an access denied page defined in settings.PERMISSION_DENIED_URL",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7124,
  "fields": {
    "question": 1425,
    "text": "The user is redirected to the homepage with an error message",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7125,
  "fields": {
    "question": 1425,
    "text": "A PermissionDenied exception is raised, resulting in a 403 Forbidden response",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7126,
  "fields": {
    "question": 1426,
    "text": "<pre><code class=\"language-python\">\n@requires(login=True, permission='app_label.permission_codename')\ndef my_view(request):\n    # View logic here\n</code></pre>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7127,
  "fields": {
    "question": 1426,
    "text": "<pre><code class=\"language-python\">\n@authentication_required\n@permission_required('app_label.permission_codename')\ndef my_view(request):\n    # View logic here\n</code></pre>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7128,
  "fields": {
    "question": 1426,
    "text": "<pre><code class=\"language-python\">\n@login_required\n@permission_required('app_label.permission_codename')\ndef my_view(request):\n    # View logic here\n</code></pre>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7129,
  "fields": {
    "question": 1426,
    "text": "<pre><code class=\"language-python\">\n@permission_required('app_label.permission_codename')\n@login_required\ndef my_view(request):\n    # View logic here\n</code></pre>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7130,
  "fields": {
    "question": 1426,
    "text": "<pre><code class=\"language-python\">\n@login_required\n@check_permission('app_label.permission_codename')\ndef my_view(request):\n    # View logic here\n</code></pre>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7131,
  "fields": {
    "question": 1427,
    "text": "SignUpForm",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7132,
  "fields": {
    "question": 1427,
    "text": "RegistrationForm",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7133,
  "fields": {
    "question": 1427,
    "text": "NewUserForm",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7134,
  "fields": {
    "question": 1427,
    "text": "UserCreationForm",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7135,
  "fields": {
    "question": 1427,
    "text": "AccountCreationForm",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7136,
  "fields": {
    "question": 1428,
    "text": "Using a management command like python manage.py createperms",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7137,
  "fields": {
    "question": 1428,
    "text": "Manually, by defining a permissions tuple in the model's Meta class",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7138,
  "fields": {
    "question": 1428,
    "text": "By specifying them in settings.py under PERMISSION_CLASSES",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7139,
  "fields": {
    "question": 1428,
    "text": "Automatically, when running migrations, Django creates add, change, delete, and view permissions for each model",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7140,
  "fields": {
    "question": 1428,
    "text": "Through the admin interface, by clicking \"Create Permissions\" for each model",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7141,
  "fields": {
    "question": 1429,
    "text": "Create a separate Role model with a foreign key to User",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7142,
  "fields": {
    "question": 1429,
    "text": "Define roles as boolean fields (is_editor, is_moderator) on the User model",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7143,
  "fields": {
    "question": 1429,
    "text": "Create Groups with appropriate permissions, and assign users to these groups",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7144,
  "fields": {
    "question": 1429,
    "text": "Use custom middleware that checks each user's role on every request",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7145,
  "fields": {
    "question": 1429,
    "text": "Assign individual permissions directly to each user",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7146,
  "fields": {
    "question": 1430,
    "text": "It provides a login form at the top of the rendered template",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7147,
  "fields": {
    "question": 1430,
    "text": "It restricts access to the view to authenticated users only, redirecting unauthenticated users to the login page",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7148,
  "fields": {
    "question": 1430,
    "text": "It validates that the current user has the required permissions to access the view",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7149,
  "fields": {
    "question": 1430,
    "text": "It adds the current user object to the template context automatically",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7150,
  "fields": {
    "question": 1430,
    "text": "It creates a new login session if the user's previous session has expired",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7151,
  "fields": {
    "question": 1431,
    "text": "<code>path('accounts/', include('django.contrib.auth.urls'))</code>",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7152,
  "fields": {
    "question": 1431,
    "text": "<code>url(r'^accounts/', django.contrib.auth.urls)</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7153,
  "fields": {
    "question": 1431,
    "text": "<code>path('auth/', import('django.contrib.auth.urls'))</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7154,
  "fields": {
    "question": 1431,
    "text": "<code>router.register('authentication', django.contrib.auth.urls)</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7155,
  "fields": {
    "question": 1431,
    "text": "<code>path('login/', django.contrib.auth.views.LoginView.as_view())</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7156,
  "fields": {
    "question": 1432,
    "text": "It creates a unique session ID for the login attempt",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7157,
  "fields": {
    "question": 1432,
    "text": "It validates that the form was generated by the server and not modified",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7158,
  "fields": {
    "question": 1432,
    "text": "It generates a secure token to prevent Cross-Site Request Forgery attacks",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7159,
  "fields": {
    "question": 1432,
    "text": "It prevents the browser from caching the form submission",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7160,
  "fields": {
    "question": 1432,
    "text": "It encrypts the form data during transmission",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7161,
  "fields": {
    "question": 1433,
    "text": "It specifies where to redirect users after successful login, often pointing to the protected page they were trying to access",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7162,
  "fields": {
    "question": 1433,
    "text": "It controls which fields are required in the login form",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7163,
  "fields": {
    "question": 1433,
    "text": "It indicates which login template to use for rendering the form",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7164,
  "fields": {
    "question": 1433,
    "text": "It specifies an alternate URL to use if login fails",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7165,
  "fields": {
    "question": 1433,
    "text": "It determines which authentication backend to use for validation",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7166,
  "fields": {
    "question": 1434,
    "text": "<code>request.user.permissions.check('app_label.permission_codename')</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7167,
  "fields": {
    "question": 1434,
    "text": "<code>django.contrib.auth.check_perm(request.user, 'app_label.permission_codename')</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7168,
  "fields": {
    "question": 1434,
    "text": "<code>request.user.has_perm('app_label.permission_codename')</code>",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7169,
  "fields": {
    "question": 1434,
    "text": "<code>user_permissions.contains('app_label.permission_codename')</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7170,
  "fields": {
    "question": 1434,
    "text": "<code>request.user.is_permitted('app_label.permission_codename')</code>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7171,
  "fields": {
    "question": 1435,
    "text": "It looks for a session cookie, retrieves the corresponding session data from the database, and makes it available to subsequent middleware and views",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7172,
  "fields": {
    "question": 1435,
    "text": "It validates the CSRF token in the request against the one in the session",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7173,
  "fields": {
    "question": 1435,
    "text": "It encrypts all sensitive session data before passing the request to the next middleware",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7174,
  "fields": {
    "question": 1435,
    "text": "It authenticates the user based on session data and attaches the user object to the request",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7175,
  "fields": {
    "question": 1435,
    "text": "It creates a new session for every request regardless of whether a session cookie exists",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7176,
  "fields": {
    "question": 1436,
    "text": "To indicate if a user has logged in at least once",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7177,
  "fields": {
    "question": 1436,
    "text": "To indicate whether a user account can log in, allowing accounts to be disabled without deletion",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7178,
  "fields": {
    "question": 1436,
    "text": "To mark whether a user has confirmed their email address",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7179,
  "fields": {
    "question": 1436,
    "text": "To track whether a user is currently logged into the application",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7180,
  "fields": {
    "question": 1436,
    "text": "To differentiate between regular users and admin users",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7181,
  "fields": {
    "question": 1437,
    "text": "last_name",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7182,
  "fields": {
    "question": 1437,
    "text": "is_superuser",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7183,
  "fields": {
    "question": 1437,
    "text": "phone_number",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7184,
  "fields": {
    "question": 1437,
    "text": "is_active",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7185,
  "fields": {
    "question": 1437,
    "text": "is_staff",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7186,
  "fields": {
    "question": 1438,
    "text": "<code>{% if user_permissions.app_label.permission_codename %}</code>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7187,
  "fields": {
    "question": 1438,
    "text": "<code>{% if user|has_permission:app_label.permission_codename %}</code>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7188,
  "fields": {
    "question": 1438,
    "text": "<code>{% if user.permissions.permission_codename %}</code>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7189,
  "fields": {
    "question": 1438,
    "text": "<code>{% if user.has_perm.app_label.permission_codename %}</code>",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7190,
  "fields": {
    "question": 1438,
    "text": "<code>{% if perms.app_label.permission_codename %}</code>",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7191,
  "fields": {
    "question": 1439,
    "text": "A way to grant limited permissions to unauthenticated visitors",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7192,
  "fields": {
    "question": 1439,
    "text": "A placeholder user created for guests who browse the site without logging in",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7193,
  "fields": {
    "question": 1439,
    "text": "A base class that must be subclassed to create custom user models",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7194,
  "fields": {
    "question": 1439,
    "text": "A special user instance that AuthenticationMiddleware attaches to request.user when no user is authenticated",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7195,
  "fields": {
    "question": 1439,
    "text": "A system user that owns background tasks and automated processes",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7196,
  "fields": {
    "question": 1440,
    "text": "<pre><code class=\"language-python\">\nclass SignUpForm(forms.ModelForm):\n    email = forms.EmailField(max_length=254, required=True)\n    \n    class Meta:\n        model = User\n        fields = UserCreationForm.Meta.fields + ('email',)\n</code></pre>",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7197,
  "fields": {
    "question": 1440,
    "text": "<pre><code class=\"language-python\">\nclass SignUpForm(UserCreationForm):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.fields['email'] = forms.EmailField(max_length=254, required=True)\n</code></pre>",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7198,
  "fields": {
    "question": 1440,
    "text": "<pre><code class=\"language-python\">\nclass SignUpForm(UserCreationForm):\n    email = forms.EmailField(max_length=254, required=True)\n    \n    class Meta:\n        extend = UserCreationForm\n        extra_fields = ('email',)\n</code></pre>",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7199,
  "fields": {
    "question": 1440,
    "text": "<pre><code class=\"language-python\">\nclass SignUpForm(UserCreationForm):\n    email = forms.EmailField(max_length=254, required=True)\n    \n    class Meta(UserCreationForm.Meta):\n        model = User\n        fields = ('username', 'email', 'password1', 'password2')\n</code></pre>",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7200,
  "fields": {
    "question": 1440,
    "text": "<pre><code class=\"language-python\">\nclass SignUpForm(forms.Form, UserCreationForm):\n    email = forms.EmailField(max_length=254, required=True)\n    \n    class Meta:\n        fields = ('username', 'email', 'password1', 'password2')\n</code></pre>",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7201,
  "fields": {
    "question": 1441,
    "text": "CreateView",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7202,
  "fields": {
    "question": 1441,
    "text": "UserView",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7203,
  "fields": {
    "question": 1441,
    "text": "FormView",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7204,
  "fields": {
    "question": 1441,
    "text": "RegistrationView",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7205,
  "fields": {
    "question": 1441,
    "text": "SignupView",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7206,
  "fields": {
    "question": 1442,
    "text": "'django.contrib.admin'",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7207,
  "fields": {
    "question": 1442,
    "text": "'django.contrib.sessions'",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7208,
  "fields": {
    "question": 1442,
    "text": "'django.contrib.contenttypes'",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7209,
  "fields": {
    "question": 1442,
    "text": "'django.contrib.staticfiles'",
    "position": 4,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7210,
  "fields": {
    "question": 1442,
    "text": "'django.contrib.auth'",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7211,
  "fields": {
    "question": 1443,
    "text": "As secure password hashes, not as plain text",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7212,
  "fields": {
    "question": 1443,
    "text": "As encrypted plain text that can be decrypted with the application's secret key",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7213,
  "fields": {
    "question": 1443,
    "text": "As base64-encoded strings that are decoded at login time",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7214,
  "fields": {
    "question": 1443,
    "text": "In plain text, but only accessible to superusers",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7215,
  "fields": {
    "question": 1443,
    "text": "In a separate encrypted database table referenced by foreign key",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7216,
  "fields": {
    "question": 1444,
    "text": "It restricts the user to only superuser-specific views and functions",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7217,
  "fields": {
    "question": 1444,
    "text": "It gives the user access to the admin interface but still requires explicit permissions",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7218,
  "fields": {
    "question": 1444,
    "text": "It grants the user all permissions automatically, bypassing normal permission checks",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7219,
  "fields": {
    "question": 1444,
    "text": "It permits the user to change site-wide settings but not individual model instances",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7220,
  "fields": {
    "question": 1444,
    "text": "It allows the user to create and modify other user accounts",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7221,
  "fields": {
    "question": 1445,
    "text": "The user's ID (stored as '_auth_user_id' in the session data)",
    "position": 1,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7222,
  "fields": {
    "question": 1445,
    "text": "The user's username and a hash of their password",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7223,
  "fields": {
    "question": 1445,
    "text": "The user's session expiration timestamp and authentication level",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7224,
  "fields": {
    "question": 1445,
    "text": "The user's complete User object including all permissions",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7225,
  "fields": {
    "question": 1445,
    "text": "A JWT token containing the user's identity and permissions",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7226,
  "fields": {
    "question": 1446,
    "text": "To ensure the browser doesn't cache the logout request",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7227,
  "fields": {
    "question": 1446,
    "text": "To prevent Cross-Site Request Forgery (CSRF) attacks where malicious sites could log users out without their consent",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7228,
  "fields": {
    "question": 1446,
    "text": "Because Django's authentication system only recognizes POST requests for state changes",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7229,
  "fields": {
    "question": 1446,
    "text": "Because logout operations require a larger payload than GET requests can handle",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7230,
  "fields": {
    "question": 1446,
    "text": "To hide the logout parameters from the URL for security reasons",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7231,
  "fields": {
    "question": 1447,
    "text": "IdentityMiddleware",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7232,
  "fields": {
    "question": 1447,
    "text": "SessionMiddleware",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7233,
  "fields": {
    "question": 1447,
    "text": "AuthenticationMiddleware",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7234,
  "fields": {
    "question": 1447,
    "text": "UserMiddleware",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7235,
  "fields": {
    "question": 1447,
    "text": "CsrfViewMiddleware",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7236,
  "fields": {
    "question": 1448,
    "text": "To organize users for messaging and notification purposes",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7237,
  "fields": {
    "question": 1448,
    "text": "To assign permissions to multiple users at once, implementing role-based access control",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7238,
  "fields": {
    "question": 1448,
    "text": "To implement multi-tenancy by isolating users into separate databases",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7239,
  "fields": {
    "question": 1448,
    "text": "To categorize users for analytics and reporting purposes",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7240,
  "fields": {
    "question": 1448,
    "text": "To restrict which admin pages a set of users can access",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7241,
  "fields": {
    "question": 1449,
    "text": "is_staff can only access model data, while is_superuser can access system settings",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7242,
  "fields": {
    "question": 1449,
    "text": "is_staff is for employees, while is_superuser is for site administrators",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7243,
  "fields": {
    "question": 1449,
    "text": "is_staff allows read access to all models, while is_superuser allows write access",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7244,
  "fields": {
    "question": 1449,
    "text": "is_staff allows viewing admin pages, while is_superuser allows making changes",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7245,
  "fields": {
    "question": 1449,
    "text": "is_staff grants access to the Django admin interface, while is_superuser automatically grants all permissions",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7246,
  "fields": {
    "question": 1450,
    "text": "Authentication applies to superusers only, while Authorization applies to all users",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7247,
  "fields": {
    "question": 1450,
    "text": "Authentication is handled by middleware, while Authorization is managed exclusively in the Django admin",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7248,
  "fields": {
    "question": 1450,
    "text": "Authentication verifies user identity (\"who are you?\"), while Authorization determines what an authenticated user can do (\"what can you do?\")",
    "position": 3,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7249,
  "fields": {
    "question": 1450,
    "text": "Authentication grants permissions to users, while Authorization verifies user credentials",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7250,
  "fields": {
    "question": 1450,
    "text": "Authentication is optional in Django projects, while Authorization is required for all views",
    "position": 5,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7251,
  "fields": {
    "question": 1451,
    "text": "@auth_with_perm('app_label.permission_codename')",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7252,
  "fields": {
    "question": 1451,
    "text": "@has_permission('app_label.permission_codename')",
    "position": 2,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7253,
  "fields": {
    "question": 1451,
    "text": "@user_has_perm('app_label.permission_codename')",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7254,
  "fields": {
    "question": 1451,
    "text": "@requires_permission('app_label.permission_codename')",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7255,
  "fields": {
    "question": 1451,
    "text": "@permission_required('app_label.permission_codename')",
    "position": 5,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7256,
  "fields": {
    "question": 1452,
    "text": "Whether the current user has any permissions",
    "position": 1,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7257,
  "fields": {
    "question": 1452,
    "text": "Whether the current user is logged in",
    "position": 2,
    "is_correct": true
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7258,
  "fields": {
    "question": 1452,
    "text": "Whether the current user has a valid email address",
    "position": 3,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7259,
  "fields": {
    "question": 1452,
    "text": "Whether the current user has confirmed their account",
    "position": 4,
    "is_correct": false
  }
},
{
  "model": "multi_choice_quiz.option",
  "pk": 7260,
  "fields": {
    "question": 1452,
    "text": "Whether the current user has staff privileges",
    "position": 5,
    "is_correct": false
  }
}
]
